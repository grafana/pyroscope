syntax = "proto3";

package settings.v1;

import "types/v1/types.proto";

service RecordingRulesService {
  rpc ListRecordingRules(ListRecordingRulesRequest) returns (ListRecordingRulesResponse) {}
  rpc InsertRecordingRule(InsertRecordingRuleRequest) returns (InsertRecordingRuleResponse) {}
  rpc DeleteRecordingRule(DeleteRecordingRuleRequest) returns (DeleteRecordingRuleResponse) {}
}

message ListRecordingRulesRequest {}

message ListRecordingRulesResponse {
  repeated RecordingRule_API rules = 1;
}

message InsertRecordingRuleRequest {
  string metric_name = 1;
  repeated string matchers = 2;
  repeated string group_by = 3;
  repeated types.v1.LabelPair external_labels = 4;
  string prometheus_data_source = 5;
}

message InsertRecordingRuleResponse {
  RecordingRule_API rule = 1;
}

message DeleteRecordingRuleRequest {
  string id = 1;
}

message DeleteRecordingRuleResponse {}

message RecordingRule_API {
  string id = 1;
  string metric_name = 2;
  string profile_type = 3;
  repeated string matchers = 4;
  repeated string group_by = 5;
  repeated types.v1.LabelPair external_labels = 6;
  string prometheus_data_source = 7;
}

message RecordingRule_Store {
  string id = 1;
  string metric_name = 2;
  string prometheus_data_source = 3;
  repeated string matchers = 4;
  repeated string group_by = 5;
  repeated types.v1.LabelPair external_labels = 6;
  int64 generation = 7;
}

message RecordingRules_Store {
  repeated RecordingRule_Store rules = 1;
  int64 generation = 2;
}
