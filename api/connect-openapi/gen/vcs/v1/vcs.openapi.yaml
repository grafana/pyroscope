openapi: 3.1.0
info:
  title: vcs.v1
  version: v1.0.0
tags:
  - name: scope/public
    description: This operation is considered part of the public API scope
  - name: scope/internal
    description: This operation is considered part of the interal API scope. There are no stability guaraentees when using those APIs.
  - name: vcs.v1.VCSService
paths:
  /vcs.v1.VCSService/GetCommit:
    post:
      tags:
        - vcs.v1.VCSService
      summary: GetCommit
      operationId: vcs.v1.VCSService.GetCommit
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vcs.v1.GetCommitRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vcs.v1.GetCommitResponse'
  /vcs.v1.VCSService/GetCommits:
    post:
      tags:
        - vcs.v1.VCSService
      summary: GetCommits
      operationId: vcs.v1.VCSService.GetCommits
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vcs.v1.GetCommitsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vcs.v1.GetCommitsResponse'
  /vcs.v1.VCSService/GetFile:
    post:
      tags:
        - vcs.v1.VCSService
      summary: GetFile
      operationId: vcs.v1.VCSService.GetFile
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vcs.v1.GetFileRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vcs.v1.GetFileResponse'
  /vcs.v1.VCSService/GithubApp:
    post:
      tags:
        - vcs.v1.VCSService
      summary: GithubApp
      operationId: vcs.v1.VCSService.GithubApp
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vcs.v1.GithubAppRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vcs.v1.GithubAppResponse'
  /vcs.v1.VCSService/GithubLogin:
    post:
      tags:
        - vcs.v1.VCSService
      summary: GithubLogin
      operationId: vcs.v1.VCSService.GithubLogin
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vcs.v1.GithubLoginRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vcs.v1.GithubLoginResponse'
  /vcs.v1.VCSService/GithubRefresh:
    post:
      tags:
        - vcs.v1.VCSService
      summary: GithubRefresh
      operationId: vcs.v1.VCSService.GithubRefresh
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vcs.v1.GithubRefreshRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vcs.v1.GithubRefreshResponse'
components:
  schemas:
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/connect.error_details.Any'
          description: A list of messages that carry the error details. There is no limit on the number of messages.
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    connect.error_details.Any:
      type: object
      properties:
        type:
          type: string
          description: 'A URL that acts as a globally unique identifier for the type of the serialized message. For example: `type.googleapis.com/google.rpc.ErrorInfo`. This is used to determine the schema of the data in the `value` field and is the discriminator for the `debug` field.'
        value:
          type: string
          format: binary
          description: The Protobuf message, serialized as bytes and base64-encoded. The specific message type is identified by the `type` field.
        debug:
          oneOf:
            - type: object
              title: Any
              additionalProperties: true
              description: Detailed error information.
          discriminator:
            propertyName: type
          title: Debug
          description: Deserialized error detail payload. The 'type' field indicates the schema. This field is for easier debugging and should not be relied upon for application logic.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message, with an additional debug field for ConnectRPC error details.
    vcs.v1.CommitAuthor:
      type: object
      properties:
        login:
          type: string
          title: login
          description: the author login
        avatarURL:
          type: string
          title: avatarURL
          description: the author avatar URL
      title: CommitAuthor
      additionalProperties: false
    vcs.v1.CommitInfo:
      type: object
      properties:
        message:
          type: string
          title: message
          description: the commit message
        author:
          title: author
          description: the commit author login
          $ref: '#/components/schemas/vcs.v1.CommitAuthor'
        date:
          type: string
          title: date
          description: the commit date
        sha:
          type: string
          title: sha
          description: the commit sha
        URL:
          type: string
          title: URL
          description: the full URL to the commit
      title: CommitInfo
      additionalProperties: false
    vcs.v1.GetCommitRequest:
      type: object
      properties:
        repositoryURL:
          type: string
          title: repositoryURL
          description: the full path to the repository
        ref:
          type: string
          title: ref
          description: the vcs ref to get the file from
      title: GetCommitRequest
      additionalProperties: false
    vcs.v1.GetCommitResponse:
      type: object
      properties:
        message:
          type: string
          title: message
          description: the commit message
        author:
          title: author
          description: the commit author login
          $ref: '#/components/schemas/vcs.v1.CommitAuthor'
        date:
          type: string
          title: date
          description: the commit date
        sha:
          type: string
          title: sha
          description: the commit sha
        URL:
          type: string
          title: URL
          description: the full URL to the commit
      title: GetCommitResponse
      additionalProperties: false
    vcs.v1.GetCommitsRequest:
      type: object
      properties:
        repositoryUrl:
          type: string
          title: repository_url
        refs:
          type: array
          items:
            type: string
          title: refs
      title: GetCommitsRequest
      additionalProperties: false
      description: New messages for the GetCommits method
    vcs.v1.GetCommitsResponse:
      type: object
      properties:
        commits:
          type: array
          items:
            $ref: '#/components/schemas/vcs.v1.CommitInfo'
          title: commits
      title: GetCommitsResponse
      additionalProperties: false
    vcs.v1.GetFileRequest:
      type: object
      properties:
        repositoryURL:
          type: string
          title: repositoryURL
          description: the full path to the repository
        ref:
          type: string
          title: ref
          description: the vcs ref to get the file from
        localPath:
          type: string
          title: localPath
          description: the path to the file as provided by the symbols
        rootPath:
          type: string
          title: rootPath
          description: the root path where the project lives inside the repository
      title: GetFileRequest
      additionalProperties: false
    vcs.v1.GetFileResponse:
      type: object
      properties:
        content:
          type: string
          title: content
          description: base64 content of the file
        URL:
          type: string
          title: URL
          description: the full URL to the file
      title: GetFileResponse
      additionalProperties: false
    vcs.v1.GithubAppRequest:
      type: object
      title: GithubAppRequest
      additionalProperties: false
    vcs.v1.GithubAppResponse:
      type: object
      properties:
        clientID:
          type: string
          title: clientID
          description: |-
            clientID must be propagated when calling https://github.com/login/oauth/authorize
             in the client_id query parameter.
        callbackURL:
          type: string
          title: callbackURL
          description: |-
            If callbackURL is not empty, the URL should be propagated when
             calling https://github.com/login/oauth/authorize in the
             redirect_uri query parameter.
      title: GithubAppResponse
      additionalProperties: false
    vcs.v1.GithubLoginRequest:
      type: object
      properties:
        authorizationCode:
          type: string
          title: authorizationCode
      title: GithubLoginRequest
      additionalProperties: false
    vcs.v1.GithubLoginResponse:
      type: object
      properties:
        cookie:
          type: string
          title: cookie
          description: |-
            Deprecated
             In future version, this cookie won't be sent. Now, old cookie is sent alongside the new expected
             data (token, token_expires_at and refresh_token_expires_at). Frontend will be responsible of computing
             its own cookie from the new data.
             Remove after completing https://github.com/grafana/explore-profiles/issues/187
        token:
          type: string
          title: token
          description: base64 encoded encrypted token
        tokenExpiresAt:
          type:
            - integer
            - string
          title: token_expires_at
          format: int64
          description: Unix ms timestamp of when the token expires.
        refreshTokenExpiresAt:
          type:
            - integer
            - string
          title: refresh_token_expires_at
          format: int64
          description: Unix ms timestamp of when the refresh token expires.
      title: GithubLoginResponse
      additionalProperties: false
    vcs.v1.GithubRefreshRequest:
      type: object
      title: GithubRefreshRequest
      additionalProperties: false
    vcs.v1.GithubRefreshResponse:
      type: object
      properties:
        cookie:
          type: string
          title: cookie
          description: |-
            Deprecated
             In future version, this cookie won't be sent. Now, old cookie is sent alongside the new expected
             data (token, token_expires_at and refresh_token_expires_at). Frontend will be responsible of computing
             its own cookie from the new data.
             Remove after completing https://github.com/grafana/explore-profiles/issues/187
        token:
          type: string
          title: token
          description: base64 encoded encrypted token
        tokenExpiresAt:
          type:
            - integer
            - string
          title: token_expires_at
          format: int64
          description: Unix ms timestamp of when the token expires.
        refreshTokenExpiresAt:
          type:
            - integer
            - string
          title: refresh_token_expires_at
          format: int64
          description: Unix ms timestamp of when the refresh token expires.
      title: GithubRefreshResponse
      additionalProperties: false
security: []
