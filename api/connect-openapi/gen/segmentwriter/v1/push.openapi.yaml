openapi: 3.1.0
info:
  title: segmentwriter.v1
  version: v1.0.0
tags:
  - name: scope/public
    description: This operation is considered part of the public API scope
  - name: scope/internal
    description: This operation is considered part of the interal API scope. There are no stability guaraentees when using those APIs.
  - name: segmentwriter.v1.SegmentWriterService
paths:
  /segmentwriter.v1.SegmentWriterService/Push:
    post:
      tags:
        - segmentwriter.v1.SegmentWriterService
      summary: Push
      operationId: segmentwriter.v1.SegmentWriterService.Push
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/segmentwriter.v1.PushRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/segmentwriter.v1.PushResponse'
components:
  schemas:
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/connect.error_details.Any'
          description: A list of messages that carry the error details. There is no limit on the number of messages.
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    connect.error_details.Any:
      type: object
      properties:
        type:
          type: string
          description: 'A URL that acts as a globally unique identifier for the type of the serialized message. For example: `type.googleapis.com/google.rpc.ErrorInfo`. This is used to determine the schema of the data in the `value` field and is the discriminator for the `debug` field.'
        value:
          type: string
          format: binary
          description: The Protobuf message, serialized as bytes and base64-encoded. The specific message type is identified by the `type` field.
        debug:
          oneOf:
            - type: object
              title: Any
              additionalProperties: true
              description: Detailed error information.
          discriminator:
            propertyName: type
          title: Debug
          description: Deserialized error detail payload. The 'type' field indicates the schema. This field is for easier debugging and should not be relied upon for application logic.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message, with an additional debug field for ConnectRPC error details.
    segmentwriter.v1.PushRequest:
      type: object
      properties:
        tenantId:
          type: string
          title: tenant_id
          description: Unique identifier for the tenant submitting the request.
        labels:
          type: array
          items:
            $ref: '#/components/schemas/types.v1.LabelPair'
          title: labels
          description: Label KV pairs of the series the profile belongs to.
        profile:
          type: string
          title: profile
          format: byte
          description: Profile data in binary format. Default format is pprof.
        profileId:
          type: string
          title: profile_id
          format: byte
          description: Unique identifier of the profile.
        shard:
          type: integer
          title: shard
          description: Shard identifier the profile belongs to.
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/types.v1.ProfileAnnotation'
          title: annotations
          description: Profile annotations with additional metadata.
      title: PushRequest
      additionalProperties: false
    segmentwriter.v1.PushResponse:
      type: object
      title: PushResponse
      additionalProperties: false
    types.v1.LabelPair:
      type: object
      properties:
        name:
          type: string
          examples:
            - service_name
          title: name
          description: Label name
        value:
          type: string
          examples:
            - my_service
          title: value
          description: Label value
      title: LabelPair
      additionalProperties: false
    types.v1.ProfileAnnotation:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: ProfileAnnotation
      additionalProperties: false
security: []
