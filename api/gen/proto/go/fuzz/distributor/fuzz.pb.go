// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: fuzz/distributor/fuzz.proto

package distributor

import (
	fuzz "github.com/grafana/pyroscope/api/gen/proto/go/fuzz"
	v11 "github.com/grafana/pyroscope/api/gen/proto/go/google/v1"
	_ "github.com/grafana/pyroscope/api/gen/proto/go/push/v1"
	v1 "github.com/grafana/pyroscope/api/gen/proto/go/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FuzzDistributor struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Requests       []*Request             `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	IngesterErrors []bool                 `protobuf:"varint,2,rep,packed,name=ingesterErrors,proto3" json:"ingesterErrors,omitempty"`
	Limits         *fuzz.ValidationLimits `protobuf:"bytes,3,opt,name=limits,proto3" json:"limits,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FuzzDistributor) Reset() {
	*x = FuzzDistributor{}
	mi := &file_fuzz_distributor_fuzz_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FuzzDistributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuzzDistributor) ProtoMessage() {}

func (x *FuzzDistributor) ProtoReflect() protoreflect.Message {
	mi := &file_fuzz_distributor_fuzz_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuzzDistributor.ProtoReflect.Descriptor instead.
func (*FuzzDistributor) Descriptor() ([]byte, []int) {
	return file_fuzz_distributor_fuzz_proto_rawDescGZIP(), []int{0}
}

func (x *FuzzDistributor) GetRequests() []*Request {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *FuzzDistributor) GetIngesterErrors() []bool {
	if x != nil {
		return x.IngesterErrors
	}
	return nil
}

func (x *FuzzDistributor) GetLimits() *fuzz.ValidationLimits {
	if x != nil {
		return x.Limits
	}
	return nil
}

type Request struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	Series                        []*Sample              `protobuf:"bytes,1,rep,name=series,proto3" json:"series,omitempty"`
	Tenant                        string                 `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	ReceivedCompressedProfileSize int64                  `protobuf:"varint,3,opt,name=ReceivedCompressedProfileSize,proto3" json:"ReceivedCompressedProfileSize,omitempty"`
	RawProfileType                string                 `protobuf:"bytes,4,opt,name=RawProfileType,proto3" json:"RawProfileType,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_fuzz_distributor_fuzz_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_fuzz_distributor_fuzz_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_fuzz_distributor_fuzz_proto_rawDescGZIP(), []int{1}
}

func (x *Request) GetSeries() []*Sample {
	if x != nil {
		return x.Series
	}
	return nil
}

func (x *Request) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *Request) GetReceivedCompressedProfileSize() int64 {
	if x != nil {
		return x.ReceivedCompressedProfileSize
	}
	return 0
}

func (x *Request) GetRawProfileType() string {
	if x != nil {
		return x.RawProfileType
	}
	return ""
}

type Sample struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Labels        []*v1.LabelPair        `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	MetricName    string                 `protobuf:"bytes,4,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	Profile       *v11.Profile           `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	ID            string                 `protobuf:"bytes,3,opt,name=ID,proto3" json:"ID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sample) Reset() {
	*x = Sample{}
	mi := &file_fuzz_distributor_fuzz_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample) ProtoMessage() {}

func (x *Sample) ProtoReflect() protoreflect.Message {
	mi := &file_fuzz_distributor_fuzz_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample.ProtoReflect.Descriptor instead.
func (*Sample) Descriptor() ([]byte, []int) {
	return file_fuzz_distributor_fuzz_proto_rawDescGZIP(), []int{2}
}

func (x *Sample) GetLabels() []*v1.LabelPair {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Sample) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *Sample) GetProfile() *v11.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Sample) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

var File_fuzz_distributor_fuzz_proto protoreflect.FileDescriptor

var file_fuzz_distributor_fuzz_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x66, 0x75, 0x7a, 0x7a, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x2f, 0x66, 0x75, 0x7a, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x66,
	0x75, 0x7a, 0x7a, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x1a,
	0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x66, 0x75, 0x7a, 0x7a, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x70, 0x75, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x0f, 0x46, 0x75, 0x7a, 0x7a, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x75, 0x7a,
	0x7a, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x75, 0x7a, 0x7a, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52,
	0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x75, 0x7a, 0x7a, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x06, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x44, 0x0a,
	0x1d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x1d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x43, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x61, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x61, 0x77,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x06,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x69, 0x72, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x42, 0xc2, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x75, 0x7a, 0x7a, 0x2e,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x42, 0x09, 0x46, 0x75, 0x7a,
	0x7a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2f, 0x70, 0x79, 0x72,
	0x6f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x66, 0x75, 0x7a, 0x7a, 0x2f, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0xa2, 0x02, 0x03, 0x46, 0x44, 0x58, 0xaa, 0x02,
	0x10, 0x46, 0x75, 0x7a, 0x7a, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0xca, 0x02, 0x10, 0x46, 0x75, 0x7a, 0x7a, 0x5c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0xe2, 0x02, 0x1c, 0x46, 0x75, 0x7a, 0x7a, 0x5c, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x46, 0x75, 0x7a, 0x7a, 0x3a, 0x3a, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_fuzz_distributor_fuzz_proto_rawDescOnce sync.Once
	file_fuzz_distributor_fuzz_proto_rawDescData []byte
)

func file_fuzz_distributor_fuzz_proto_rawDescGZIP() []byte {
	file_fuzz_distributor_fuzz_proto_rawDescOnce.Do(func() {
		file_fuzz_distributor_fuzz_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fuzz_distributor_fuzz_proto_rawDesc), len(file_fuzz_distributor_fuzz_proto_rawDesc)))
	})
	return file_fuzz_distributor_fuzz_proto_rawDescData
}

var file_fuzz_distributor_fuzz_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_fuzz_distributor_fuzz_proto_goTypes = []any{
	(*FuzzDistributor)(nil),       // 0: fuzz.distributor.FuzzDistributor
	(*Request)(nil),               // 1: fuzz.distributor.Request
	(*Sample)(nil),                // 2: fuzz.distributor.Sample
	(*fuzz.ValidationLimits)(nil), // 3: fuzz.ValidationLimits
	(*v1.LabelPair)(nil),          // 4: types.v1.LabelPair
	(*v11.Profile)(nil),           // 5: google.v1.Profile
}
var file_fuzz_distributor_fuzz_proto_depIdxs = []int32{
	1, // 0: fuzz.distributor.FuzzDistributor.requests:type_name -> fuzz.distributor.Request
	3, // 1: fuzz.distributor.FuzzDistributor.limits:type_name -> fuzz.ValidationLimits
	2, // 2: fuzz.distributor.Request.series:type_name -> fuzz.distributor.Sample
	4, // 3: fuzz.distributor.Sample.labels:type_name -> types.v1.LabelPair
	5, // 4: fuzz.distributor.Sample.profile:type_name -> google.v1.Profile
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_fuzz_distributor_fuzz_proto_init() }
func file_fuzz_distributor_fuzz_proto_init() {
	if File_fuzz_distributor_fuzz_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fuzz_distributor_fuzz_proto_rawDesc), len(file_fuzz_distributor_fuzz_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fuzz_distributor_fuzz_proto_goTypes,
		DependencyIndexes: file_fuzz_distributor_fuzz_proto_depIdxs,
		MessageInfos:      file_fuzz_distributor_fuzz_proto_msgTypes,
	}.Build()
	File_fuzz_distributor_fuzz_proto = out.File
	file_fuzz_distributor_fuzz_proto_goTypes = nil
	file_fuzz_distributor_fuzz_proto_depIdxs = nil
}
