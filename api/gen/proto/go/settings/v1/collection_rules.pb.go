// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: settings/v1/collection_rules.proto

package settingsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Enabled       bool                   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceData) Reset() {
	*x = ServiceData{}
	mi := &file_settings_v1_collection_rules_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceData) ProtoMessage() {}

func (x *ServiceData) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_collection_rules_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceData.ProtoReflect.Descriptor instead.
func (*ServiceData) Descriptor() ([]byte, []int) {
	return file_settings_v1_collection_rules_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceData) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type JavaSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JavaSettings) Reset() {
	*x = JavaSettings{}
	mi := &file_settings_v1_collection_rules_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JavaSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JavaSettings) ProtoMessage() {}

func (x *JavaSettings) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_collection_rules_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JavaSettings.ProtoReflect.Descriptor instead.
func (*JavaSettings) Descriptor() ([]byte, []int) {
	return file_settings_v1_collection_rules_proto_rawDescGZIP(), []int{1}
}

func (x *JavaSettings) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type EBPFSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EBPFSettings) Reset() {
	*x = EBPFSettings{}
	mi := &file_settings_v1_collection_rules_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EBPFSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EBPFSettings) ProtoMessage() {}

func (x *EBPFSettings) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_collection_rules_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EBPFSettings.ProtoReflect.Descriptor instead.
func (*EBPFSettings) Descriptor() ([]byte, []int) {
	return file_settings_v1_collection_rules_proto_rawDescGZIP(), []int{2}
}

func (x *EBPFSettings) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// UpsertCollectionRuleRequest is used to create / update a collection rule.
type UpsertCollectionRuleRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Name               string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Services           []*ServiceData         `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	Ebpf               *EBPFSettings          `protobuf:"bytes,3,opt,name=ebpf,proto3,oneof" json:"ebpf,omitempty"`
	Java               *JavaSettings          `protobuf:"bytes,4,opt,name=java,proto3,oneof" json:"java,omitempty"`
	ObservedGeneration *int64                 `protobuf:"varint,6,opt,name=observed_generation,json=observedGeneration,proto3,oneof" json:"observed_generation,omitempty"` // this is observed_generation of the existing object. Can be used to avoid update conflicts
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UpsertCollectionRuleRequest) Reset() {
	*x = UpsertCollectionRuleRequest{}
	mi := &file_settings_v1_collection_rules_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertCollectionRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertCollectionRuleRequest) ProtoMessage() {}

func (x *UpsertCollectionRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_collection_rules_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertCollectionRuleRequest.ProtoReflect.Descriptor instead.
func (*UpsertCollectionRuleRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_collection_rules_proto_rawDescGZIP(), []int{3}
}

func (x *UpsertCollectionRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertCollectionRuleRequest) GetServices() []*ServiceData {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *UpsertCollectionRuleRequest) GetEbpf() *EBPFSettings {
	if x != nil {
		return x.Ebpf
	}
	return nil
}

func (x *UpsertCollectionRuleRequest) GetJava() *JavaSettings {
	if x != nil {
		return x.Java
	}
	return nil
}

func (x *UpsertCollectionRuleRequest) GetObservedGeneration() int64 {
	if x != nil && x.ObservedGeneration != nil {
		return *x.ObservedGeneration
	}
	return 0
}

type GetCollectionRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCollectionRuleRequest) Reset() {
	*x = GetCollectionRuleRequest{}
	mi := &file_settings_v1_collection_rules_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollectionRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionRuleRequest) ProtoMessage() {}

func (x *GetCollectionRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_collection_rules_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionRuleRequest.ProtoReflect.Descriptor instead.
func (*GetCollectionRuleRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_collection_rules_proto_rawDescGZIP(), []int{4}
}

func (x *GetCollectionRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetCollectionRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Services      []*ServiceData         `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	Ebpf          *EBPFSettings          `protobuf:"bytes,3,opt,name=ebpf,proto3,oneof" json:"ebpf,omitempty"`
	Java          *JavaSettings          `protobuf:"bytes,4,opt,name=java,proto3,oneof" json:"java,omitempty"`
	LastUpdated   int64                  `protobuf:"varint,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"` // milliseconds unix time of last update
	Generation    int64                  `protobuf:"varint,6,opt,name=generation,proto3" json:"generation,omitempty"`                      //  incremented on each update
	Configuration string                 `protobuf:"bytes,7,opt,name=configuration,proto3" json:"configuration,omitempty"`                 // generated configuration block in alloy syntax
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCollectionRuleResponse) Reset() {
	*x = GetCollectionRuleResponse{}
	mi := &file_settings_v1_collection_rules_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollectionRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionRuleResponse) ProtoMessage() {}

func (x *GetCollectionRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_collection_rules_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionRuleResponse.ProtoReflect.Descriptor instead.
func (*GetCollectionRuleResponse) Descriptor() ([]byte, []int) {
	return file_settings_v1_collection_rules_proto_rawDescGZIP(), []int{5}
}

func (x *GetCollectionRuleResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCollectionRuleResponse) GetServices() []*ServiceData {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *GetCollectionRuleResponse) GetEbpf() *EBPFSettings {
	if x != nil {
		return x.Ebpf
	}
	return nil
}

func (x *GetCollectionRuleResponse) GetJava() *JavaSettings {
	if x != nil {
		return x.Java
	}
	return nil
}

func (x *GetCollectionRuleResponse) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *GetCollectionRuleResponse) GetGeneration() int64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *GetCollectionRuleResponse) GetConfiguration() string {
	if x != nil {
		return x.Configuration
	}
	return ""
}

type ListCollectionRulesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionRulesRequest) Reset() {
	*x = ListCollectionRulesRequest{}
	mi := &file_settings_v1_collection_rules_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionRulesRequest) ProtoMessage() {}

func (x *ListCollectionRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_collection_rules_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionRulesRequest.ProtoReflect.Descriptor instead.
func (*ListCollectionRulesRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_collection_rules_proto_rawDescGZIP(), []int{6}
}

type ListCollectionRulesResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Rules         []*GetCollectionRuleResponse `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	Generation    int64                        `protobuf:"varint,2,opt,name=generation,proto3" json:"generation,omitempty"` //  incremented on each update
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionRulesResponse) Reset() {
	*x = ListCollectionRulesResponse{}
	mi := &file_settings_v1_collection_rules_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionRulesResponse) ProtoMessage() {}

func (x *ListCollectionRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_collection_rules_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionRulesResponse.ProtoReflect.Descriptor instead.
func (*ListCollectionRulesResponse) Descriptor() ([]byte, []int) {
	return file_settings_v1_collection_rules_proto_rawDescGZIP(), []int{7}
}

func (x *ListCollectionRulesResponse) GetRules() []*GetCollectionRuleResponse {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ListCollectionRulesResponse) GetGeneration() int64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

type DeleteCollectionRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCollectionRuleRequest) Reset() {
	*x = DeleteCollectionRuleRequest{}
	mi := &file_settings_v1_collection_rules_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollectionRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionRuleRequest) ProtoMessage() {}

func (x *DeleteCollectionRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_collection_rules_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectionRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteCollectionRuleRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_collection_rules_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCollectionRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteCollectionRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCollectionRuleResponse) Reset() {
	*x = DeleteCollectionRuleResponse{}
	mi := &file_settings_v1_collection_rules_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollectionRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionRuleResponse) ProtoMessage() {}

func (x *DeleteCollectionRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_collection_rules_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectionRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteCollectionRuleResponse) Descriptor() ([]byte, []int) {
	return file_settings_v1_collection_rules_proto_rawDescGZIP(), []int{9}
}

// CollectionRuleStore is how the message gets stored in object store
type CollectionRuleStore struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Services      []*ServiceData         `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	Ebpf          *EBPFSettings          `protobuf:"bytes,3,opt,name=ebpf,proto3" json:"ebpf,omitempty"`
	Java          *JavaSettings          `protobuf:"bytes,4,opt,name=java,proto3" json:"java,omitempty"`
	LastUpdated   int64                  `protobuf:"varint,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"` // milliseconds unix time
	Generation    int64                  `protobuf:"varint,6,opt,name=generation,proto3" json:"generation,omitempty"`                      // milliseconds unix time
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectionRuleStore) Reset() {
	*x = CollectionRuleStore{}
	mi := &file_settings_v1_collection_rules_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionRuleStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionRuleStore) ProtoMessage() {}

func (x *CollectionRuleStore) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_collection_rules_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionRuleStore.ProtoReflect.Descriptor instead.
func (*CollectionRuleStore) Descriptor() ([]byte, []int) {
	return file_settings_v1_collection_rules_proto_rawDescGZIP(), []int{10}
}

func (x *CollectionRuleStore) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CollectionRuleStore) GetServices() []*ServiceData {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *CollectionRuleStore) GetEbpf() *EBPFSettings {
	if x != nil {
		return x.Ebpf
	}
	return nil
}

func (x *CollectionRuleStore) GetJava() *JavaSettings {
	if x != nil {
		return x.Java
	}
	return nil
}

func (x *CollectionRuleStore) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *CollectionRuleStore) GetGeneration() int64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

var File_settings_v1_collection_rules_proto protoreflect.FileDescriptor

var file_settings_v1_collection_rules_proto_rawDesc = string([]byte{
	0x0a, 0x22, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76,
	0x31, 0x22, 0x3b, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x28,
	0x0a, 0x0c, 0x4a, 0x61, 0x76, 0x61, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x28, 0x0a, 0x0c, 0x45, 0x42, 0x50, 0x46,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0xb5, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x04,
	0x65, 0x62, 0x70, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x42, 0x50, 0x46, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x04, 0x65, 0x62, 0x70, 0x66, 0x88, 0x01, 0x01,
	0x12, 0x32, 0x0a, 0x04, 0x6a, 0x61, 0x76, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x61, 0x76,
	0x61, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x01, 0x52, 0x04, 0x6a, 0x61, 0x76,
	0x61, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x13, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x02, 0x52, 0x12, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x65,
	0x62, 0x70, 0x66, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6a, 0x61, 0x76, 0x61, 0x42, 0x16, 0x0a, 0x14,
	0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0x2e, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc8, 0x02, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x65, 0x62, 0x70, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x42, 0x50, 0x46, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x04, 0x65,
	0x62, 0x70, 0x66, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x04, 0x6a, 0x61, 0x76, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4a, 0x61, 0x76, 0x61, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48,
	0x01, 0x52, 0x04, 0x6a, 0x61, 0x76, 0x61, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x65, 0x62, 0x70, 0x66, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6a, 0x61, 0x76, 0x61, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x7b, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x31, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x65, 0x62, 0x70, 0x66, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x42, 0x50, 0x46, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04,
	0x65, 0x62, 0x70, 0x66, 0x12, 0x2d, 0x0a, 0x04, 0x6a, 0x61, 0x76, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4a, 0x61, 0x76, 0x61, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x6a,
	0x61, 0x76, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xc5, 0x03, 0x0a, 0x16, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x14, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x28, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6d, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xba,
	0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x76, 0x31, 0x42, 0x14, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2f, 0x70,
	0x79, 0x72, 0x6f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x17, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_settings_v1_collection_rules_proto_rawDescOnce sync.Once
	file_settings_v1_collection_rules_proto_rawDescData []byte
)

func file_settings_v1_collection_rules_proto_rawDescGZIP() []byte {
	file_settings_v1_collection_rules_proto_rawDescOnce.Do(func() {
		file_settings_v1_collection_rules_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_settings_v1_collection_rules_proto_rawDesc), len(file_settings_v1_collection_rules_proto_rawDesc)))
	})
	return file_settings_v1_collection_rules_proto_rawDescData
}

var file_settings_v1_collection_rules_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_settings_v1_collection_rules_proto_goTypes = []any{
	(*ServiceData)(nil),                  // 0: settings.v1.ServiceData
	(*JavaSettings)(nil),                 // 1: settings.v1.JavaSettings
	(*EBPFSettings)(nil),                 // 2: settings.v1.EBPFSettings
	(*UpsertCollectionRuleRequest)(nil),  // 3: settings.v1.UpsertCollectionRuleRequest
	(*GetCollectionRuleRequest)(nil),     // 4: settings.v1.GetCollectionRuleRequest
	(*GetCollectionRuleResponse)(nil),    // 5: settings.v1.GetCollectionRuleResponse
	(*ListCollectionRulesRequest)(nil),   // 6: settings.v1.ListCollectionRulesRequest
	(*ListCollectionRulesResponse)(nil),  // 7: settings.v1.ListCollectionRulesResponse
	(*DeleteCollectionRuleRequest)(nil),  // 8: settings.v1.DeleteCollectionRuleRequest
	(*DeleteCollectionRuleResponse)(nil), // 9: settings.v1.DeleteCollectionRuleResponse
	(*CollectionRuleStore)(nil),          // 10: settings.v1.CollectionRuleStore
}
var file_settings_v1_collection_rules_proto_depIdxs = []int32{
	0,  // 0: settings.v1.UpsertCollectionRuleRequest.services:type_name -> settings.v1.ServiceData
	2,  // 1: settings.v1.UpsertCollectionRuleRequest.ebpf:type_name -> settings.v1.EBPFSettings
	1,  // 2: settings.v1.UpsertCollectionRuleRequest.java:type_name -> settings.v1.JavaSettings
	0,  // 3: settings.v1.GetCollectionRuleResponse.services:type_name -> settings.v1.ServiceData
	2,  // 4: settings.v1.GetCollectionRuleResponse.ebpf:type_name -> settings.v1.EBPFSettings
	1,  // 5: settings.v1.GetCollectionRuleResponse.java:type_name -> settings.v1.JavaSettings
	5,  // 6: settings.v1.ListCollectionRulesResponse.rules:type_name -> settings.v1.GetCollectionRuleResponse
	0,  // 7: settings.v1.CollectionRuleStore.services:type_name -> settings.v1.ServiceData
	2,  // 8: settings.v1.CollectionRuleStore.ebpf:type_name -> settings.v1.EBPFSettings
	1,  // 9: settings.v1.CollectionRuleStore.java:type_name -> settings.v1.JavaSettings
	4,  // 10: settings.v1.CollectionRulesService.GetCollectionRule:input_type -> settings.v1.GetCollectionRuleRequest
	3,  // 11: settings.v1.CollectionRulesService.UpsertCollectionRule:input_type -> settings.v1.UpsertCollectionRuleRequest
	6,  // 12: settings.v1.CollectionRulesService.ListCollectionRules:input_type -> settings.v1.ListCollectionRulesRequest
	8,  // 13: settings.v1.CollectionRulesService.DeleteCollectionRule:input_type -> settings.v1.DeleteCollectionRuleRequest
	5,  // 14: settings.v1.CollectionRulesService.GetCollectionRule:output_type -> settings.v1.GetCollectionRuleResponse
	5,  // 15: settings.v1.CollectionRulesService.UpsertCollectionRule:output_type -> settings.v1.GetCollectionRuleResponse
	7,  // 16: settings.v1.CollectionRulesService.ListCollectionRules:output_type -> settings.v1.ListCollectionRulesResponse
	9,  // 17: settings.v1.CollectionRulesService.DeleteCollectionRule:output_type -> settings.v1.DeleteCollectionRuleResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_settings_v1_collection_rules_proto_init() }
func file_settings_v1_collection_rules_proto_init() {
	if File_settings_v1_collection_rules_proto != nil {
		return
	}
	file_settings_v1_collection_rules_proto_msgTypes[3].OneofWrappers = []any{}
	file_settings_v1_collection_rules_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_settings_v1_collection_rules_proto_rawDesc), len(file_settings_v1_collection_rules_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_settings_v1_collection_rules_proto_goTypes,
		DependencyIndexes: file_settings_v1_collection_rules_proto_depIdxs,
		MessageInfos:      file_settings_v1_collection_rules_proto_msgTypes,
	}.Build()
	File_settings_v1_collection_rules_proto = out.File
	file_settings_v1_collection_rules_proto_goTypes = nil
	file_settings_v1_collection_rules_proto_depIdxs = nil
}
