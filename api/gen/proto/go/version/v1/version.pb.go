// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: version/v1/version.proto

package versionv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionRequest) Reset() {
	*x = VersionRequest{}
	mi := &file_version_v1_version_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRequest) ProtoMessage() {}

func (x *VersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_version_v1_version_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRequest.ProtoReflect.Descriptor instead.
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return file_version_v1_version_proto_rawDescGZIP(), []int{0}
}

type VersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuerierAPI    uint64                 `protobuf:"varint,1,opt,name=QuerierAPI,proto3" json:"QuerierAPI,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	mi := &file_version_v1_version_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_version_v1_version_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_version_v1_version_proto_rawDescGZIP(), []int{1}
}

func (x *VersionResponse) GetQuerierAPI() uint64 {
	if x != nil {
		return x.QuerierAPI
	}
	return 0
}

type InstanceVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	ID    string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Addr  string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// Unix timestamp (with nanoseconds precision) of the last heartbeat sent
	// by this instance.
	Timestamp int64 `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	// Querier Service API version
	QuerierAPI uint64 `protobuf:"varint,4,opt,name=QuerierAPI,proto3" json:"QuerierAPI,omitempty"`
	// Tells if the instance is running or has left cluster.
	Left          bool `protobuf:"varint,5,opt,name=left,proto3" json:"left,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstanceVersion) Reset() {
	*x = InstanceVersion{}
	mi := &file_version_v1_version_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceVersion) ProtoMessage() {}

func (x *InstanceVersion) ProtoReflect() protoreflect.Message {
	mi := &file_version_v1_version_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceVersion.ProtoReflect.Descriptor instead.
func (*InstanceVersion) Descriptor() ([]byte, []int) {
	return file_version_v1_version_proto_rawDescGZIP(), []int{2}
}

func (x *InstanceVersion) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *InstanceVersion) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *InstanceVersion) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *InstanceVersion) GetQuerierAPI() uint64 {
	if x != nil {
		return x.QuerierAPI
	}
	return 0
}

func (x *InstanceVersion) GetLeft() bool {
	if x != nil {
		return x.Left
	}
	return false
}

// Versions is the top-level type used to model version for all instances, containing information for individual instances.
type Versions struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Instances     map[string]*InstanceVersion `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Versions) Reset() {
	*x = Versions{}
	mi := &file_version_v1_version_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Versions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Versions) ProtoMessage() {}

func (x *Versions) ProtoReflect() protoreflect.Message {
	mi := &file_version_v1_version_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Versions.ProtoReflect.Descriptor instead.
func (*Versions) Descriptor() ([]byte, []int) {
	return file_version_v1_version_proto_rawDescGZIP(), []int{3}
}

func (x *Versions) GetInstances() map[string]*InstanceVersion {
	if x != nil {
		return x.Instances
	}
	return nil
}

var File_version_v1_version_proto protoreflect.FileDescriptor

const file_version_v1_version_proto_rawDesc = "" +
	"\n" +
	"\x18version/v1/version.proto\x12\n" +
	"version.v1\"\x10\n" +
	"\x0eVersionRequest\"1\n" +
	"\x0fVersionResponse\x12\x1e\n" +
	"\n" +
	"QuerierAPI\x18\x01 \x01(\x04R\n" +
	"QuerierAPI\"\x87\x01\n" +
	"\x0fInstanceVersion\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12\x1c\n" +
	"\tTimestamp\x18\x03 \x01(\x03R\tTimestamp\x12\x1e\n" +
	"\n" +
	"QuerierAPI\x18\x04 \x01(\x04R\n" +
	"QuerierAPI\x12\x12\n" +
	"\x04left\x18\x05 \x01(\bR\x04left\"\xa8\x01\n" +
	"\bVersions\x12A\n" +
	"\tinstances\x18\x01 \x03(\v2#.version.v1.Versions.InstancesEntryR\tinstances\x1aY\n" +
	"\x0eInstancesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.version.v1.InstanceVersionR\x05value:\x028\x012O\n" +
	"\aVersion\x12D\n" +
	"\aVersion\x12\x1a.version.v1.VersionRequest\x1a\x1b.version.v1.VersionResponse\"\x00B\xab\x01\n" +
	"\x0ecom.version.v1B\fVersionProtoP\x01ZBgithub.com/grafana/pyroscope/api/gen/proto/go/version/v1;versionv1\xa2\x02\x03VXX\xaa\x02\n" +
	"Version.V1\xca\x02\n" +
	"Version\\V1\xe2\x02\x16Version\\V1\\GPBMetadata\xea\x02\vVersion::V1b\x06proto3"

var (
	file_version_v1_version_proto_rawDescOnce sync.Once
	file_version_v1_version_proto_rawDescData []byte
)

func file_version_v1_version_proto_rawDescGZIP() []byte {
	file_version_v1_version_proto_rawDescOnce.Do(func() {
		file_version_v1_version_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_version_v1_version_proto_rawDesc), len(file_version_v1_version_proto_rawDesc)))
	})
	return file_version_v1_version_proto_rawDescData
}

var file_version_v1_version_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_version_v1_version_proto_goTypes = []any{
	(*VersionRequest)(nil),  // 0: version.v1.VersionRequest
	(*VersionResponse)(nil), // 1: version.v1.VersionResponse
	(*InstanceVersion)(nil), // 2: version.v1.InstanceVersion
	(*Versions)(nil),        // 3: version.v1.Versions
	nil,                     // 4: version.v1.Versions.InstancesEntry
}
var file_version_v1_version_proto_depIdxs = []int32{
	4, // 0: version.v1.Versions.instances:type_name -> version.v1.Versions.InstancesEntry
	2, // 1: version.v1.Versions.InstancesEntry.value:type_name -> version.v1.InstanceVersion
	0, // 2: version.v1.Version.Version:input_type -> version.v1.VersionRequest
	1, // 3: version.v1.Version.Version:output_type -> version.v1.VersionResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_version_v1_version_proto_init() }
func file_version_v1_version_proto_init() {
	if File_version_v1_version_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_version_v1_version_proto_rawDesc), len(file_version_v1_version_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_version_v1_version_proto_goTypes,
		DependencyIndexes: file_version_v1_version_proto_depIdxs,
		MessageInfos:      file_version_v1_version_proto_msgTypes,
	}.Build()
	File_version_v1_version_proto = out.File
	file_version_v1_version_proto_goTypes = nil
	file_version_v1_version_proto_depIdxs = nil
}
