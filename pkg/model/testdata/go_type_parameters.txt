github.com/bufbuild/connect-go.(*Client[go.shape.struct { github.com/grafana/pyroscope/api/gen/proto/go/push/v1.state google.golang.org/protobuf/internal/impl.MessageState; github.com/grafana/pyroscope/api/gen/proto/go/push/v1.sizeCache int32; github.com/grafana/pyroscope/api/gen/proto/go/push/v1.unknownFields []uint8; Series []*github.com/grafana/pyroscope/api/gen/proto/go/push/v1.RawProfileSeries \"protobuf:\\\"bytes,1,rep,name=series,proto3\\\" json:\\\"series,omitempty\\\"\" },go.shape.struct { github.com/grafana/pyroscope/api/gen/proto/go/push/v1.state google.golang.org/protobuf/internal/impl.MessageState; github.com/grafana/pyroscope/api/gen/proto/go/push/v1.sizeCache int32; github.com/grafana/pyroscope/api/gen/proto/go/push/v1.unknownFields []uint8 }]).CallUnary
github.com/bufbuild/connect-go.(*Request[go.shape.struct { github.com/grafana/pyroscope/api/gen/proto/go/push/v1.state google.golang.org/protobuf/internal/impl.MessageState; github.com/grafana/pyroscope/api/gen/proto/go/push/v1.sizeCache int32; github.com/grafana/pyroscope/api/gen/proto/go/push/v1.unknownFields []uint8; Series []*github.com/grafana/pyroscope/api/gen/proto/go/push/v1.RawProfileSeries \"protobuf:\\\"bytes,1,rep,name=series,proto3\\\" json:\\\"series,omitempty\\\"\" }]).setRequestMethod
github.com/bufbuild/connect-go.(*Response[go.shape.struct { github.com/grafana/pyroscope/api/gen/proto/go/push/v1.state google.golang.org/protobuf/internal/impl.MessageState; github.com/grafana/pyroscope/api/gen/proto/go/push/v1.sizeCache int32; github.com/grafana/pyroscope/api/gen/proto/go/push/v1.unknownFields []uint8 }]).Header
github.com/bufbuild/connect-go.NewClient[go.shape.struct { github.com/grafana/pyroscope/api/gen/proto/go/types/v1.state google.golang.org/protobuf/internal/impl.MessageState; github.com/grafana/pyroscope/api/gen/proto/go/types/v1.sizeCache int32; github.com/grafana/pyroscope/api/gen/proto/go/types/v1.unknownFields []uint8; Matchers []string \"protobuf:\\\"bytes,1,rep,name=matchers,proto3\\\" json:\\\"matchers,omitempty\\\"\" },go.shape.struct { github.com/grafana/pyroscope/api/gen/proto/go/types/v1.state google.golang.org/protobuf/internal/impl.MessageState; github.com/grafana/pyroscope/api/gen/proto/go/types/v1.sizeCache int32; github.com/grafana/pyroscope/api/gen/proto/go/types/v1.unknownFields []uint8; Names []string \"protobuf:\\\"bytes,1,rep,name=names,proto3\\\" json:\\\"names,omitempty\\\"\" }].func2
github.com/bufbuild/connect-go.NewRequest[go.shape.struct { github.com/grafana/pyroscope/api/gen/proto/go/push/v1.state google.golang.org/protobuf/internal/impl.MessageState; github.com/grafana/pyroscope/api/gen/proto/go/push/v1.sizeCache int32; github.com/grafana/pyroscope/api/gen/proto/go/push/v1.unknownFields []uint8; Series []*github.com/grafana/pyroscope/api/gen/proto/go/push/v1.RawProfileSeries \"protobuf:\\\"bytes,1,rep,name=series,proto3\\\" json:\\\"series,omitempty\\\"\" }]
github.com/bufbuild/connect-go.NewResponse[go.shape.struct { github.com/grafana/pyroscope/api/gen/proto/go/push/v1.state google.golang.org/protobuf/internal/impl.MessageState; github.com/grafana/pyroscope/api/gen/proto/go/push/v1.sizeCache int32; github.com/grafana/pyroscope/api/gen/proto/go/push/v1.unknownFields []uint8 }]
github.com/bufbuild/connect-go.NewUnaryHandler[go.shape.struct { github.com/grafana/pyroscope/api/gen/proto/go/types/v1.state google.golang.org/protobuf/internal/impl.MessageState; github.com/grafana/pyroscope/api/gen/proto/go/types/v1.sizeCache int32; github.com/grafana/pyroscope/api/gen/proto/go/types/v1.unknownFields []uint8; Name string \"protobuf:\\\"bytes,1,opt,name=name,proto3\\\" json:\\\"name,omitempty\\\"\"; Matchers []string \"protobuf:\\\"bytes,2,rep,name=matchers,proto3\\\" json:\\\"matchers,omitempty\\\"\" },go.shape.struct { github.com/grafana/pyroscope/api/gen/proto/go/types/v1.state google.golang.org/protobuf/internal/impl.MessageState; github.com/grafana/pyroscope/api/gen/proto/go/types/v1.sizeCache int32; github.com/grafana/pyroscope/api/gen/proto/go/types/v1.unknownFields []uint8; Names []string \"protobuf:\\\"bytes,1,rep,name=names,proto3\\\" json:\\\"names,omitempty\\\"\" }].func2
github.com/grafana/pyroscope/pkg/util/loser.(*Tree[go.shape.struct { github.com/grafana/pyroscope/pkg/phlaredb.Profile; Index int },go.shape.interface { At() go.shape.struct { github.com/grafana/pyroscope/pkg/phlaredb.Profile; Index int }; Close() error; Err() error; Next() bool }]).Next
runtime/internal/atomic.(*Pointer[go.shape.struct { runtime.lfnode; runtime.popped runtime/internal/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }]).Load
sync/atomic.(*Pointer[go.shape.struct { net/http.conn *net/http.conn; net/http.req *net/http.Request; net/http.reqBody io.ReadCloser; net/http.cancelCtx context.CancelFunc; net/http.wroteHeader bool; net/http.wroteContinue bool; net/http.wants10KeepAlive bool; net/http.wantsClose bool; net/http.canWriteContinue sync/atomic.Bool; net/http.writeContinueMu sync.Mutex; net/http.w *bufio.Writer; net/http.cw net/http.chunkWriter; net/http.handlerHeader net/http.Header; net/http.calledHeader bool; net/http.written int64; net/http.contentLength int64; net/http.status int; net/http.closeAfterReply bool; net/http.fullDuplex bool; net/http.requestBodyLimitHit bool; net/http.trailers []string; net/http.handlerDone sync/atomic.Bool; net/http.dateBuf [29]uint8; net/http.clenBuf [10]uint8; net/http.statusBuf [3]uint8; net/http.closeNotifyCh chan bool; net/http.didCloseNotify sync/atomic.Bool }]).Store
github.com/grafana/pyroscope/pkg/phlaredb/symdb.(*deduplicatingSlice[go.shape.*github.com/grafana/pyroscope/pkg/phlaredb/schemas/v1.InMemoryLocation,go.shape.struct { MappingId uint32; Address uint64; LinesHash uint64 },go.shape.*uint8]).ingest
