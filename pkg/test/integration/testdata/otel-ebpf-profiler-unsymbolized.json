{
  "sample_types": [
    {
      "type": "cpu",
      "unit": "nanoseconds"
    }
  ],
  "samples": [
    {
      "locations": [
        {
          "address": "0x4e",
          "lines": [
            {
              "function": {
                "name": "java.util.Set com.intellij.openapi.fileEditor.impl.FileEditorManagerImplKt.getEditorTypeIds(com.intellij.openapi.fileEditor.impl.EditorComposite)",
                "filename": "FileEditorManagerImpl.kt"
              },
              "line": 2522
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.util.Set com.intellij.openapi.fileEditor.impl.FileEditorManagerImplKt.access$getEditorTypeIds(com.intellij.openapi.fileEditor.impl.EditorComposite)",
                "filename": "FileEditorManagerImpl.kt"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd7",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl.dumbModeFinished(com.intellij.openapi.project.Project, com.intellij.openapi.fileEditor.ex.FileEditorProviderManager, kotlin.coroutines.Continuation)",
                "filename": "FileEditorManagerImpl.kt"
              },
              "line": 447
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl.access$dumbModeFinished(com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl, com.intellij.openapi.project.Project, com.intellij.openapi.fileEditor.ex.FileEditorProviderManager, kotlin.coroutines.Continuation)",
                "filename": "FileEditorManagerImpl.kt"
              },
              "line": 118
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl$dumbModeFinished$1.invokeSuspend(java.lang.Object)",
                "filename": "FileEditorManagerImpl.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xcc3a29",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xcc3a29"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x685b45",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x685b45"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xdb21d0",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xdb21d0"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xdb24bc",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xdb24bc"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x6a88bb72f03b51a0",
          "lines": [
            {
              "function": {
                "name": "ExceptionBlob"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13d",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 102
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x6f6353f7de2420d8",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (final stubs) [arrayof_jbyte_disjoint_arraycopy]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginData com.intellij.ide.plugins.advertiser.PluginData$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginData$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 13
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.CompositeDecoder$DefaultImpls.decodeSerializableElement$default(kotlinx.serialization.encoding.CompositeDecoder, kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object, int, java.lang.Object)",
                "filename": "Decoding.kt"
              },
              "line": 538
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.CollectionLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 80
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.AbstractCollectionSerializer.readElement$default(kotlinx.serialization.internal.AbstractCollectionSerializer, kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean, int, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x82",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginDataSet com.intellij.ide.plugins.advertiser.PluginDataSet$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginDataSet$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.CompositeDecoder$DefaultImpls.decodeSerializableElement$default(kotlinx.serialization.encoding.CompositeDecoder, kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object, int, java.lang.Object)",
                "filename": "Decoding.kt"
              },
              "line": 538
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.util.Map, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 111
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 84
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.AbstractCollectionSerializer.readElement$default(kotlinx.serialization.internal.AbstractCollectionSerializer, kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean, int, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginFeatureMap com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.Cbor.decodeFromByteArray(kotlinx.serialization.DeserializationStrategy, byte[])",
                "filename": "Cbor.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x81",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.InternalStateStorageService.getValue(java.lang.String, com.intellij.platform.settings.SettingSerializerDescriptor, com.intellij.openapi.extensions.PluginId)",
                "filename": "InternalStateStorageService.kt"
              },
              "line": 58
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.LocalSettingsController.getItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "LocalSettingsController.kt"
              },
              "line": 34
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.doGetItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 37
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.getItem(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.SettingImpl.get()",
                "filename": "SettingDescriptorImpl.kt"
              },
              "line": 115
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc5",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsData com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsStateService$ExtensionDataProvider.requestExtensionData$intellij_platform_ide_impl(java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "State.kt"
              },
              "line": 191
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x77",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider$AdvertiserSuggestion com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProviderKt.getSuggestionData(com.intellij.openapi.project.Project, java.lang.String, java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 293
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc2",
          "lines": [
            {
              "function": {
                "name": "java.util.function.Function com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider.collectNotificationData(com.intellij.openapi.project.Project, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 57
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.util.Optional com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend$lambda$1(com.intellij.openapi.vfs.VirtualFile, com.intellij.ui.EditorNotificationsImpl, com.intellij.ui.EditorNotificationProvider)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 244
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.insideReadAction()",
                "filename": "InternalReadAction.kt"
              },
              "line": 114
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable$lambda$4(com.intellij.openapi.application.rw.InternalReadAction)",
                "filename": "InternalReadAction.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2$lambda$1(kotlinx.coroutines.CompletableJob, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x71",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.tryRunReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 351
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 971
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2(kotlinx.coroutines.CompletableJob, com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtilService.runActionAndCancelBeforeWrite(java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtilService.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runActionAndCancelBeforeWrite(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x72",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 103
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.readLoop(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 74
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.access$readLoop(com.intellij.openapi.application.rw.InternalReadAction, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x59",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invokeSuspend(java.lang.Object)",
                "filename": "InternalReadAction.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(java.lang.Object, java.lang.Object)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.runReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 49
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.PlatformReadWriteActionSupport.executeReadAction(java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "PlatformReadWriteActionSupport.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadWriteActionSupport.executeReadAction$default(com.intellij.openapi.application.ReadWriteActionSupport, java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)",
                "filename": "ReadWriteActionSupport.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.constrainedReadAction(com.intellij.openapi.application.ReadConstraint[], kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.readAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x189",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend(java.lang.Object)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 241
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x1b",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.locks.LockSupport.parkNanos(long)",
                "filename": "LockSupport.java"
              },
              "line": 410
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x56",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 785
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x98d61",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x98d61"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x9bc7d",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9bc7d"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0xd141d3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd141d3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xfb3d80",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xfb3d80"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "void jdk.internal.misc.Unsafe.park(boolean, long)",
                "filename": "Unsafe.java"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1b",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.locks.LockSupport.parkNanos(long)",
                "filename": "LockSupport.java"
              },
              "line": 410
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x56",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 785
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x1228fa4",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x98d60",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x98d60"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x9bc7d",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9bc7d"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0xd141d3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd141d3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xfb3d80",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xfb3d80"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "void jdk.internal.misc.Unsafe.park(boolean, long)",
                "filename": "Unsafe.java"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1b",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.locks.LockSupport.parkNanos(long)",
                "filename": "LockSupport.java"
              },
              "line": 410
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x56",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 785
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.internal.ThreadContextKt$countAll$1.invoke(java.lang.Object, java.lang.Object)",
                "filename": "ThreadContext.kt"
              },
              "line": 31
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x16",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlin.coroutines.CombinedContext.fold(java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "CoroutineContextImpl.kt"
              },
              "line": 131
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlin.coroutines.CombinedContext.fold(java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "CoroutineContextImpl.kt"
              },
              "line": 131
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlin.coroutines.CombinedContext.fold(java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "CoroutineContextImpl.kt"
              },
              "line": 131
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlin.coroutines.CombinedContext.fold(java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "CoroutineContextImpl.kt"
              },
              "line": 131
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.internal.ThreadContextKt.threadContextElements(kotlin.coroutines.CoroutineContext)",
                "filename": "ThreadContext.kt"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.internal.ThreadContextKt.updateThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object)",
                "filename": "ThreadContext.kt"
              },
              "line": 61
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x76",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 270
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.runReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 49
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.PlatformReadWriteActionSupport.executeReadAction(java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "PlatformReadWriteActionSupport.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadWriteActionSupport.executeReadAction$default(com.intellij.openapi.application.ReadWriteActionSupport, java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)",
                "filename": "ReadWriteActionSupport.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.constrainedReadAction(com.intellij.openapi.application.ReadConstraint[], kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.readAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x189",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend(java.lang.Object)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 241
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x4b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "StreamingJsonDecoder.kt"
              },
              "line": 171
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.CompositeDecoder$DefaultImpls.decodeSerializableElement$default(kotlinx.serialization.encoding.CompositeDecoder, kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object, int, java.lang.Object)",
                "filename": "Decoding.kt"
              },
              "line": 538
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.util.Map, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 111
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 84
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.AbstractCollectionSerializer.readElement$default(kotlinx.serialization.internal.AbstractCollectionSerializer, kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean, int, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginFeatureMap com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.Cbor.decodeFromByteArray(kotlinx.serialization.DeserializationStrategy, byte[])",
                "filename": "Cbor.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x81",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.InternalStateStorageService.getValue(java.lang.String, com.intellij.platform.settings.SettingSerializerDescriptor, com.intellij.openapi.extensions.PluginId)",
                "filename": "InternalStateStorageService.kt"
              },
              "line": 58
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.LocalSettingsController.getItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "LocalSettingsController.kt"
              },
              "line": 34
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.doGetItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 37
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.getItem(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.SettingImpl.get()",
                "filename": "SettingDescriptorImpl.kt"
              },
              "line": 115
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc5",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsData com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsStateService$ExtensionDataProvider.requestExtensionData$intellij_platform_ide_impl(java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "State.kt"
              },
              "line": 191
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x77",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider$AdvertiserSuggestion com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProviderKt.getSuggestionData(com.intellij.openapi.project.Project, java.lang.String, java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 293
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc2",
          "lines": [
            {
              "function": {
                "name": "java.util.function.Function com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider.collectNotificationData(com.intellij.openapi.project.Project, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 57
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.util.Optional com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend$lambda$1(com.intellij.openapi.vfs.VirtualFile, com.intellij.ui.EditorNotificationsImpl, com.intellij.ui.EditorNotificationProvider)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 244
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.insideReadAction()",
                "filename": "InternalReadAction.kt"
              },
              "line": 114
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable$lambda$4(com.intellij.openapi.application.rw.InternalReadAction)",
                "filename": "InternalReadAction.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2$lambda$1(kotlinx.coroutines.CompletableJob, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x71",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.tryRunReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 351
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 971
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2(kotlinx.coroutines.CompletableJob, com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtilService.runActionAndCancelBeforeWrite(java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtilService.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runActionAndCancelBeforeWrite(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x72",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 103
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.readLoop(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 74
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.access$readLoop(com.intellij.openapi.application.rw.InternalReadAction, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x59",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invokeSuspend(java.lang.Object)",
                "filename": "InternalReadAction.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(java.lang.Object, java.lang.Object)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.runReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 49
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.PlatformReadWriteActionSupport.executeReadAction(java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "PlatformReadWriteActionSupport.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadWriteActionSupport.executeReadAction$default(com.intellij.openapi.application.ReadWriteActionSupport, java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)",
                "filename": "ReadWriteActionSupport.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.constrainedReadAction(com.intellij.openapi.application.ReadConstraint[], kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.readAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x189",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend(java.lang.Object)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 241
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "java.lang.String com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishAndReturnString()",
                "filename": "UTF8StreamJsonParser.java"
              },
              "line": 2496
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x17",
          "lines": [
            {
              "function": {
                "name": "java.lang.String com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString()",
                "filename": "UTF8StreamJsonParser.java"
              },
              "line": 337
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
                "filename": "StdDeserializer.java"
              },
              "line": 262
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x45",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
                "filename": "BeanDeserializerBase.java"
              },
              "line": 1588
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x47",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.core.JsonToken)",
                "filename": "BeanDeserializer.java"
              },
              "line": 197
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
                "filename": "BeanDeserializer.java"
              },
              "line": 187
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x58",
          "lines": [
            {
              "function": {
                "name": "java.util.Collection com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromArray(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.util.Collection)",
                "filename": "CollectionDeserializer.java"
              },
              "line": 361
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2b",
          "lines": [
            {
              "function": {
                "name": "java.util.Collection com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
                "filename": "CollectionDeserializer.java"
              },
              "line": 246
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)",
                "filename": "CollectionDeserializer.java"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonDeserializer, java.lang.Object)",
                "filename": "DefaultDeserializationContext.java"
              },
              "line": 342
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x57",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType)",
                "filename": "ObjectMapper.java"
              },
              "line": 4905
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.fasterxml.jackson.databind.ObjectMapper.readValue(java.io.InputStream, com.fasterxml.jackson.core.type.TypeReference)",
                "filename": "ObjectMapper.java"
              },
              "line": 3893
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.util.Set com.intellij.ide.plugins.marketplace.MarketplaceRequests.parseXmlIds(java.io.InputStream)",
                "filename": "MarketplaceRequests.kt"
              },
              "line": 697
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.util.Set com.intellij.ide.plugins.marketplace.MarketplaceRequests.loadCachedJBPlugins()",
                "filename": "MarketplaceRequests.kt"
              },
              "line": 624
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1b",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider$AdvertiserSuggestion com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProviderKt.getSuggestionData(com.intellij.openapi.project.Project, com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsData, java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 308
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8d",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider$AdvertiserSuggestion com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProviderKt.getSuggestionData(com.intellij.openapi.project.Project, java.lang.String, java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 294
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc2",
          "lines": [
            {
              "function": {
                "name": "java.util.function.Function com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider.collectNotificationData(com.intellij.openapi.project.Project, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 57
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.util.Optional com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend$lambda$1(com.intellij.openapi.vfs.VirtualFile, com.intellij.ui.EditorNotificationsImpl, com.intellij.ui.EditorNotificationProvider)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 244
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.insideReadAction()",
                "filename": "InternalReadAction.kt"
              },
              "line": 114
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable$lambda$4(com.intellij.openapi.application.rw.InternalReadAction)",
                "filename": "InternalReadAction.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2$lambda$1(kotlinx.coroutines.CompletableJob, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x71",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.tryRunReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 351
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 971
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2(kotlinx.coroutines.CompletableJob, com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtilService.runActionAndCancelBeforeWrite(java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtilService.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runActionAndCancelBeforeWrite(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x72",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 103
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.readLoop(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 74
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.access$readLoop(com.intellij.openapi.application.rw.InternalReadAction, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x59",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invokeSuspend(java.lang.Object)",
                "filename": "InternalReadAction.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(java.lang.Object, java.lang.Object)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.runReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 49
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.PlatformReadWriteActionSupport.executeReadAction(java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "PlatformReadWriteActionSupport.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadWriteActionSupport.executeReadAction$default(com.intellij.openapi.application.ReadWriteActionSupport, java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)",
                "filename": "ReadWriteActionSupport.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.constrainedReadAction(com.intellij.openapi.application.ReadConstraint[], kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.readAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x189",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend(java.lang.Object)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 241
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "boolean java.lang.String.equals(java.lang.Object)",
                "filename": "String.java"
              },
              "line": 1858
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x80",
          "lines": [
            {
              "function": {
                "name": "java.util.HashMap$Node java.util.HashMap.getNode(java.lang.Object)",
                "filename": "HashMap.java"
              },
              "line": 585
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.util.HashMap.get(java.lang.Object)",
                "filename": "HashMap.java"
              },
              "line": 564
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.extensions.impl.ExtensionPointImpl com.intellij.openapi.extensions.impl.ExtensionsAreaImpl.getExtensionPointIfRegistered(java.lang.String)",
                "filename": "ExtensionsAreaImpl.kt"
              },
              "line": 278
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.extensions.impl.ExtensionPointImpl com.intellij.openapi.extensions.impl.ExtensionsAreaImpl.getExtensionPoint(java.lang.String)",
                "filename": "ExtensionsAreaImpl.kt"
              },
              "line": 272
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x37",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.extensions.impl.ExtensionPointImpl com.intellij.openapi.extensions.BaseExtensionPointName.getPointImpl$intellij_platform_extensions(com.intellij.openapi.extensions.AreaInstance)",
                "filename": "BaseExtensionPointName.kt"
              },
              "line": 18
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Iterable com.intellij.openapi.extensions.ExtensionPointName.getIterable()",
                "filename": "ExtensionPointName.kt"
              },
              "line": 134
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.psi.search.scope.packageSet.CustomScopesProvider.lambda$getFilteredScopes$0(com.intellij.psi.search.scope.packageSet.NamedScope)",
                "filename": "CustomScopesProvider.java"
              },
              "line": 18
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.psi.search.scope.packageSet.CustomScopesProvider$$Lambda+\u003chidden\u003e.value(java.lang.Object)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x44",
          "lines": [
            {
              "function": {
                "name": "java.util.List com.intellij.util.containers.ContainerUtil.findAll(java.util.Collection, com.intellij.openapi.util.Condition)",
                "filename": "ContainerUtil.java"
              },
              "line": 1031
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x16",
          "lines": [
            {
              "function": {
                "name": "java.util.List com.intellij.util.containers.ContainerUtil.filter(java.util.Collection, com.intellij.openapi.util.Condition)",
                "filename": "ContainerUtil.java"
              },
              "line": 1006
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "java.util.List com.intellij.psi.search.scope.packageSet.CustomScopesProvider.getFilteredScopes()",
                "filename": "CustomScopesProvider.java"
              },
              "line": 17
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3f",
          "lines": [
            {
              "function": {
                "name": "com.intellij.psi.search.scope.packageSet.NamedScope com.intellij.packageDependencies.DependencyValidationManagerImpl.getPredefinedScope(java.lang.String)",
                "filename": "DependencyValidationManagerImpl.java"
              },
              "line": 69
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x34",
          "lines": [
            {
              "function": {
                "name": "com.intellij.psi.search.scope.packageSet.NamedScope com.intellij.psi.search.scope.packageSet.NamedScopesHolder.getScope(java.lang.String)",
                "filename": "NamedScopesHolder.java"
              },
              "line": 172
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "com.intellij.psi.search.scope.packageSet.NamedScope com.intellij.packageDependencies.DependencyValidationManagerImpl.getScope(java.lang.String, com.intellij.packageDependencies.DependencyValidationManagerImpl$State)",
                "filename": "DependencyValidationManagerImpl.java"
              },
              "line": 253
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "com.intellij.psi.search.scope.packageSet.NamedScope com.intellij.packageDependencies.DependencyValidationManagerImpl.getScope(java.lang.String)",
                "filename": "DependencyValidationManagerImpl.java"
              },
              "line": 249
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "com.intellij.psi.search.scope.packageSet.NamedScopesHolder com.intellij.psi.search.scope.packageSet.NamedScopesHolder.getHolder(com.intellij.openapi.project.Project, java.lang.String, com.intellij.psi.search.scope.packageSet.NamedScopesHolder)",
                "filename": "NamedScopesHolder.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3c",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ui.tabs.FileColorConfiguration com.intellij.ui.tabs.FileColorsModel.findConfiguration(com.intellij.openapi.vfs.VirtualFile)",
                "filename": "FileColorsModel.java"
              },
              "line": 240
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.String com.intellij.ui.tabs.FileColorsModel.lambda$getColor$0(com.intellij.openapi.vfs.VirtualFile, com.intellij.openapi.project.Project)",
                "filename": "FileColorsModel.java"
              },
              "line": 210
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.tabs.FileColorsModel$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runReadAction(java.lang.Class, com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 272
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 262
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 863
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ReadAction.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "java.lang.String com.intellij.ui.tabs.FileColorsModel.getColor(com.intellij.openapi.vfs.VirtualFile, com.intellij.openapi.project.Project)",
                "filename": "FileColorsModel.java"
              },
              "line": 209
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "java.awt.Color com.intellij.ui.tabs.FileColorManagerImpl.getFileColor(com.intellij.openapi.vfs.VirtualFile)",
                "filename": "FileColorManagerImpl.java"
              },
              "line": 153
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1f",
          "lines": [
            {
              "function": {
                "name": "java.awt.Color com.intellij.ui.tabs.EditorTabColorProviderImpl.getProjectViewColor(com.intellij.openapi.project.Project, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "EditorTabColorProviderImpl.java"
              },
              "line": 31
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x35",
          "lines": [
            {
              "function": {
                "name": "java.awt.Color com.intellij.openapi.fileEditor.impl.EditorTabPresentationUtil.getFileBackgroundColor(com.intellij.openapi.project.Project, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "EditorTabPresentationUtil.kt"
              },
              "line": 88
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "java.awt.Color com.intellij.openapi.vfs.newvfs.VfsPresentationUtil.getFileBackgroundColor(com.intellij.openapi.project.Project, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "VfsPresentationUtil.java"
              },
              "line": 41
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "java.awt.Color com.intellij.presentation.impl.FilePresentationServiceImpl.getFileBackgroundColor(com.intellij.openapi.vfs.VirtualFile)",
                "filename": "FilePresentationServiceImpl.kt"
              },
              "line": 21
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "java.awt.Color com.intellij.presentation.impl.FilePresentationServiceImpl.getFileBackgroundColor(com.intellij.psi.PsiElement)",
                "filename": "FilePresentationServiceImpl.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.awt.Color com.intellij.ide.util.treeView.AbstractTreeNode.computeBackgroundColor()",
                "filename": "AbstractTreeNode.java"
              },
              "line": 290
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.awt.Color com.intellij.ide.projectView.ProjectViewNode.computeBackgroundColor()",
                "filename": "ProjectViewNode.java"
              },
              "line": 361
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.projectView.PresentationData com.intellij.ide.util.treeView.PresentableNodeDescriptor.getUpdatedPresentation()",
                "filename": "PresentableNodeDescriptor.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.ide.util.treeView.PresentableNodeDescriptor.update()",
                "filename": "PresentableNodeDescriptor.java"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.ui.tree.StructureTreeModel$Node.update()",
                "filename": "StructureTreeModel.java"
              },
              "line": 540
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8d",
          "lines": [
            {
              "function": {
                "name": "javax.swing.tree.TreePath com.intellij.ui.tree.StructureTreeModel.invalidateInternal(com.intellij.ui.tree.StructureTreeModel$Node, boolean)",
                "filename": "StructureTreeModel.java"
              },
              "line": 247
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "javax.swing.tree.TreePath com.intellij.ui.tree.StructureTreeModel.lambda$invalidate$5(boolean, com.intellij.ui.tree.StructureTreeModel$Node)",
                "filename": "StructureTreeModel.java"
              },
              "line": 211
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.tree.StructureTreeModel$$Lambda+\u003chidden\u003e.apply(java.lang.Object)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.tree.StructureTreeModel.lambda$onValidThread$2(com.intellij.ui.tree.StructureTreeModel$Node, java.util.function.Function, com.intellij.ide.util.treeView.AbstractTreeStructure)",
                "filename": "StructureTreeModel.java"
              },
              "line": 146
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.tree.StructureTreeModel$$Lambda+\u003chidden\u003e.apply(java.lang.Object)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.tree.StructureTreeModel.lambda$onValidThread$1(java.util.function.Function, java.util.concurrent.CompletableFuture)",
                "filename": "StructureTreeModel.java"
              },
              "line": 124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.tree.StructureTreeModel$$Lambda+\u003chidden\u003e.get()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.Invoker$Task.run()",
                "filename": "Invoker.java"
              },
              "line": 361
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.concurrency.CoroutineInvokerDelegate.run(java.lang.Runnable, org.jetbrains.concurrency.AsyncPromise)",
                "filename": "CoroutineInvokerDelegate.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.Invoker.invokeSafely(com.intellij.util.concurrency.Invoker$Task, int)",
                "filename": "Invoker.java"
              },
              "line": 189
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.Invoker.lambda$offerSafely$0(com.intellij.util.concurrency.Invoker$Task, int)",
                "filename": "Invoker.java"
              },
              "line": 173
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.Invoker$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.Invoker$Background.lambda$offer$0(java.lang.Runnable)",
                "filename": "Invoker.java"
              },
              "line": 470
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.Invoker$Background$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.util.concurrency.CoroutineInvokerDelegate.offer$lambda$2(java.lang.Runnable, com.intellij.util.concurrency.CoroutineInvokerDelegate)",
                "filename": "CoroutineInvokerDelegate.kt"
              },
              "line": 27
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.CoroutineInvokerDelegate$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.util.concurrency.SequentialBgtCoroutineInvokerDelegate$doLaunch$1.invokeSuspend$lambda$1$lambda$0(kotlin.jvm.functions.Function0)",
                "filename": "CoroutineInvokerDelegate.kt"
              },
              "line": 97
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.SequentialBgtCoroutineInvokerDelegate$doLaunch$1$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.util.concurrency.BgtCoroutineInvokerDelegate.withProperContext$lambda$0(kotlin.jvm.functions.Function0)",
                "filename": "CoroutineInvokerDelegate.kt"
              },
              "line": 73
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.BgtCoroutineInvokerDelegate$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.insideReadAction()",
                "filename": "InternalReadAction.kt"
              },
              "line": 114
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable$lambda$4(com.intellij.openapi.application.rw.InternalReadAction)",
                "filename": "InternalReadAction.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2$lambda$1(kotlinx.coroutines.CompletableJob, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x71",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.tryRunReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 351
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 971
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2(kotlinx.coroutines.CompletableJob, com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtilService.runActionAndCancelBeforeWrite(java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtilService.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runActionAndCancelBeforeWrite(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x72",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 103
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.readLoop(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 74
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.access$readLoop(com.intellij.openapi.application.rw.InternalReadAction, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x59",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invokeSuspend(java.lang.Object)",
                "filename": "InternalReadAction.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(java.lang.Object, java.lang.Object)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.runReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 49
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.PlatformReadWriteActionSupport.executeReadAction(java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "PlatformReadWriteActionSupport.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadWriteActionSupport.executeReadAction$default(com.intellij.openapi.application.ReadWriteActionSupport, java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)",
                "filename": "ReadWriteActionSupport.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.constrainedReadAction(com.intellij.openapi.application.ReadConstraint[], kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.readAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.BgtCoroutineInvokerDelegate.withProperContext(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "CoroutineInvokerDelegate.kt"
              },
              "line": 72
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.SequentialBgtCoroutineInvokerDelegate$doLaunch$1.invokeSuspend(java.lang.Object)",
                "filename": "CoroutineInvokerDelegate.kt"
              },
              "line": 96
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xb933f9da77f680a",
          "lines": [
            {
              "function": {
                "name": "vtable chunks"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.CompositeDecoder$DefaultImpls.decodeSerializableElement$default(kotlinx.serialization.encoding.CompositeDecoder, kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object, int, java.lang.Object)",
                "filename": "Decoding.kt"
              },
              "line": 538
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.CollectionLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 80
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.AbstractCollectionSerializer.readElement$default(kotlinx.serialization.internal.AbstractCollectionSerializer, kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean, int, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x82",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginDataSet com.intellij.ide.plugins.advertiser.PluginDataSet$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginDataSet$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.CompositeDecoder$DefaultImpls.decodeSerializableElement$default(kotlinx.serialization.encoding.CompositeDecoder, kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object, int, java.lang.Object)",
                "filename": "Decoding.kt"
              },
              "line": 538
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.util.Map, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 111
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 84
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.AbstractCollectionSerializer.readElement$default(kotlinx.serialization.internal.AbstractCollectionSerializer, kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean, int, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginFeatureMap com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.Cbor.decodeFromByteArray(kotlinx.serialization.DeserializationStrategy, byte[])",
                "filename": "Cbor.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x81",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.InternalStateStorageService.getValue(java.lang.String, com.intellij.platform.settings.SettingSerializerDescriptor, com.intellij.openapi.extensions.PluginId)",
                "filename": "InternalStateStorageService.kt"
              },
              "line": 58
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.LocalSettingsController.getItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "LocalSettingsController.kt"
              },
              "line": 34
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.doGetItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 37
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.getItem(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.SettingImpl.get()",
                "filename": "SettingDescriptorImpl.kt"
              },
              "line": 115
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc5",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsData com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsStateService$ExtensionDataProvider.requestExtensionData$intellij_platform_ide_impl(java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "State.kt"
              },
              "line": 191
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x77",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider$AdvertiserSuggestion com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProviderKt.getSuggestionData(com.intellij.openapi.project.Project, java.lang.String, java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 293
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc2",
          "lines": [
            {
              "function": {
                "name": "java.util.function.Function com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider.collectNotificationData(com.intellij.openapi.project.Project, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 57
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.util.Optional com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend$lambda$1(com.intellij.openapi.vfs.VirtualFile, com.intellij.ui.EditorNotificationsImpl, com.intellij.ui.EditorNotificationProvider)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 244
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.insideReadAction()",
                "filename": "InternalReadAction.kt"
              },
              "line": 114
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable$lambda$4(com.intellij.openapi.application.rw.InternalReadAction)",
                "filename": "InternalReadAction.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2$lambda$1(kotlinx.coroutines.CompletableJob, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x71",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.tryRunReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 351
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 971
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2(kotlinx.coroutines.CompletableJob, com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtilService.runActionAndCancelBeforeWrite(java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtilService.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runActionAndCancelBeforeWrite(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x72",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 103
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.readLoop(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 74
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.access$readLoop(com.intellij.openapi.application.rw.InternalReadAction, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x59",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invokeSuspend(java.lang.Object)",
                "filename": "InternalReadAction.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(java.lang.Object, java.lang.Object)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.runReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 49
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.PlatformReadWriteActionSupport.executeReadAction(java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "PlatformReadWriteActionSupport.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadWriteActionSupport.executeReadAction$default(com.intellij.openapi.application.ReadWriteActionSupport, java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)",
                "filename": "ReadWriteActionSupport.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.constrainedReadAction(com.intellij.openapi.application.ReadConstraint[], kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.readAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x189",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend(java.lang.Object)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 241
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x150f38",
          "lines": [
            {
              "function": {
                "name": "finish_task_switch.isra.0"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1240963",
          "lines": [
            {
              "function": {
                "name": "__schedule"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1240dd2",
          "lines": [
            {
              "function": {
                "name": "schedule"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2262e3",
          "lines": [
            {
              "function": {
                "name": "futex_wait_queue"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x226ac4",
          "lines": [
            {
              "function": {
                "name": "__futex_wait"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x226bc3",
          "lines": [
            {
              "function": {
                "name": "futex_wait"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x222894",
          "lines": [
            {
              "function": {
                "name": "do_futex"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x223159",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_futex"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x55d0",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x98d60",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x98d60"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x9bc7d",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9bc7d"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0xd141d3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd141d3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xfb3d80",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xfb3d80"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "void jdk.internal.misc.Unsafe.park(boolean, long)",
                "filename": "Unsafe.java"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1b",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.locks.LockSupport.parkNanos(long)",
                "filename": "LockSupport.java"
              },
              "line": 410
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1f",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.park()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 924
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x63",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.tryPark()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 860
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x62",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 795
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void java.lang.String.\u003cinit\u003e(byte[], java.nio.charset.Charset)",
                "filename": "String.java"
              },
              "line": 1425
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.String kotlin.text.StringsKt__StringsJVMKt.decodeToString(byte[])",
                "filename": "StringsJVM.kt"
              },
              "line": 217
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "java.lang.String kotlinx.serialization.cbor.internal.CborDecoder.nextString()",
                "filename": "Encoding.kt"
              },
              "line": 384
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.String kotlinx.serialization.cbor.internal.CborReader.decodeString()",
                "filename": "Encoding.kt"
              },
              "line": 288
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "java.lang.String kotlinx.serialization.internal.StringSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "Primitives.kt"
              },
              "line": 160
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.StringSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "Primitives.kt"
              },
              "line": 156
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.CompositeDecoder$DefaultImpls.decodeSerializableElement$default(kotlinx.serialization.encoding.CompositeDecoder, kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object, int, java.lang.Object)",
                "filename": "Decoding.kt"
              },
              "line": 538
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.util.Map, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 100
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 84
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.AbstractCollectionSerializer.readElement$default(kotlinx.serialization.internal.AbstractCollectionSerializer, kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean, int, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginFeatureMap com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.Cbor.decodeFromByteArray(kotlinx.serialization.DeserializationStrategy, byte[])",
                "filename": "Cbor.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x81",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.InternalStateStorageService.getValue(java.lang.String, com.intellij.platform.settings.SettingSerializerDescriptor, com.intellij.openapi.extensions.PluginId)",
                "filename": "InternalStateStorageService.kt"
              },
              "line": 58
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.LocalSettingsController.getItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "LocalSettingsController.kt"
              },
              "line": 34
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.doGetItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 37
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.getItem(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.SettingImpl.get()",
                "filename": "SettingDescriptorImpl.kt"
              },
              "line": 115
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc5",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsData com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsStateService$ExtensionDataProvider.requestExtensionData$intellij_platform_ide_impl(java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "State.kt"
              },
              "line": 191
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x77",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider$AdvertiserSuggestion com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProviderKt.getSuggestionData(com.intellij.openapi.project.Project, java.lang.String, java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 293
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc2",
          "lines": [
            {
              "function": {
                "name": "java.util.function.Function com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider.collectNotificationData(com.intellij.openapi.project.Project, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 57
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.util.Optional com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend$lambda$1(com.intellij.openapi.vfs.VirtualFile, com.intellij.ui.EditorNotificationsImpl, com.intellij.ui.EditorNotificationProvider)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 244
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.insideReadAction()",
                "filename": "InternalReadAction.kt"
              },
              "line": 114
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable$lambda$4(com.intellij.openapi.application.rw.InternalReadAction)",
                "filename": "InternalReadAction.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2$lambda$1(kotlinx.coroutines.CompletableJob, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x71",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.tryRunReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 351
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 971
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2(kotlinx.coroutines.CompletableJob, com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtilService.runActionAndCancelBeforeWrite(java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtilService.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runActionAndCancelBeforeWrite(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x72",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 103
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.readLoop(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 74
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.access$readLoop(com.intellij.openapi.application.rw.InternalReadAction, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x59",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invokeSuspend(java.lang.Object)",
                "filename": "InternalReadAction.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(java.lang.Object, java.lang.Object)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.runReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 49
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.PlatformReadWriteActionSupport.executeReadAction(java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "PlatformReadWriteActionSupport.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadWriteActionSupport.executeReadAction$default(com.intellij.openapi.application.ReadWriteActionSupport, java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)",
                "filename": "ReadWriteActionSupport.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.constrainedReadAction(com.intellij.openapi.application.ReadConstraint[], kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.readAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x189",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend(java.lang.Object)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 241
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "void java.lang.String.\u003cinit\u003e(java.nio.charset.Charset, byte[], int, int)",
                "filename": "String.java"
              },
              "line": 532
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void java.lang.String.\u003cinit\u003e(byte[], java.nio.charset.Charset)",
                "filename": "String.java"
              },
              "line": 1425
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.String kotlin.text.StringsKt__StringsJVMKt.decodeToString(byte[])",
                "filename": "StringsJVM.kt"
              },
              "line": 217
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "java.lang.String kotlinx.serialization.cbor.internal.CborDecoder.nextString()",
                "filename": "Encoding.kt"
              },
              "line": 384
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.String kotlinx.serialization.cbor.internal.CborReader.decodeString()",
                "filename": "Encoding.kt"
              },
              "line": 288
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "java.lang.String kotlinx.serialization.encoding.AbstractDecoder.decodeStringElement(kotlinx.serialization.descriptors.SerialDescriptor, int)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 58
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xbd",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginData com.intellij.ide.plugins.advertiser.PluginData$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 13
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginData$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 13
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.CompositeDecoder$DefaultImpls.decodeSerializableElement$default(kotlinx.serialization.encoding.CompositeDecoder, kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object, int, java.lang.Object)",
                "filename": "Decoding.kt"
              },
              "line": 538
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.CollectionLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 80
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.AbstractCollectionSerializer.readElement$default(kotlinx.serialization.internal.AbstractCollectionSerializer, kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean, int, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x82",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginDataSet com.intellij.ide.plugins.advertiser.PluginDataSet$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginDataSet$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.CompositeDecoder$DefaultImpls.decodeSerializableElement$default(kotlinx.serialization.encoding.CompositeDecoder, kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object, int, java.lang.Object)",
                "filename": "Decoding.kt"
              },
              "line": 538
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.util.Map, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 111
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 84
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.AbstractCollectionSerializer.readElement$default(kotlinx.serialization.internal.AbstractCollectionSerializer, kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean, int, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginFeatureMap com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.Cbor.decodeFromByteArray(kotlinx.serialization.DeserializationStrategy, byte[])",
                "filename": "Cbor.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x81",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.InternalStateStorageService.getValue(java.lang.String, com.intellij.platform.settings.SettingSerializerDescriptor, com.intellij.openapi.extensions.PluginId)",
                "filename": "InternalStateStorageService.kt"
              },
              "line": 58
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.LocalSettingsController.getItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "LocalSettingsController.kt"
              },
              "line": 34
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.doGetItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 37
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.getItem(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.SettingImpl.get()",
                "filename": "SettingDescriptorImpl.kt"
              },
              "line": 115
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc5",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsData com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsStateService$ExtensionDataProvider.requestExtensionData$intellij_platform_ide_impl(java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "State.kt"
              },
              "line": 191
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x77",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider$AdvertiserSuggestion com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProviderKt.getSuggestionData(com.intellij.openapi.project.Project, java.lang.String, java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 293
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc2",
          "lines": [
            {
              "function": {
                "name": "java.util.function.Function com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider.collectNotificationData(com.intellij.openapi.project.Project, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 57
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.util.Optional com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend$lambda$1(com.intellij.openapi.vfs.VirtualFile, com.intellij.ui.EditorNotificationsImpl, com.intellij.ui.EditorNotificationProvider)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 244
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.insideReadAction()",
                "filename": "InternalReadAction.kt"
              },
              "line": 114
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable$lambda$4(com.intellij.openapi.application.rw.InternalReadAction)",
                "filename": "InternalReadAction.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2$lambda$1(kotlinx.coroutines.CompletableJob, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x71",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.tryRunReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 351
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 971
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2(kotlinx.coroutines.CompletableJob, com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtilService.runActionAndCancelBeforeWrite(java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtilService.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runActionAndCancelBeforeWrite(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x72",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 103
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.readLoop(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 74
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.access$readLoop(com.intellij.openapi.application.rw.InternalReadAction, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x59",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invokeSuspend(java.lang.Object)",
                "filename": "InternalReadAction.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(java.lang.Object, java.lang.Object)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.runReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 49
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.PlatformReadWriteActionSupport.executeReadAction(java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "PlatformReadWriteActionSupport.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadWriteActionSupport.executeReadAction$default(com.intellij.openapi.application.ReadWriteActionSupport, java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)",
                "filename": "ReadWriteActionSupport.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.constrainedReadAction(com.intellij.openapi.application.ReadConstraint[], kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.readAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x189",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend(java.lang.Object)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 241
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "int kotlinx.serialization.cbor.internal.CborListReader.decodeElementIndex(kotlinx.serialization.descriptors.SerialDescriptor)",
                "filename": "Encoding.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 34
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x82",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginDataSet com.intellij.ide.plugins.advertiser.PluginDataSet$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginDataSet$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.CompositeDecoder$DefaultImpls.decodeSerializableElement$default(kotlinx.serialization.encoding.CompositeDecoder, kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object, int, java.lang.Object)",
                "filename": "Decoding.kt"
              },
              "line": 538
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.util.Map, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 111
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 84
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.AbstractCollectionSerializer.readElement$default(kotlinx.serialization.internal.AbstractCollectionSerializer, kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean, int, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginFeatureMap com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.Cbor.decodeFromByteArray(kotlinx.serialization.DeserializationStrategy, byte[])",
                "filename": "Cbor.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x81",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.InternalStateStorageService.getValue(java.lang.String, com.intellij.platform.settings.SettingSerializerDescriptor, com.intellij.openapi.extensions.PluginId)",
                "filename": "InternalStateStorageService.kt"
              },
              "line": 58
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.LocalSettingsController.getItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "LocalSettingsController.kt"
              },
              "line": 34
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.doGetItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 37
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.getItem(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.SettingImpl.get()",
                "filename": "SettingDescriptorImpl.kt"
              },
              "line": 115
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc5",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsData com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsStateService$ExtensionDataProvider.requestExtensionData$intellij_platform_ide_impl(java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "State.kt"
              },
              "line": 191
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x77",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider$AdvertiserSuggestion com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProviderKt.getSuggestionData(com.intellij.openapi.project.Project, java.lang.String, java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 293
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc2",
          "lines": [
            {
              "function": {
                "name": "java.util.function.Function com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider.collectNotificationData(com.intellij.openapi.project.Project, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 57
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.util.Optional com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend$lambda$1(com.intellij.openapi.vfs.VirtualFile, com.intellij.ui.EditorNotificationsImpl, com.intellij.ui.EditorNotificationProvider)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 244
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.insideReadAction()",
                "filename": "InternalReadAction.kt"
              },
              "line": 114
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable$lambda$4(com.intellij.openapi.application.rw.InternalReadAction)",
                "filename": "InternalReadAction.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2$lambda$1(kotlinx.coroutines.CompletableJob, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x71",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.tryRunReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 351
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 971
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2(kotlinx.coroutines.CompletableJob, com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtilService.runActionAndCancelBeforeWrite(java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtilService.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runActionAndCancelBeforeWrite(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x72",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 103
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.readLoop(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 74
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.access$readLoop(com.intellij.openapi.application.rw.InternalReadAction, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x59",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invokeSuspend(java.lang.Object)",
                "filename": "InternalReadAction.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(java.lang.Object, java.lang.Object)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.runReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 49
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.PlatformReadWriteActionSupport.executeReadAction(java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "PlatformReadWriteActionSupport.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadWriteActionSupport.executeReadAction$default(com.intellij.openapi.application.ReadWriteActionSupport, java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)",
                "filename": "ReadWriteActionSupport.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.constrainedReadAction(com.intellij.openapi.application.ReadConstraint[], kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.readAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x189",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend(java.lang.Object)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 241
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x6f6353f7de2420d8",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (final stubs) [arrayof_jbyte_disjoint_arraycopy]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "long kotlinx.serialization.cbor.internal.CborDecoder.readExact(kotlinx.serialization.cbor.internal.ByteArrayInput, int)",
                "filename": "Encoding.kt"
              },
              "line": 432
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x68",
          "lines": [
            {
              "function": {
                "name": "long kotlinx.serialization.cbor.internal.CborDecoder.readNumber()",
                "filename": "Encoding.kt"
              },
              "line": 426
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19",
          "lines": [
            {
              "function": {
                "name": "byte[] kotlinx.serialization.cbor.internal.CborDecoder.readBytes()",
                "filename": "Encoding.kt"
              },
              "line": 394
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1c",
          "lines": [
            {
              "function": {
                "name": "java.lang.String kotlinx.serialization.cbor.internal.CborDecoder.nextString()",
                "filename": "Encoding.kt"
              },
              "line": 383
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.String kotlinx.serialization.cbor.internal.CborReader.decodeString()",
                "filename": "Encoding.kt"
              },
              "line": 288
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "java.lang.String kotlinx.serialization.encoding.AbstractDecoder.decodeStringElement(kotlinx.serialization.descriptors.SerialDescriptor, int)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 58
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xbd",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginData com.intellij.ide.plugins.advertiser.PluginData$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 13
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginData$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 13
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.CompositeDecoder$DefaultImpls.decodeSerializableElement$default(kotlinx.serialization.encoding.CompositeDecoder, kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object, int, java.lang.Object)",
                "filename": "Decoding.kt"
              },
              "line": 538
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.CollectionLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 80
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.AbstractCollectionSerializer.readElement$default(kotlinx.serialization.internal.AbstractCollectionSerializer, kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean, int, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x82",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginDataSet com.intellij.ide.plugins.advertiser.PluginDataSet$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginDataSet$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.CompositeDecoder$DefaultImpls.decodeSerializableElement$default(kotlinx.serialization.encoding.CompositeDecoder, kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object, int, java.lang.Object)",
                "filename": "Decoding.kt"
              },
              "line": 538
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.util.Map, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 111
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 84
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.AbstractCollectionSerializer.readElement$default(kotlinx.serialization.internal.AbstractCollectionSerializer, kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean, int, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginFeatureMap com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.Cbor.decodeFromByteArray(kotlinx.serialization.DeserializationStrategy, byte[])",
                "filename": "Cbor.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x81",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.InternalStateStorageService.getValue(java.lang.String, com.intellij.platform.settings.SettingSerializerDescriptor, com.intellij.openapi.extensions.PluginId)",
                "filename": "InternalStateStorageService.kt"
              },
              "line": 58
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.LocalSettingsController.getItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "LocalSettingsController.kt"
              },
              "line": 34
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.doGetItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 37
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.getItem(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.SettingImpl.get()",
                "filename": "SettingDescriptorImpl.kt"
              },
              "line": 115
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc5",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsData com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsStateService$ExtensionDataProvider.requestExtensionData$intellij_platform_ide_impl(java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "State.kt"
              },
              "line": 191
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x77",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider$AdvertiserSuggestion com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProviderKt.getSuggestionData(com.intellij.openapi.project.Project, java.lang.String, java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 293
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc2",
          "lines": [
            {
              "function": {
                "name": "java.util.function.Function com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider.collectNotificationData(com.intellij.openapi.project.Project, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 57
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.util.Optional com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend$lambda$1(com.intellij.openapi.vfs.VirtualFile, com.intellij.ui.EditorNotificationsImpl, com.intellij.ui.EditorNotificationProvider)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 244
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.insideReadAction()",
                "filename": "InternalReadAction.kt"
              },
              "line": 114
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable$lambda$4(com.intellij.openapi.application.rw.InternalReadAction)",
                "filename": "InternalReadAction.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2$lambda$1(kotlinx.coroutines.CompletableJob, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x71",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.tryRunReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 351
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 971
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2(kotlinx.coroutines.CompletableJob, com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtilService.runActionAndCancelBeforeWrite(java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtilService.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runActionAndCancelBeforeWrite(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x72",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 103
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.readLoop(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 74
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.access$readLoop(com.intellij.openapi.application.rw.InternalReadAction, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x59",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invokeSuspend(java.lang.Object)",
                "filename": "InternalReadAction.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(java.lang.Object, java.lang.Object)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.runReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 49
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.PlatformReadWriteActionSupport.executeReadAction(java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "PlatformReadWriteActionSupport.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadWriteActionSupport.executeReadAction$default(com.intellij.openapi.application.ReadWriteActionSupport, java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)",
                "filename": "ReadWriteActionSupport.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.constrainedReadAction(com.intellij.openapi.application.ReadConstraint[], kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.readAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x189",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend(java.lang.Object)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 241
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x61",
          "lines": [
            {
              "function": {
                "name": "kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.findAnyTask(boolean)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 1034
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "kotlinx.coroutines.scheduling.Task kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.findTask(boolean)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 999
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1b",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 758
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xfd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean)",
                "filename": "HashMap.java"
              },
              "line": 663
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object)",
                "filename": "HashMap.java"
              },
              "line": 618
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdb",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.util.Map, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.MapLikeSerializer.readElement(kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 84
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.serialization.internal.AbstractCollectionSerializer.readElement$default(kotlinx.serialization.internal.AbstractCollectionSerializer, kotlinx.serialization.encoding.CompositeDecoder, int, java.lang.Object, boolean, int, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.merge(kotlinx.serialization.encoding.Decoder, java.lang.Object)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.internal.AbstractCollectionSerializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "CollectionSerializers.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor, int, kotlinx.serialization.DeserializationStrategy, java.lang.Object)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 70
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ide.plugins.advertiser.PluginFeatureMap com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.plugins.advertiser.PluginFeatureMap$$serializer.deserialize(kotlinx.serialization.encoding.Decoder)",
                "filename": "data.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.Decoder$DefaultImpls.decodeSerializableValue(kotlinx.serialization.encoding.Decoder, kotlinx.serialization.DeserializationStrategy)",
                "filename": "Decoding.kt"
              },
              "line": 257
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.encoding.AbstractDecoder.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "AbstractDecoder.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.internal.CborReader.decodeSerializableValue(kotlinx.serialization.DeserializationStrategy)",
                "filename": "Encoding.kt"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.serialization.cbor.Cbor.decodeFromByteArray(kotlinx.serialization.DeserializationStrategy, byte[])",
                "filename": "Cbor.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x81",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.InternalStateStorageService.getValue(java.lang.String, com.intellij.platform.settings.SettingSerializerDescriptor, com.intellij.openapi.extensions.PluginId)",
                "filename": "InternalStateStorageService.kt"
              },
              "line": 58
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.LocalSettingsController.getItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "LocalSettingsController.kt"
              },
              "line": 34
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.doGetItem-fgh0x1k(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 37
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.local.SettingsControllerMediator.getItem(com.intellij.platform.settings.SettingDescriptor)",
                "filename": "SettingsControllerMediator.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.settings.SettingImpl.get()",
                "filename": "SettingDescriptorImpl.kt"
              },
              "line": 115
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc5",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsData com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserExtensionsStateService$ExtensionDataProvider.requestExtensionData$intellij_platform_ide_impl(java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "State.kt"
              },
              "line": 191
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x77",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider$AdvertiserSuggestion com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProviderKt.getSuggestionData(com.intellij.openapi.project.Project, java.lang.String, java.lang.String, com.intellij.openapi.fileTypes.FileType)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 293
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc2",
          "lines": [
            {
              "function": {
                "name": "java.util.function.Function com.intellij.openapi.updateSettings.impl.pluginsAdvertisement.PluginAdvertiserEditorNotificationProvider.collectNotificationData(com.intellij.openapi.project.Project, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "PluginAdvertiserEditorNotificationProvider.kt"
              },
              "line": 57
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.util.Optional com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend$lambda$1(com.intellij.openapi.vfs.VirtualFile, com.intellij.ui.EditorNotificationsImpl, com.intellij.ui.EditorNotificationProvider)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 244
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.insideReadAction()",
                "filename": "InternalReadAction.kt"
              },
              "line": 114
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable$lambda$4(com.intellij.openapi.application.rw.InternalReadAction)",
                "filename": "InternalReadAction.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2$lambda$1(kotlinx.coroutines.CompletableJob, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x71",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.tryRunReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 351
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 971
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2(kotlinx.coroutines.CompletableJob, com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtilService.runActionAndCancelBeforeWrite(java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtilService.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runActionAndCancelBeforeWrite(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x72",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 103
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.readLoop(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 74
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.access$readLoop(com.intellij.openapi.application.rw.InternalReadAction, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x59",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invokeSuspend(java.lang.Object)",
                "filename": "InternalReadAction.kt"
              },
              "line": 53
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$6.invoke(java.lang.Object, java.lang.Object)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.runReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 49
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.PlatformReadWriteActionSupport.executeReadAction(java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "PlatformReadWriteActionSupport.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadWriteActionSupport.executeReadAction$default(com.intellij.openapi.application.ReadWriteActionSupport, java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)",
                "filename": "ReadWriteActionSupport.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.constrainedReadAction(com.intellij.openapi.application.ReadConstraint[], kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.readAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x189",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ui.EditorNotificationsImpl$updateEditors$job$1.invokeSuspend(java.lang.Object)",
                "filename": "EditorNotificationsImpl.kt"
              },
              "line": 241
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.AbstractCoroutine.resumeWith(java.lang.Object)",
                "filename": "AbstractCoroutine.kt"
              },
              "line": 97
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner.resumeWith(java.lang.Object)",
                "filename": "DebugProbesImpl.kt"
              },
              "line": 545
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x76",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 46
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13d",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 102
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xad644",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0xad644"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2f3db",
          "lines": [
            {
              "function": {
                "name": "libawt_xawt.so 0x2f3db"
              }
            }
          ],
          "mapping": {
            "start": "0x13000",
            "limit": "0x5d000",
            "offset": "0x13000",
            "filename": "libawt_xawt.so",
            "build_id": "134d9e7faf72035d5f259dcf73c8774bb044da7a"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "void sun.java2d.xr.XRBackendNative.XRenderRectanglesNative(int, byte, short, short, short, short, int[], int)",
                "filename": "XRBackendNative.java"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void sun.java2d.xr.XRBackendNative.renderRectangles(int, byte, sun.java2d.xr.XRColor, sun.java2d.xr.GrowableRectArray)",
                "filename": "XRBackendNative.java"
              },
              "line": 217
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x82",
          "lines": [
            {
              "function": {
                "name": "void sun.java2d.xr.MaskTileManager.compositeSingleTile(sun.java2d.xr.XRSurfaceData, sun.java2d.xr.MaskTile, sun.java2d.xr.DirtyRegion, boolean, int, int, sun.java2d.xr.XRColor)",
                "filename": "MaskTileManager.java"
              },
              "line": 183
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc8",
          "lines": [
            {
              "function": {
                "name": "void sun.java2d.xr.MaskTileManager.fillMask(sun.java2d.xr.XRSurfaceData)",
                "filename": "MaskTileManager.java"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x27",
          "lines": [
            {
              "function": {
                "name": "void sun.java2d.xr.XRRenderer.fillPath(sun.java2d.SunGraphics2D, java.awt.geom.Path2D$Float, int, int)",
                "filename": "XRRenderer.java"
              },
              "line": 275
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void sun.java2d.xr.XRRenderer.fill(sun.java2d.SunGraphics2D, java.awt.Shape)",
                "filename": "XRRenderer.java"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void sun.java2d.pipe.ValidatePipe.fill(sun.java2d.SunGraphics2D, java.awt.Shape)",
                "filename": "ValidatePipe.java"
              },
              "line": 160
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "void sun.java2d.SunGraphics2D.fill(java.awt.Shape)",
                "filename": "SunGraphics2D.java"
              },
              "line": 2532
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.paint.RectanglePainter2D$2.lambda$paint$0(java.awt.Graphics2D, java.awt.Shape)",
                "filename": "RectanglePainter2D.java"
              },
              "line": 211
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.paint.RectanglePainter2D$2$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.paint.PaintUtil.paintWithAA(java.awt.Graphics2D, java.lang.Object, java.lang.Runnable)",
                "filename": "PaintUtil.java"
              },
              "line": 402
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xde",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.paint.RectanglePainter2D$2.paint(java.awt.Graphics2D, double, double, double, double, java.lang.Double, com.intellij.ui.paint.LinePainter2D$StrokeType, double, java.lang.Object)",
                "filename": "RectanglePainter2D.java"
              },
              "line": 210
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x40",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.paint.RectanglePainter.paint2D(com.intellij.ui.paint.RectanglePainter2D, java.awt.Graphics2D, int, int, int, int, java.lang.Integer)",
                "filename": "RectanglePainter.java"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.paint.RectanglePainter$2.paint(java.awt.Graphics2D, int, int, int, int, java.lang.Integer)",
                "filename": "RectanglePainter.java"
              },
              "line": 21
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.paint.RectanglePainter$2.paint(java.awt.Graphics2D, int, int, int, int, java.lang.Object)",
                "filename": "RectanglePainter.java"
              },
              "line": 18
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.ScrollBarPainter$Track.paint(java.awt.Graphics2D, int, int, int, int, java.lang.Float)",
                "filename": "ScrollBarPainter.java"
              },
              "line": 212
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.ScrollBarPainter$Track.paint(java.awt.Graphics2D, int, int, int, int, java.lang.Object)",
                "filename": "ScrollBarPainter.java"
              },
              "line": 192
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe9",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.DefaultScrollBarUI.paint(com.intellij.ui.components.ScrollBarPainter, java.awt.Graphics2D, javax.swing.JComponent, boolean)",
                "filename": "DefaultScrollBarUI.kt"
              },
              "line": 150
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.DefaultScrollBarUI.paintTrack(java.awt.Graphics2D, javax.swing.JComponent)",
                "filename": "DefaultScrollBarUI.kt"
              },
              "line": 115
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x240",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.DefaultScrollBarUI.paint(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "DefaultScrollBarUI.kt"
              },
              "line": 309
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "ComponentUI.java"
              },
              "line": 161
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintComponent(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 855
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x100",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paintChildren(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 243
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paint(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 231
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5319
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa3",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBufferedImpl(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1680
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1655
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x80",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1592
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19a",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.BufferStrategyPaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "BufferStrategyPaintManager.java"
              },
              "line": 281
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x34",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1352
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2ab",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent._paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5267
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5077
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 887
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map)",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 843
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x49",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.prePaintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 789
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$ProcessingRunnable.run()",
                "filename": "RepaintManager.java"
              },
              "line": 1921
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x26",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext.runInChildContext(boolean, kotlin.jvm.functions.Function0)",
                "filename": "propagation.kt"
              },
              "line": 107
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext.runInChildContext(java.lang.Runnable)",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ContextRunnable.run()",
                "filename": "ContextRunnable.java"
              },
              "line": 27
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.dispatch()",
                "filename": "InvocationEvent.java"
              },
              "line": 318
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 781
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 573
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1cc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 387
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x324",
          "lines": [
            {
              "function": {
                "name": "void sun.font.XRTextRenderer.drawGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList)",
                "filename": "XRTextRenderer.java"
              },
              "line": 95
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa5",
          "lines": [
            {
              "function": {
                "name": "void sun.java2d.pipe.GlyphListPipe.drawString(sun.java2d.SunGraphics2D, java.lang.String, double, double)",
                "filename": "GlyphListPipe.java"
              },
              "line": 71
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void sun.java2d.pipe.ValidatePipe.drawString(sun.java2d.SunGraphics2D, java.lang.String, double, double)",
                "filename": "ValidatePipe.java"
              },
              "line": 165
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x42",
          "lines": [
            {
              "function": {
                "name": "void sun.java2d.SunGraphics2D.drawString(java.lang.String, float, float)",
                "filename": "SunGraphics2D.java"
              },
              "line": 2962
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent$SimpleTextRenderer.draw(java.awt.Graphics2D, int, float, float)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 1500
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x34",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.doDrawString(java.awt.Graphics2D, com.intellij.ui.SimpleColoredComponent$ColoredFragment, int, float, float)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 536
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1ea",
          "lines": [
            {
              "function": {
                "name": "int com.intellij.ui.SimpleColoredComponent.doPaintText(java.awt.Graphics2D, int, boolean)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 895
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x54",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.doPaint(java.awt.Graphics2D)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 766
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.paintComponent(java.awt.Graphics)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 745
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x100",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7c",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.CellRendererPane.paintComponent(java.awt.Graphics, java.awt.Component, java.awt.Container, int, int, int, int, boolean)",
                "filename": "CellRendererPane.java"
              },
              "line": 170
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x43e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.tree.ui.DefaultTreeUI.paint(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "DefaultTreeUI.java"
              },
              "line": 372
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "ComponentUI.java"
              },
              "line": 161
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintComponent(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 855
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.paintComponent(java.awt.Graphics)",
                "filename": "Tree.java"
              },
              "line": 381
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x100",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.paint(java.awt.Graphics)",
                "filename": "Tree.java"
              },
              "line": 312
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xcd",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JViewport.paint(java.awt.Graphics)",
                "filename": "JViewport.java"
              },
              "line": 736
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBViewport.paint(java.awt.Graphics)",
                "filename": "JBViewport.java"
              },
              "line": 240
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paintChildren(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 243
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paint(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 231
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5319
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa3",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBufferedImpl(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1680
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1655
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x80",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1592
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19a",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.BufferStrategyPaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "BufferStrategyPaintManager.java"
              },
              "line": 281
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x34",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1352
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2ab",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent._paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5267
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5077
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 887
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map)",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 843
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x49",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.prePaintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 789
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$ProcessingRunnable.run()",
                "filename": "RepaintManager.java"
              },
              "line": 1921
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x26",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext.runInChildContext(boolean, kotlin.jvm.functions.Function0)",
                "filename": "propagation.kt"
              },
              "line": 107
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext.runInChildContext(java.lang.Runnable)",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ContextRunnable.run()",
                "filename": "ContextRunnable.java"
              },
              "line": 27
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.dispatch()",
                "filename": "InvocationEvent.java"
              },
              "line": 318
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 781
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 573
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1cc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 387
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x15eefa",
          "lines": [
            {
              "function": {
                "name": "try_to_wake_up"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15f46f",
          "lines": [
            {
              "function": {
                "name": "wake_up_q"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x225ea6",
          "lines": [
            {
              "function": {
                "name": "futex_wake"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x22291d",
          "lines": [
            {
              "function": {
                "name": "do_futex"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x223159",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_futex"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x55d0",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9b05e",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9b05e"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0xfb2099",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xfb2099"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "void jdk.internal.misc.Unsafe.unpark(java.lang.Object)",
                "filename": "Unsafe.java"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x16",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.locks.LockSupport.unpark(java.lang.Thread)",
                "filename": "LockSupport.java"
              },
              "line": 181
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1e",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)",
                "filename": "AbstractQueuedSynchronizer.java"
              },
              "line": 645
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "boolean java.util.concurrent.locks.AbstractQueuedSynchronizer.release(int)",
                "filename": "AbstractQueuedSynchronizer.java"
              },
              "line": 1060
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.locks.ReentrantLock.unlock()",
                "filename": "ReentrantLock.java"
              },
              "line": 494
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x16",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.SunToolkit.awtUnlock()",
                "filename": "SunToolkit.java"
              },
              "line": 271
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x38",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XComponentPeer.pSetCursor(java.awt.Cursor, boolean)",
                "filename": "XComponentPeer.java"
              },
              "line": 726
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XComponentPeer.pSetCursor(java.awt.Cursor)",
                "filename": "XComponentPeer.java"
              },
              "line": 699
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XGlobalCursorManager.updateGrabbedCursor(java.awt.Cursor)",
                "filename": "XGlobalCursorManager.java"
              },
              "line": 107
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x89",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XGlobalCursorManager.setCursor(java.awt.Component, java.awt.Cursor, boolean)",
                "filename": "XGlobalCursorManager.java"
              },
              "line": 94
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9c",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.GlobalCursorManager._updateCursor(boolean)",
                "filename": "GlobalCursorManager.java"
              },
              "line": 205
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1b",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.GlobalCursorManager.updateCursorImmediately()",
                "filename": "GlobalCursorManager.java"
              },
              "line": 95
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XComponentPeer.updateCursorImmediately()",
                "filename": "XComponentPeer.java"
              },
              "line": 695
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x31",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Component.updateCursorImmediately()",
                "filename": "Component.java"
              },
              "line": 3262
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x49",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Component.show()",
                "filename": "Component.java"
              },
              "line": 1730
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x30",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Window.show()",
                "filename": "Window.java"
              },
              "line": 1078
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.Popup$HeavyWeightWindow.show()",
                "filename": "Popup.java"
              },
              "line": 270
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.Popup.show()",
                "filename": "Popup.java"
              },
              "line": 112
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.popup.HeavyWeightPopup.show()",
                "filename": "HeavyWeightPopup.java"
              },
              "line": 21
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x61",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JPopupMenu.showPopup()",
                "filename": "JPopupMenu.java"
              },
              "line": 886
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x75",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JPopupMenu.setVisible(boolean)",
                "filename": "JPopupMenu.java"
              },
              "line": 829
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.actionSystem.impl.ActionPopupMenuImpl$MyMenu.setVisible(boolean)",
                "filename": "ActionPopupMenuImpl.java"
              },
              "line": 164
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JPopupMenu.show(java.awt.Component, int, int)",
                "filename": "JPopupMenu.java"
              },
              "line": 1003
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.ui.JBPopupMenu.show(java.awt.Component, int, int)",
                "filename": "JBPopupMenu.java"
              },
              "line": 54
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x135",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.actionSystem.impl.ActionPopupMenuImpl$MyMenu.show(java.awt.Component, int, int)",
                "filename": "ActionPopupMenuImpl.java"
              },
              "line": 146
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.PopupHandler$2.invokePopup(java.awt.Component, int, int)",
                "filename": "PopupHandler.java"
              },
              "line": 132
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.PopupHandler.mousePressed(java.awt.event.MouseEvent)",
                "filename": "PopupHandler.java"
              },
              "line": 47
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.AWTEventMulticaster.mousePressed(java.awt.event.MouseEvent)",
                "filename": "AWTEventMulticaster.java"
              },
              "line": 288
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void java.awt.AWTEventMulticaster.mousePressed(java.awt.event.MouseEvent)",
                "filename": "AWTEventMulticaster.java"
              },
              "line": 287
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x36",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Component.processMouseEvent(java.awt.event.MouseEvent)",
                "filename": "Component.java"
              },
              "line": 6659
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x17",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.processMouseEvent(java.awt.event.MouseEvent)",
                "filename": "JComponent.java"
              },
              "line": 3394
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.processMouseEvent(java.awt.event.MouseEvent)",
                "filename": "Tree.java"
              },
              "line": 479
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.dnd.aware.DnDAwareTree.processMouseEvent(java.awt.event.MouseEvent)",
                "filename": "DnDAwareTree.java"
              },
              "line": 46
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Component.processEvent(java.awt.AWTEvent)",
                "filename": "Component.java"
              },
              "line": 6427
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Container.processEvent(java.awt.AWTEvent)",
                "filename": "Container.java"
              },
              "line": 2266
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x228",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Component.dispatchEventImpl(java.awt.AWTEvent)",
                "filename": "Component.java"
              },
              "line": 5032
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent)",
                "filename": "Container.java"
              },
              "line": 2324
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Component.dispatchEvent(java.awt.AWTEvent)",
                "filename": "Component.java"
              },
              "line": 4860
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a1",
          "lines": [
            {
              "function": {
                "name": "void java.awt.LightweightDispatcher.retargetMouseEvent(java.awt.Component, int, java.awt.event.MouseEvent)",
                "filename": "Container.java"
              },
              "line": 4963
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x90",
          "lines": [
            {
              "function": {
                "name": "boolean java.awt.LightweightDispatcher.processMouseEvent(java.awt.event.MouseEvent)",
                "filename": "Container.java"
              },
              "line": 4574
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x32",
          "lines": [
            {
              "function": {
                "name": "boolean java.awt.LightweightDispatcher.dispatchEvent(java.awt.AWTEvent)",
                "filename": "Container.java"
              },
              "line": 4518
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent)",
                "filename": "Container.java"
              },
              "line": 2310
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Window.dispatchEventImpl(java.awt.AWTEvent)",
                "filename": "Window.java"
              },
              "line": 2810
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Component.dispatchEvent(java.awt.AWTEvent)",
                "filename": "Component.java"
              },
              "line": 4860
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 783
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 98
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$5.run()",
                "filename": "EventQueue.java"
              },
              "line": 755
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$5.run()",
                "filename": "EventQueue.java"
              },
              "line": 753
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x49",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 752
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x43",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchMouseEvent(java.awt.event.MouseEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 621
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue._dispatchEvent$lambda$21(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 564
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x115",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 564
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1ff",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 395
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "java.util.Set kotlin.collections.SetsKt__SetsJVMKt.setOf(java.lang.Object)",
                "filename": "SetsJVM.kt"
              },
              "line": 20
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "kotlinx.coroutines.Job com.intellij.ui.DeferredIconImpl.scheduleEvaluation(java.awt.Component, int, int)",
                "filename": "DeferredIconImpl.kt"
              },
              "line": 200
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.DeferredIconImpl.paintIcon(java.awt.Component, java.awt.Graphics, int, int)",
                "filename": "DeferredIconImpl.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa5",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.RowIcon.paintIcon(java.awt.Component, java.awt.Graphics, int, int)",
                "filename": "RowIcon.kt"
              },
              "line": 110
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.IconUtil.paintSelectionAwareIcon(javax.swing.Icon, javax.swing.JComponent, java.awt.Graphics, int, int, boolean)",
                "filename": "IconUtil.kt"
              },
              "line": 251
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.paintIcon(java.awt.Graphics, javax.swing.Icon, int)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 1089
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x86",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.doPaintIcon(java.awt.Graphics2D, javax.swing.Icon, int)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 801
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.doPaint(java.awt.Graphics2D)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 761
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.paintComponent(java.awt.Graphics)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 745
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x100",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7c",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.CellRendererPane.paintComponent(java.awt.Graphics, java.awt.Component, java.awt.Container, int, int, int, int, boolean)",
                "filename": "CellRendererPane.java"
              },
              "line": 170
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x43e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.tree.ui.DefaultTreeUI.paint(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "DefaultTreeUI.java"
              },
              "line": 372
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "ComponentUI.java"
              },
              "line": 161
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintComponent(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 855
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.paintComponent(java.awt.Graphics)",
                "filename": "Tree.java"
              },
              "line": 381
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x100",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.paint(java.awt.Graphics)",
                "filename": "Tree.java"
              },
              "line": 312
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xcd",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JViewport.paint(java.awt.Graphics)",
                "filename": "JViewport.java"
              },
              "line": 736
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBViewport.paint(java.awt.Graphics)",
                "filename": "JBViewport.java"
              },
              "line": 240
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paintChildren(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 243
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paint(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 231
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5319
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa3",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBufferedImpl(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1680
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1655
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x80",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1592
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19a",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.BufferStrategyPaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "BufferStrategyPaintManager.java"
              },
              "line": 281
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x34",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1352
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2ab",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent._paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5267
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5077
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 887
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map)",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 843
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x49",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.prePaintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 789
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$ProcessingRunnable.run()",
                "filename": "RepaintManager.java"
              },
              "line": 1921
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x26",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext.runInChildContext(boolean, kotlin.jvm.functions.Function0)",
                "filename": "propagation.kt"
              },
              "line": 107
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext.runInChildContext(java.lang.Runnable)",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ContextRunnable.run()",
                "filename": "ContextRunnable.java"
              },
              "line": 27
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.dispatch()",
                "filename": "InvocationEvent.java"
              },
              "line": 318
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 781
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 573
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1cc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 387
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "boolean sun.awt.SunToolkit.isInstanceOf(java.lang.Class, java.lang.String)",
                "filename": "SunToolkit.java"
              },
              "line": 2088
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x43",
          "lines": [
            {
              "function": {
                "name": "boolean sun.awt.SunToolkit.isInstanceOf(java.lang.Class, java.lang.String)",
                "filename": "SunToolkit.java"
              },
              "line": 2099
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x43",
          "lines": [
            {
              "function": {
                "name": "boolean sun.awt.SunToolkit.isInstanceOf(java.lang.Class, java.lang.String)",
                "filename": "SunToolkit.java"
              },
              "line": 2099
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x43",
          "lines": [
            {
              "function": {
                "name": "boolean sun.awt.SunToolkit.isInstanceOf(java.lang.Class, java.lang.String)",
                "filename": "SunToolkit.java"
              },
              "line": 2099
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x43",
          "lines": [
            {
              "function": {
                "name": "boolean sun.awt.SunToolkit.isInstanceOf(java.lang.Class, java.lang.String)",
                "filename": "SunToolkit.java"
              },
              "line": 2099
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "boolean sun.awt.SunToolkit.isInstanceOf(java.lang.Object, java.lang.String)",
                "filename": "SunToolkit.java"
              },
              "line": 2084
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.LookAndFeel.installProperty(javax.swing.JComponent, java.lang.String, java.lang.Object)",
                "filename": "LookAndFeel.java"
              },
              "line": 280
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.plaf.basic.BasicLabelUI.installDefaults(javax.swing.JLabel)",
                "filename": "BasicLabelUI.java"
              },
              "line": 369
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.plaf.basic.BasicLabelUI.installUI(javax.swing.JComponent)",
                "filename": "BasicLabelUI.java"
              },
              "line": 348
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.setUI(javax.swing.plaf.ComponentUI)",
                "filename": "JComponent.java"
              },
              "line": 743
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JLabel.setUI(javax.swing.plaf.LabelUI)",
                "filename": "JLabel.java"
              },
              "line": 274
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JLabel.updateUI()",
                "filename": "JLabel.java"
              },
              "line": 288
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x53",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JLabel.\u003cinit\u003e(java.lang.String, javax.swing.Icon, int)",
                "filename": "JLabel.java"
              },
              "line": 180
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JLabel.\u003cinit\u003e()",
                "filename": "JLabel.java"
              },
              "line": 251
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10d",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.wm.impl.status.PresentationModeProgressPanel.$$$setupUI$$$()",
                "filename": "PresentationModeProgressPanel.java"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.wm.impl.status.PresentationModeProgressPanel.\u003cinit\u003e(com.intellij.openapi.wm.impl.status.InfoAndProgressPanel$MyInlineProgressIndicator)",
                "filename": "PresentationModeProgressPanel.java"
              },
              "line": 35
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.wm.impl.status.ProcessBalloon.show(javax.swing.JRootPane)",
                "filename": "ProcessBalloon.kt"
              },
              "line": 63
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.wm.impl.status.ProcessBalloon.addIndicator(javax.swing.JRootPane, com.intellij.openapi.wm.impl.status.InfoAndProgressPanel$MyInlineProgressIndicator)",
                "filename": "ProcessBalloon.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.wm.impl.status.InfoAndProgressPanel.addProgress(com.intellij.openapi.wm.ex.ProgressIndicatorEx, com.intellij.openapi.progress.TaskInfo)",
                "filename": "InfoAndProgressPanel.kt"
              },
              "line": 248
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x59",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.wm.impl.status.IdeStatusBarImpl.addProgressImpl$intellij_platform_ide_impl(com.intellij.openapi.wm.ex.ProgressIndicatorEx, com.intellij.openapi.progress.TaskInfo)",
                "filename": "IdeStatusBarImpl.kt"
              },
              "line": 541
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.wm.impl.status.IdeStatusBarImpl.addProgress(com.intellij.openapi.wm.ex.ProgressIndicatorEx, com.intellij.openapi.progress.TaskInfo)",
                "filename": "IdeStatusBarImpl.kt"
              },
              "line": 464
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.BackgroundableProcessIndicator.doBackground(com.intellij.openapi.wm.ex.StatusBarEx)",
                "filename": "BackgroundableProcessIndicator.java"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9d",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.BackgroundableProcessIndicator.initializeStatusBar()",
                "filename": "BackgroundableProcessIndicator.java"
              },
              "line": 94
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.BackgroundableProcessIndicator$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.ui.EdtInvocationManager.invokeLaterIfNeeded(java.lang.Runnable)",
                "filename": "EdtInvocationManager.java"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x35",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.BackgroundableProcessIndicator.\u003cinit\u003e(com.intellij.openapi.project.Project, com.intellij.openapi.progress.TaskInfo, com.intellij.openapi.wm.ex.StatusBarEx)",
                "filename": "BackgroundableProcessIndicator.java"
              },
              "line": 68
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.BackgroundableProcessIndicator.\u003cinit\u003e(com.intellij.openapi.project.Project, com.intellij.openapi.progress.TaskInfo)",
                "filename": "BackgroundableProcessIndicator.java"
              },
              "line": 56
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.BackgroundableProcessIndicator.\u003cinit\u003e(com.intellij.openapi.progress.Task$Backgroundable)",
                "filename": "BackgroundableProcessIndicator.java"
              },
              "line": 41
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.progress.ProgressIndicator com.intellij.openapi.progress.impl.ProgressManagerImpl.createDefaultAsynchronousProgressIndicator(com.intellij.openapi.progress.Task$Backgroundable)",
                "filename": "ProgressManagerImpl.java"
              },
              "line": 149
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.util.concurrent.Future com.intellij.openapi.progress.impl.CoreProgressManager.runProcessWithProgressAsynchronously(com.intellij.openapi.progress.Task$Backgroundable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 476
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.CoreProgressManager.runAsynchronously(com.intellij.openapi.progress.Task$Backgroundable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 453
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.CoreProgressManager.run(com.intellij.openapi.progress.Task)",
                "filename": "CoreProgressManager.java"
              },
              "line": 436
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x26",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.MergingQueueGuiExecutor.startInBackgroundWithVisibleOrInvisibleProgress(kotlin.jvm.functions.Function1)",
                "filename": "MergingQueueGuiExecutor.kt"
              },
              "line": 205
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.MergingQueueGuiExecutor.startBackgroundProcess$lambda$6(com.intellij.openapi.project.MergingQueueGuiExecutor, kotlin.jvm.functions.Function0, com.intellij.openapi.project.SingleTaskExecutor$AutoclosableProgressive)",
                "filename": "MergingQueueGuiExecutor.kt"
              },
              "line": 153
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.MergingQueueGuiExecutor$$Lambda+\u003chidden\u003e.accept(java.lang.Object)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa3",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.project.SingleTaskExecutor.tryStartProcess(java.util.function.Consumer)",
                "filename": "SingleTaskExecutor.kt"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.MergingQueueGuiExecutor.startBackgroundProcess(kotlin.jvm.functions.Function0)",
                "filename": "MergingQueueGuiExecutor.kt"
              },
              "line": 148
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.DumbServiceImpl$DumbTaskLauncher.launch()",
                "filename": "DumbServiceImpl.kt"
              },
              "line": 116
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.project.DumbServiceImpl$queueTaskOnEdt$1.invokeSuspend(java.lang.Object)",
                "filename": "DumbServiceImpl.kt"
              },
              "line": 433
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x33",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.DispatchedRunnable.run()",
                "filename": "DispatchedRunnable.kt"
              },
              "line": 44
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.runWithWritingAllowed(java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 236
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.access$100(com.intellij.openapi.application.TransactionGuardImpl, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 25
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x16",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl$2.run()",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 218
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.FlushQueue.runNextEvent(com.intellij.openapi.application.impl.FlushQueue$RunnableInfo)",
                "filename": "FlushQueue.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x31",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.FlushQueue.flushNow()",
                "filename": "FlushQueue.java"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.FlushQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.dispatch()",
                "filename": "InvocationEvent.java"
              },
              "line": 318
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 781
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 573
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1ff",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 395
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x67",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.vfs.AsyncFileListener$ChangeApplier com.intellij.workspaceModel.ide.impl.WorkspaceModelRootWatcher.prepareChange(java.util.List)",
                "filename": "WorkspaceModelRootWatcher.kt"
              },
              "line": 18
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.AsyncEventSupport.lambda$runAsyncListeners$0(java.util.List, com.intellij.openapi.vfs.AsyncFileListener, java.util.List)",
                "filename": "AsyncEventSupport.java"
              },
              "line": 90
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.AsyncEventSupport$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runReadAction$lambda$3(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 258
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runReadAction(java.lang.Class, com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 272
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 258
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 853
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7c",
          "lines": [
            {
              "function": {
                "name": "java.util.List com.intellij.openapi.vfs.newvfs.AsyncEventSupport.runAsyncListeners(java.util.List)",
                "filename": "AsyncEventSupport.java"
              },
              "line": 90
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x16",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.AsyncEventSupport$1.before(java.util.List)",
                "filename": "AsyncEventSupport.java"
              },
              "line": 54
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18",
          "lines": [
            {
              "function": {
                "name": "void java.lang.invoke.LambdaForm$DMH+0x00007e27444a4000.invokeInterface(java.lang.Object, java.lang.Object, java.lang.Object)",
                "filename": "LambdaForm$DMH"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x37",
          "lines": [
            {
              "function": {
                "name": "void java.lang.invoke.LambdaForm$MH+0x00007e27445ec000.invoke(java.lang.Object, java.lang.Object)",
                "filename": "LambdaForm$MH"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void java.lang.invoke.LambdaForm$MH+0x00007e27445ec400.invokeExact_MT(java.lang.Object, java.lang.Object, java.lang.Object)",
                "filename": "LambdaForm$MH"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.messages.impl.MessageBusImplKt.invokeMethod(java.lang.Object, java.lang.Object[], java.lang.invoke.MethodHandle)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 768
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x38",
          "lines": [
            {
              "function": {
                "name": "java.lang.Throwable com.intellij.util.messages.impl.MessageBusImplKt.invokeListener(java.lang.invoke.MethodHandle, java.lang.String, java.lang.Object[], com.intellij.util.messages.Topic, java.lang.Object, java.util.Set, java.lang.Throwable)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 708
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x66",
          "lines": [
            {
              "function": {
                "name": "java.lang.Throwable com.intellij.util.messages.impl.MessageBusImplKt.executeOrAddToQueue(com.intellij.util.messages.Topic, java.lang.reflect.Method, java.lang.Object[], java.lang.Object[], com.intellij.util.messages.impl.MessageQueue, java.lang.Throwable, com.intellij.util.messages.impl.MessageBusImpl)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 533
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6a",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.messages.impl.ToDirectChildrenMessagePublisher.publish$intellij_platform_core(java.lang.reflect.Method, java.lang.Object[], com.intellij.util.messages.impl.MessageQueue)",
                "filename": "CompositeMessageBus.kt"
              },
              "line": 281
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x37",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.messages.impl.MessagePublisher.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
                "filename": "MessageBusImpl.kt"
              },
              "line": 481
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "void jdk.proxy2.$Proxy156.before(java.util.List)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.lambda$fireBeforeEvents$20(com.intellij.openapi.vfs.newvfs.BulkFileListener, java.util.List)",
                "filename": "PersistentFSImpl.java"
              },
              "line": 1483
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.runSuppressing(java.lang.Runnable, java.lang.Runnable, java.lang.Runnable)",
                "filename": "PersistentFSImpl.java"
              },
              "line": 1107
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x24",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.fireBeforeEvents(com.intellij.openapi.vfs.newvfs.BulkFileListener, java.util.List)",
                "filename": "PersistentFSImpl.java"
              },
              "line": 1482
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.lambda$processEvent$11(com.intellij.openapi.vfs.newvfs.BulkFileListener, java.util.List)",
                "filename": "PersistentFSImpl.java"
              },
              "line": 1088
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.runSuppressing(java.lang.Runnable, java.lang.Runnable, java.lang.Runnable)",
                "filename": "PersistentFSImpl.java"
              },
              "line": 1107
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x63",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.processEvent(com.intellij.openapi.vfs.newvfs.events.VFileEvent)",
                "filename": "PersistentFSImpl.java"
              },
              "line": 1087
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.deleteFile(java.lang.Object, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "PersistentFSImpl.java"
              },
              "line": 762
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.vfs.newvfs.impl.VirtualFileSystemEntry.delete(java.lang.Object)",
                "filename": "VirtualFileSystemEntry.java"
              },
              "line": 302
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x46",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.psi.impl.file.PsiFileImplUtil.doDelete(com.intellij.psi.PsiFile)",
                "filename": "PsiFileImplUtil.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.psi.impl.file.PsiBinaryFileImpl.delete()",
                "filename": "PsiBinaryFileImpl.java"
              },
              "line": 209
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.util.DeleteHandler.lambda$doDeleteFiles$5(com.intellij.ide.util.DeleteHandler$LocalFilesDeleteTask, com.intellij.openapi.project.Project)",
                "filename": "DeleteHandler.java"
              },
              "line": 335
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.util.DeleteHandler$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteAction$lambda$5(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 379
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteAction(java.lang.Class, com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 389
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 379
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.ApplicationImpl.runWriteAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 896
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xcc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.util.DeleteHandler.doDeleteFiles(com.intellij.openapi.project.Project, com.intellij.psi.PsiElement[])",
                "filename": "DeleteHandler.java"
              },
              "line": 332
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x46",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.util.DeleteHandler.lambda$deleteInCommand$0(com.intellij.openapi.project.Project, com.intellij.psi.PsiElement[])",
                "filename": "DeleteHandler.java"
              },
              "line": 225
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.util.DeleteHandler$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.fileEditor.impl.NonProjectFileWritingAccessProvider.disableChecksDuring(java.lang.Runnable)",
                "filename": "NonProjectFileWritingAccessProvider.java"
              },
              "line": 172
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.util.DeleteHandler.lambda$deleteInCommand$1(com.intellij.openapi.project.Project, com.intellij.psi.PsiElement[])",
                "filename": "DeleteHandler.java"
              },
              "line": 212
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.util.DeleteHandler$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.command.impl.CoreCommandProcessor.executeCommand(com.intellij.openapi.project.Project, java.lang.Runnable, java.lang.String, java.lang.Object, com.intellij.openapi.command.UndoConfirmationPolicy, boolean, com.intellij.openapi.editor.Document)",
                "filename": "CoreCommandProcessor.java"
              },
              "line": 226
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.command.impl.CoreCommandProcessor.executeCommand(com.intellij.openapi.project.Project, java.lang.Runnable, java.lang.String, java.lang.Object, com.intellij.openapi.command.UndoConfirmationPolicy, com.intellij.openapi.editor.Document)",
                "filename": "CoreCommandProcessor.java"
              },
              "line": 178
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.command.impl.CoreCommandProcessor.executeCommand(com.intellij.openapi.project.Project, java.lang.Runnable, java.lang.String, java.lang.Object, com.intellij.openapi.command.UndoConfirmationPolicy)",
                "filename": "CoreCommandProcessor.java"
              },
              "line": 168
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.command.impl.CoreCommandProcessor.executeCommand(com.intellij.openapi.project.Project, java.lang.Runnable, java.lang.String, java.lang.Object)",
                "filename": "CoreCommandProcessor.java"
              },
              "line": 154
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.util.DeleteHandler.deleteInCommand(com.intellij.openapi.project.Project, com.intellij.psi.PsiElement[])",
                "filename": "DeleteHandler.java"
              },
              "line": 212
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.util.DeleteHandler.deletePsiElement(com.intellij.psi.PsiElement[], com.intellij.openapi.project.Project, boolean)",
                "filename": "DeleteHandler.java"
              },
              "line": 197
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.util.DeleteHandler.deletePsiElement(com.intellij.psi.PsiElement[], com.intellij.openapi.project.Project)",
                "filename": "DeleteHandler.java"
              },
              "line": 124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x76",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.projectView.impl.ProjectViewDeleteElementProvider.deleteElement(com.intellij.openapi.actionSystem.DataContext)",
                "filename": "ProjectViewDeleteElementProvider.java"
              },
              "line": 60
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.actions.DeleteAction.actionPerformed(com.intellij.openapi.actionSystem.AnActionEvent)",
                "filename": "DeleteAction.java"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.actionSystem.ex.ActionUtil.doPerformActionOrShowPopup(com.intellij.openapi.actionSystem.AnAction, com.intellij.openapi.actionSystem.AnActionEvent, java.util.function.Consumer)",
                "filename": "ActionUtil.kt"
              },
              "line": 374
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x28",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.keymap.impl.ActionProcessor.performAction(java.awt.event.InputEvent, com.intellij.openapi.actionSystem.AnAction, com.intellij.openapi.actionSystem.AnActionEvent)",
                "filename": "ActionProcessor.java"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x17",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher$actionProcessor$1.performAction(java.awt.event.InputEvent, com.intellij.openapi.actionSystem.AnAction, com.intellij.openapi.actionSystem.AnActionEvent)",
                "filename": "IdeKeyEventDispatcher.kt"
              },
              "line": 499
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.keymap.impl.IdeKeyEventDispatcherKt.doPerformActionInner$lambda$8$lambda$7(com.intellij.openapi.keymap.impl.ActionProcessor, java.awt.event.InputEvent, com.intellij.openapi.actionSystem.AnAction, com.intellij.openapi.actionSystem.AnActionEvent)",
                "filename": "IdeKeyEventDispatcher.kt"
              },
              "line": 850
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.keymap.impl.IdeKeyEventDispatcherKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performUserActivity(java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 98
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.keymap.impl.IdeKeyEventDispatcherKt.doPerformActionInner$lambda$8(int, com.intellij.openapi.keymap.impl.ActionProcessor, java.awt.event.InputEvent, com.intellij.openapi.actionSystem.AnAction, com.intellij.openapi.actionSystem.AnActionEvent)",
                "filename": "IdeKeyEventDispatcher.kt"
              },
              "line": 850
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.keymap.impl.IdeKeyEventDispatcherKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1ca",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.actionSystem.impl.ActionManagerImpl.performWithActionCallbacks(com.intellij.openapi.actionSystem.AnAction, com.intellij.openapi.actionSystem.AnActionEvent, java.lang.Runnable)",
                "filename": "ActionManagerImpl.kt"
              },
              "line": 1173
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.actionSystem.ex.ActionUtil.performDumbAwareWithCallbacks(com.intellij.openapi.actionSystem.AnAction, com.intellij.openapi.actionSystem.AnActionEvent, java.lang.Runnable)",
                "filename": "ActionUtil.kt"
              },
              "line": 396
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x32",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.keymap.impl.IdeKeyEventDispatcherKt.doPerformActionInner(java.awt.event.InputEvent, com.intellij.openapi.keymap.impl.ActionProcessor, com.intellij.openapi.actionSystem.DataContext, com.intellij.openapi.actionSystem.AnAction, com.intellij.openapi.actionSystem.AnActionEvent)",
                "filename": "IdeKeyEventDispatcher.kt"
              },
              "line": 848
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.keymap.impl.IdeKeyEventDispatcherKt.access$doPerformActionInner(java.awt.event.InputEvent, com.intellij.openapi.keymap.impl.ActionProcessor, com.intellij.openapi.actionSystem.DataContext, com.intellij.openapi.actionSystem.AnAction, com.intellij.openapi.actionSystem.AnActionEvent)",
                "filename": "IdeKeyEventDispatcher.kt"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x185",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.processAction(java.awt.event.InputEvent, java.lang.String, com.intellij.openapi.actionSystem.DataContext, java.util.List, com.intellij.openapi.keymap.impl.ActionProcessor, com.intellij.openapi.actionSystem.impl.PresentationFactory, com.intellij.openapi.actionSystem.Shortcut)",
                "filename": "IdeKeyEventDispatcher.kt"
              },
              "line": 577
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.processAction(java.awt.event.InputEvent, com.intellij.openapi.keymap.impl.ActionProcessor)",
                "filename": "IdeKeyEventDispatcher.kt"
              },
              "line": 512
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.processActionOrWaitSecondStroke(javax.swing.KeyStroke)",
                "filename": "IdeKeyEventDispatcher.kt"
              },
              "line": 451
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x146",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.inInitState()",
                "filename": "IdeKeyEventDispatcher.kt"
              },
              "line": 444
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c9",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.dispatchKeyEvent(java.awt.event.KeyEvent)",
                "filename": "IdeKeyEventDispatcher.kt"
              },
              "line": 306
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchKeyEvent(java.awt.event.KeyEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 606
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue._dispatchEvent$lambda$22(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 565
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x130",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 565
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1ff",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 395
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x40f84",
          "lines": [
            {
              "function": {
                "name": "libX11.so.6.4.0 0x40f84"
              }
            }
          ],
          "mapping": {
            "start": "0x19000",
            "limit": "0xa9000",
            "offset": "0x19000",
            "filename": "libX11.so.6.4.0",
            "build_id": "4cb55b1a3e1fcb63bde78cbab338d576fc43e330"
          }
        },
        {
          "address": "0x46148",
          "lines": [
            {
              "function": {
                "name": "libX11.so.6.4.0 0x46148"
              }
            }
          ],
          "mapping": {
            "start": "0x19000",
            "limit": "0xa9000",
            "offset": "0x19000",
            "filename": "libX11.so.6.4.0",
            "build_id": "4cb55b1a3e1fcb63bde78cbab338d576fc43e330"
          }
        },
        {
          "address": "0x2b478",
          "lines": [
            {
              "function": {
                "name": "libX11.so.6.4.0 0x2b478"
              }
            }
          ],
          "mapping": {
            "start": "0x19000",
            "limit": "0xa9000",
            "offset": "0x19000",
            "filename": "libX11.so.6.4.0",
            "build_id": "4cb55b1a3e1fcb63bde78cbab338d576fc43e330"
          }
        },
        {
          "address": "0x737aa",
          "lines": [
            {
              "function": {
                "name": "libX11.so.6.4.0 0x737aa"
              }
            }
          ],
          "mapping": {
            "start": "0x19000",
            "limit": "0xa9000",
            "offset": "0x19000",
            "filename": "libX11.so.6.4.0",
            "build_id": "4cb55b1a3e1fcb63bde78cbab338d576fc43e330"
          }
        },
        {
          "address": "0x74e94",
          "lines": [
            {
              "function": {
                "name": "libX11.so.6.4.0 0x74e94"
              }
            }
          ],
          "mapping": {
            "start": "0x19000",
            "limit": "0xa9000",
            "offset": "0x19000",
            "filename": "libX11.so.6.4.0",
            "build_id": "4cb55b1a3e1fcb63bde78cbab338d576fc43e330"
          }
        },
        {
          "address": "0x78b39",
          "lines": [
            {
              "function": {
                "name": "libX11.so.6.4.0 0x78b39"
              }
            }
          ],
          "mapping": {
            "start": "0x19000",
            "limit": "0xa9000",
            "offset": "0x19000",
            "filename": "libX11.so.6.4.0",
            "build_id": "4cb55b1a3e1fcb63bde78cbab338d576fc43e330"
          }
        },
        {
          "address": "0x632d6",
          "lines": [
            {
              "function": {
                "name": "libX11.so.6.4.0 0x632d6"
              }
            }
          ],
          "mapping": {
            "start": "0x19000",
            "limit": "0xa9000",
            "offset": "0x19000",
            "filename": "libX11.so.6.4.0",
            "build_id": "4cb55b1a3e1fcb63bde78cbab338d576fc43e330"
          }
        },
        {
          "address": "0x3f999",
          "lines": [
            {
              "function": {
                "name": "libawt_xawt.so 0x3f999"
              }
            }
          ],
          "mapping": {
            "start": "0x13000",
            "limit": "0x5d000",
            "offset": "0x13000",
            "filename": "libawt_xawt.so",
            "build_id": "134d9e7faf72035d5f259dcf73c8774bb044da7a"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "java.lang.String sun.awt.X11InputMethodBase.resetXIC()",
                "filename": "X11InputMethodBase.java"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "java.lang.String sun.awt.X11InputMethodBase.invokeResetXIC()",
                "filename": "X11InputMethodBase.java"
              },
              "line": 802
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XInputMethod.endComposition()",
                "filename": "XInputMethod.java"
              },
              "line": 135
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XInputMethod.dispatchEvent(java.awt.AWTEvent)",
                "filename": "XInputMethod.java"
              },
              "line": 115
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa7",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.im.InputContext.dispatchEvent(java.awt.AWTEvent)",
                "filename": "InputContext.java"
              },
              "line": 263
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3a",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.im.InputMethodContext.dispatchEvent(java.awt.AWTEvent)",
                "filename": "InputMethodContext.java"
              },
              "line": 197
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x16d",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Component.dispatchEventImpl(java.awt.AWTEvent)",
                "filename": "Component.java"
              },
              "line": 4974
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent)",
                "filename": "Container.java"
              },
              "line": 2324
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Component.dispatchEvent(java.awt.AWTEvent)",
                "filename": "Component.java"
              },
              "line": 4860
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a1",
          "lines": [
            {
              "function": {
                "name": "void java.awt.LightweightDispatcher.retargetMouseEvent(java.awt.Component, int, java.awt.event.MouseEvent)",
                "filename": "Container.java"
              },
              "line": 4963
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x90",
          "lines": [
            {
              "function": {
                "name": "boolean java.awt.LightweightDispatcher.processMouseEvent(java.awt.event.MouseEvent)",
                "filename": "Container.java"
              },
              "line": 4574
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x32",
          "lines": [
            {
              "function": {
                "name": "boolean java.awt.LightweightDispatcher.dispatchEvent(java.awt.AWTEvent)",
                "filename": "Container.java"
              },
              "line": 4518
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent)",
                "filename": "Container.java"
              },
              "line": 2310
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Window.dispatchEventImpl(java.awt.AWTEvent)",
                "filename": "Window.java"
              },
              "line": 2810
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void java.awt.Component.dispatchEvent(java.awt.AWTEvent)",
                "filename": "Component.java"
              },
              "line": 4860
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 783
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 98
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$5.run()",
                "filename": "EventQueue.java"
              },
              "line": 755
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$5.run()",
                "filename": "EventQueue.java"
              },
              "line": 753
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x49",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 752
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x43",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchMouseEvent(java.awt.event.MouseEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 621
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue._dispatchEvent$lambda$21(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 564
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x115",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 564
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1ff",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 395
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x3f",
          "lines": [
            {
              "function": {
                "name": "int java.util.Arrays.binarySearch0(int[], int, int, int)",
                "filename": "Arrays.java"
              },
              "line": 1717
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "int java.util.Arrays.binarySearch(int[], int)",
                "filename": "Arrays.java"
              },
              "line": 1660
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x55",
          "lines": [
            {
              "function": {
                "name": "int com.intellij.openapi.editor.impl.LineSet.findLineIndex(int)",
                "filename": "LineSet.java"
              },
              "line": 169
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "int com.intellij.openapi.editor.impl.DocumentImpl.getLineNumber(int)",
                "filename": "DocumentImpl.java"
              },
              "line": 1034
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x53",
          "lines": [
            {
              "function": {
                "name": "int com.intellij.openapi.editor.impl.RangeHighlighterImpl.getAffectedAreaStartOffset()",
                "filename": "RangeHighlighterImpl.java"
              },
              "line": 384
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "int com.intellij.openapi.editor.ex.RangeHighlighterEx$$Lambda+\u003chidden\u003e.applyAsInt(java.lang.Object)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "int java.util.Comparator.lambda$comparingInt$7b0bb60$1(java.util.function.ToIntFunction, java.lang.Object, java.lang.Object)",
                "filename": "Comparator.java"
              },
              "line": 494
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "int java.util.Comparator$$Lambda+\u003chidden\u003e.compare(java.lang.Object, java.lang.Object)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.editor.ex.MarkupIterator com.intellij.openapi.editor.ex.MarkupIterator$2.choose()",
                "filename": "MarkupIterator.java"
              },
              "line": 71
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.editor.ex.MarkupIterator$2.peek()",
                "filename": "MarkupIterator.java"
              },
              "line": 82
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.editor.impl.FilteringMarkupIterator.peek()",
                "filename": "FilteringMarkupIterator.java"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.editor.impl.FilteringMarkupIterator.skipUnrelated()",
                "filename": "FilteringMarkupIterator.java"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.editor.impl.FilteringMarkupIterator.next()",
                "filename": "FilteringMarkupIterator.java"
              },
              "line": 40
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x58",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.editor.impl.EditorGutterComponentImpl.processRangeHighlighters(int, int, com.intellij.openapi.editor.impl.EditorGutterComponentImpl$RangeHighlighterProcessor)",
                "filename": "EditorGutterComponentImpl.java"
              },
              "line": 877
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "it.unimi.dsi.fastutil.ints.Int2ObjectMap com.intellij.openapi.editor.impl.EditorGutterComponentImpl.buildGutterRenderersCache()",
                "filename": "EditorGutterComponentImpl.java"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "it.unimi.dsi.fastutil.objects.ObjectIterable com.intellij.openapi.editor.impl.EditorGutterComponentImpl.processGutterRenderers()",
                "filename": "EditorGutterComponentImpl.java"
              },
              "line": 1199
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x96",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.editor.impl.EditorGutterComponentImpl.calcLineMarkerAreaWidth(boolean)",
                "filename": "EditorGutterComponentImpl.java"
              },
              "line": 1129
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x16",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.editor.impl.EditorGutterComponentImpl.updateSize(boolean, boolean)",
                "filename": "EditorGutterComponentImpl.java"
              },
              "line": 954
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.editor.impl.EditorGutterComponentImpl.updateSize()",
                "filename": "EditorGutterComponentImpl.java"
              },
              "line": 944
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.editor.impl.EditorGutterComponentImpl$1.exitDumbMode()",
                "filename": "EditorGutterComponentImpl.java"
              },
              "line": 234
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.lang.invoke.LambdaForm$DMH+0x00007e2744210c00.invokeInterface(java.lang.Object, java.lang.Object)",
                "filename": "LambdaForm$DMH"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x26",
          "lines": [
            {
              "function": {
                "name": "void java.lang.invoke.LambdaForm$MH+0x00007e27472a0000.invoke(java.lang.Object, java.lang.Object)",
                "filename": "LambdaForm$MH"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.lang.invoke.LambdaForm$MH+0x00007e2744212400.invoke_MT(java.lang.Object, java.lang.Object, java.lang.Object)",
                "filename": "LambdaForm$MH"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.messages.impl.MessageBusImplKt.invokeMethod(java.lang.Object, java.lang.Object[], java.lang.invoke.MethodHandle)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 765
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x47",
          "lines": [
            {
              "function": {
                "name": "java.lang.Throwable com.intellij.util.messages.impl.MessageBusImplKt.invokeListener(java.lang.invoke.MethodHandle, java.lang.String, java.lang.Object[], com.intellij.util.messages.Topic, java.lang.Object, java.util.Set, java.lang.Throwable)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 712
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x82",
          "lines": [
            {
              "function": {
                "name": "java.lang.Throwable com.intellij.util.messages.impl.MessageBusImplKt.deliverMessage(com.intellij.util.messages.impl.Message, com.intellij.util.messages.impl.MessageQueue, java.lang.Throwable)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 451
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x45",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.messages.impl.MessageBusImplKt.pumpWaiting(com.intellij.util.messages.impl.MessageQueue)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 420
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.messages.impl.MessageBusImplKt.access$pumpWaiting(com.intellij.util.messages.impl.MessageQueue)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x58",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.messages.impl.MessagePublisher.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
                "filename": "MessageBusImpl.kt"
              },
              "line": 487
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "void jdk.proxy2.$Proxy225.handle(com.intellij.execution.services.ServiceEventListener$ServiceEvent)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.platform.execution.dashboard.RunDashboardManagerImpl.updateDashboard(boolean)",
                "filename": "RunDashboardManagerImpl.java"
              },
              "line": 464
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.platform.execution.dashboard.RunDashboardManagerImpl$8.exitDumbMode()",
                "filename": "RunDashboardManagerImpl.java"
              },
              "line": 229
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.lang.invoke.LambdaForm$DMH+0x00007e2744210c00.invokeInterface(java.lang.Object, java.lang.Object)",
                "filename": "LambdaForm$DMH"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x26",
          "lines": [
            {
              "function": {
                "name": "void java.lang.invoke.LambdaForm$MH+0x00007e27472a0000.invoke(java.lang.Object, java.lang.Object)",
                "filename": "LambdaForm$MH"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.lang.invoke.LambdaForm$MH+0x00007e2744212400.invoke_MT(java.lang.Object, java.lang.Object, java.lang.Object)",
                "filename": "LambdaForm$MH"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.messages.impl.MessageBusImplKt.invokeMethod(java.lang.Object, java.lang.Object[], java.lang.invoke.MethodHandle)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 765
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x47",
          "lines": [
            {
              "function": {
                "name": "java.lang.Throwable com.intellij.util.messages.impl.MessageBusImplKt.invokeListener(java.lang.invoke.MethodHandle, java.lang.String, java.lang.Object[], com.intellij.util.messages.Topic, java.lang.Object, java.util.Set, java.lang.Throwable)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 712
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x82",
          "lines": [
            {
              "function": {
                "name": "java.lang.Throwable com.intellij.util.messages.impl.MessageBusImplKt.deliverMessage(com.intellij.util.messages.impl.Message, com.intellij.util.messages.impl.MessageQueue, java.lang.Throwable)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 451
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x45",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.messages.impl.MessageBusImplKt.pumpWaiting(com.intellij.util.messages.impl.MessageQueue)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 420
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.messages.impl.MessageBusImplKt.access$pumpWaiting(com.intellij.util.messages.impl.MessageQueue)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x68",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.messages.impl.MessagePublisher.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
                "filename": "MessageBusImpl.kt"
              },
              "line": 493
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void jdk.proxy2.$Proxy139.beforePsiChanged(boolean)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.psi.impl.PsiManagerImpl.beforeChange(boolean)",
                "filename": "PsiManagerImpl.java"
              },
              "line": 434
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.psi.impl.PsiManagerImpl.beforePropertyChange(com.intellij.psi.impl.PsiTreeChangeEventImpl)",
                "filename": "PsiManagerImpl.java"
              },
              "line": 252
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.psi.impl.file.impl.FileManagerImpl.lambda$processFileTypesChanged$3(boolean)",
                "filename": "FileManagerImpl.java"
              },
              "line": 305
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.psi.impl.file.impl.FileManagerImpl$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteAction$lambda$5(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 379
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteAction(java.lang.Class, com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 389
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 379
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.ApplicationImpl.runWriteAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 896
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.psi.impl.file.impl.FileManagerImpl.lambda$processFileTypesChanged$4(boolean)",
                "filename": "FileManagerImpl.java"
              },
              "line": 302
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.psi.impl.file.impl.FileManagerImpl$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.psi.impl.DebugUtil.performPsiModification(java.lang.String, com.intellij.util.ThrowableRunnable)",
                "filename": "DebugUtil.java"
              },
              "line": 534
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.psi.impl.file.impl.FileManagerImpl.processFileTypesChanged(boolean)",
                "filename": "FileManagerImpl.java"
              },
              "line": 300
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.psi.impl.file.impl.FileManagerImpl$1.exitDumbMode()",
                "filename": "FileManagerImpl.java"
              },
              "line": 81
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.lang.invoke.LambdaForm$DMH+0x00007e2744210c00.invokeInterface(java.lang.Object, java.lang.Object)",
                "filename": "LambdaForm$DMH"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x26",
          "lines": [
            {
              "function": {
                "name": "void java.lang.invoke.LambdaForm$MH+0x00007e27472a0000.invoke(java.lang.Object, java.lang.Object)",
                "filename": "LambdaForm$MH"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.lang.invoke.LambdaForm$MH+0x00007e2744212400.invoke_MT(java.lang.Object, java.lang.Object, java.lang.Object)",
                "filename": "LambdaForm$MH"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.messages.impl.MessageBusImplKt.invokeMethod(java.lang.Object, java.lang.Object[], java.lang.invoke.MethodHandle)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 765
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x47",
          "lines": [
            {
              "function": {
                "name": "java.lang.Throwable com.intellij.util.messages.impl.MessageBusImplKt.invokeListener(java.lang.invoke.MethodHandle, java.lang.String, java.lang.Object[], com.intellij.util.messages.Topic, java.lang.Object, java.util.Set, java.lang.Throwable)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 712
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x82",
          "lines": [
            {
              "function": {
                "name": "java.lang.Throwable com.intellij.util.messages.impl.MessageBusImplKt.deliverMessage(com.intellij.util.messages.impl.Message, com.intellij.util.messages.impl.MessageQueue, java.lang.Throwable)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 451
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x97",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.messages.impl.MessageBusImplKt.pumpWaiting(com.intellij.util.messages.impl.MessageQueue)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 430
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.messages.impl.MessageBusImplKt.access$pumpWaiting(com.intellij.util.messages.impl.MessageQueue)",
                "filename": "MessageBusImpl.kt"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x68",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.messages.impl.MessagePublisher.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
                "filename": "MessageBusImpl.kt"
              },
              "line": 493
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "void jdk.proxy2.$Proxy75.exitDumbMode()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.DumbServiceImpl.publishDumbModeChangedEvent$lambda$12$lambda$11(com.intellij.openapi.project.DumbServiceImpl)",
                "filename": "DumbServiceImpl.kt"
              },
              "line": 359
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.DumbServiceImpl$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.DumbServiceImpl.publishDumbModeChangedEvent$lambda$12(com.intellij.openapi.project.DumbServiceImpl)",
                "filename": "DumbServiceImpl.kt"
              },
              "line": 359
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.DumbServiceImpl$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.DumbServiceImpl$Companion.runCatchingIgnorePCE(java.lang.Runnable)",
                "filename": "DumbServiceImpl.kt"
              },
              "line": 753
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.DumbServiceImpl$Companion.access$runCatchingIgnorePCE(com.intellij.openapi.project.DumbServiceImpl$Companion, java.lang.Runnable)",
                "filename": "DumbServiceImpl.kt"
              },
              "line": 740
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.DumbServiceImpl.publishDumbModeChangedEvent()",
                "filename": "DumbServiceImpl.kt"
              },
              "line": 359
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6b",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.DumbServiceImpl.decrementDumbCounter()",
                "filename": "DumbServiceImpl.kt"
              },
              "line": 337
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.project.DumbServiceImpl.access$decrementDumbCounter(com.intellij.openapi.project.DumbServiceImpl)",
                "filename": "DumbServiceImpl.kt"
              },
              "line": 57
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.openapi.project.DumbServiceImpl$DumbTaskLauncher$close$1.invokeSuspend$lambda$0(com.intellij.openapi.project.DumbServiceImpl, com.intellij.openapi.project.DumbServiceImpl$DumbTaskLauncher)",
                "filename": "DumbServiceImpl.kt"
              },
              "line": 103
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.project.DumbServiceImpl$DumbTaskLauncher$close$1$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.writeIntentReadAction$lambda$1$lambda$0(kotlin.jvm.functions.Function0)",
                "filename": "coroutines.kt"
              },
              "line": 329
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.writeIntentReadAction$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "coroutines.kt"
              },
              "line": 329
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "coroutines.kt"
              },
              "line": 341
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x32",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(java.lang.Object)",
                "filename": "coroutines.kt"
              },
              "line": 233
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(java.lang.Object, java.lang.Object)",
                "filename": "coroutines.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.CoroutineScopeKt.coroutineScope(kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "CoroutineScope.kt"
              },
              "line": 261
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.CoroutinesKt.blockingContext(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 232
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.writeIntentReadAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 328
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.project.DumbServiceImpl$DumbTaskLauncher$close$1.invokeSuspend(java.lang.Object)",
                "filename": "DumbServiceImpl.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x33",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.DispatchedRunnable.run()",
                "filename": "DispatchedRunnable.kt"
              },
              "line": 44
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.runWithWritingAllowed(java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 236
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.access$100(com.intellij.openapi.application.TransactionGuardImpl, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 25
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x16",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl$2.run()",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 218
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.FlushQueue.runNextEvent(com.intellij.openapi.application.impl.FlushQueue$RunnableInfo)",
                "filename": "FlushQueue.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x31",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.FlushQueue.flushNow()",
                "filename": "FlushQueue.java"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.FlushQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.dispatch()",
                "filename": "InvocationEvent.java"
              },
              "line": 318
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 781
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 573
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1ff",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 395
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.JobSupport.onCancelling(java.lang.Throwable)",
                "filename": "JobSupport.kt"
              },
              "line": 999
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x58",
          "lines": [
            {
              "function": {
                "name": "boolean kotlinx.coroutines.JobSupport.tryFinalizeSimpleState(kotlinx.coroutines.Incomplete, java.lang.Object)",
                "filename": "JobSupport.kt"
              },
              "line": 292
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.JobSupport.tryMakeCompleting(java.lang.Object, java.lang.Object)",
                "filename": "JobSupport.kt"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.JobSupport.makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object)",
                "filename": "JobSupport.kt"
              },
              "line": 829
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.AbstractCoroutine.resumeWith(java.lang.Object)",
                "filename": "AbstractCoroutine.kt"
              },
              "line": 97
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x76",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 46
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.EdtCoroutineDispatcher$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl$2.run()",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 221
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.FlushQueue.runNextEvent(com.intellij.openapi.application.impl.FlushQueue$RunnableInfo)",
                "filename": "FlushQueue.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x31",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.FlushQueue.flushNow()",
                "filename": "FlushQueue.java"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.FlushQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.dispatch()",
                "filename": "InvocationEvent.java"
              },
              "line": 318
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 781
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 573
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1ff",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 395
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x4801eb",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x4801eb"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x41771a",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x41771a"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x4197c7",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x4197c7"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x419604",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x419604"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x418c32",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x418c32"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x4128c4",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x4128c4"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x471c2c",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x471c2c"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x471444",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x471444"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0xb04536",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0xb04536"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0xb07b07",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0xb07b07"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0xb070b0",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0xb070b0"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0xb05324",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0xb05324"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0xb227bb",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0xb227bb"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0xb2261e",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0xb2261e"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0xb23b5b",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0xb23b5b"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x47f4c0",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x47f4c0"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x34de0a",
          "lines": [
            {
              "function": {
                "name": "htab_map_get_next_key"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3100d0",
          "lines": [
            {
              "function": {
                "name": "map_get_next_key"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x316752",
          "lines": [
            {
              "function": {
                "name": "__sys_bpf"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x316e99",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_bpf"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6e57",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48414d",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x48414d"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x4d282c",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x4d282c"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x4d2885",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x4d2885"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x4d33ed",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x4d33ed"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x6241b3",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x6241b3"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x69a5ec",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x69a5ec"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x69a33c",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x69a33c"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0xbc14ac",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0xbc14ac"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0xbc25a4",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0xbc25a4"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0xb1f974",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0xb1f974"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        },
        {
          "address": "0x47f4c0",
          "lines": [
            {
              "function": {
                "name": "___go_build_go_opentelemetry_io_ebpf_profiler 0x47f4c0"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0xc32000",
            "offset": "0x2000",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "11e18b2cee9cdd6011fde7596c45f90e4a428c0f"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xcd2f48",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xcd2f48"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xc53067",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xc53067"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xc562d7",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xc562d7"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x6720b1",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x6720b1"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x676529",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x676529"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59b62e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59b62e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67c233",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67c233"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67f1a3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67f1a3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xd5788c",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd5788c"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd549a8",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd549a8"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x673fb9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x673fb9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x675f01",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x675f01"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59b62e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59b62e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67c233",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67c233"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67f1a3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67f1a3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xca29b1",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xca29b1"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xca4241",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xca4241"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x5dfc34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x5dfc34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x88e8b5",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x88e8b5"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xb965c3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xb965c3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59e148",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59e148"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59e148",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59e148"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x675d45",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x675d45"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59b62e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59b62e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67c233",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67c233"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67f1a3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67f1a3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xf8e0c6",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf8e0c6"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf8cb60",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf8cb60"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x752b0b",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x752b0b"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf8ea8a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf8ea8a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x666ddb",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x666ddb"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x6673d8",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x6673d8"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xc63596",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xc63596"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xc6de6d",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xc6de6d"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd56aca",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd56aca"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xc647db",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xc647db"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x890bbe",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x890bbe"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4b7167",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4b7167"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4b82d5",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4b82d5"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x89f571",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x89f571"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd45a4e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd45a4e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd46502",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd46502"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x675d45",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x675d45"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59b62e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59b62e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67c233",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67c233"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67f1a3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67f1a3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xd5c0c2",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd5c0c2"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x5c9e9a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x5c9e9a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x672338",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x672338"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x676529",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x676529"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59b62e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59b62e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67c233",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67c233"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67f1a3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67f1a3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xf991cc",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf991cc"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf99930",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf99930"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf99ea6",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf99ea6"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf9a2fb",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf9a2fb"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x892f2e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x892f2e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d0f",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d0f"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59e148",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59e148"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59e148",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59e148"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59e148",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59e148"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59e148",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59e148"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x765d47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd34374"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd347b4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd36f34"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59c77a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x675d45",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x675d45"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59b62e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x59b62e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67c233",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67c233"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67f1a3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67f1a3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xad7b4",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0xad7b4"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0xcfc1af",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xcfc1af"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x432d9e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x432d9e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xcf350a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xcf350a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x63fbf0",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x63fbf0"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x6856e1",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x6856e1"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xcc7df4",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xcc7df4"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xcc84e2",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xcc84e2"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x5d2745",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x5d2745"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4eb59b",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4eb59b"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ecd89",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ecd89"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ecfe7",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ecfe7"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4edd4b",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4edd4b"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67c233",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67c233"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67f1a3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67f1a3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x6c4a6e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x6c4a6e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x6c5c47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x6c5c47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x50e19d",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x50e19d"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x51c370",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x51c370"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x528811",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x528811"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x51c840",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x51c840"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x51c53e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x51c53e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x51c70a",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x51c70a"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ec547",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ec547"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ec9e8",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ec9e8"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ecc19",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ecc19"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ecfe7",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ecfe7"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4edd4b",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4edd4b"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67c233",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67c233"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67f1a3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67f1a3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x559925",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x559925"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x5625ba",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x5625ba"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x562e27",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x562e27"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x564b15",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x564b15"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ebfec",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ebfec"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ec90f",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ec90f"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ecc19",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ecc19"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ecfe7",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ecfe7"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4edd4b",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4edd4b"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67c233",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67c233"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67f1a3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67f1a3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x55be84",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x55be84"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x564a47",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x564a47"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ebfec",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ebfec"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ec90f",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ec90f"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ecc19",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ecc19"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ecfe7",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4ecfe7"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4edd4b",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x4edd4b"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67c233",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67c233"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67f1a3",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67f1a3"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x67fc1b",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x67fc1b"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9f705e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9f705e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "java.security.AccessControlContext java.security.AccessController.getStackAccessControlContext()",
                "filename": "AccessController.java"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "java.security.AccessControlContext java.security.AccessController.getContext()",
                "filename": "AccessController.java"
              },
              "line": 1006
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.AWTEvent.\u003cinit\u003e(java.lang.Object, int)",
                "filename": "AWTEvent.java"
              },
              "line": 120
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.\u003cinit\u003e(java.lang.Object, int, java.lang.Runnable, java.lang.Object, java.lang.Runnable, boolean)",
                "filename": "InvocationEvent.java"
              },
              "line": 291
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.\u003cinit\u003e(java.lang.Object, java.lang.Runnable)",
                "filename": "InvocationEvent.java"
              },
              "line": 177
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x10",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.GlobalCursorManager.updateCursorLater(java.awt.Component)",
                "filename": "GlobalCursorManager.java"
              },
              "line": 120
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XGlobalCursorManager.nativeUpdateCursor(java.awt.Component)",
                "filename": "XGlobalCursorManager.java"
              },
              "line": 60
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xbc",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XWindow.handleXCrossingEvent(sun.awt.X11.XEvent)",
                "filename": "XWindow.java"
              },
              "line": 1104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XComponentPeer.handleXCrossingEvent(sun.awt.X11.XEvent)",
                "filename": "XComponentPeer.java"
              },
              "line": 74
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x88",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XWindowPeer.handleXCrossingEvent(sun.awt.X11.XEvent)",
                "filename": "XWindowPeer.java"
              },
              "line": 2364
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf6",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XBaseWindow.dispatchEvent(sun.awt.X11.XEvent)",
                "filename": "XBaseWindow.java"
              },
              "line": 1220
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x82",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XWindowPeer.handleXCrossingEvent(sun.awt.X11.XEvent)",
                "filename": "XWindowPeer.java"
              },
              "line": 2360
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf6",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XBaseWindow.dispatchEvent(sun.awt.X11.XEvent)",
                "filename": "XBaseWindow.java"
              },
              "line": 1220
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x54",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XBaseWindow.dispatchToWindow(sun.awt.X11.XEvent)",
                "filename": "XBaseWindow.java"
              },
              "line": 1178
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x49",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XToolkit.dispatchEvent(sun.awt.X11.XEvent)",
                "filename": "XToolkit.java"
              },
              "line": 917
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x218",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XToolkit.run(boolean)",
                "filename": "XToolkit.java"
              },
              "line": 1064
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void sun.awt.X11.XToolkit.run()",
                "filename": "XToolkit.java"
              },
              "line": 946
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void java.lang.Thread.runWith(java.lang.Object, java.lang.Runnable)",
                "filename": "Thread.java"
              },
              "line": 1596
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void java.lang.Thread.run()",
                "filename": "Thread.java"
              },
              "line": 1583
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x73",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.util.text.StringUtilRt.equal(java.lang.CharSequence, java.lang.CharSequence, boolean)",
                "filename": "StringUtilRt.java"
              },
              "line": 35
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.containers.CharSequenceHashingStrategy.equals(java.lang.CharSequence, java.lang.CharSequence)",
                "filename": "HashingStrategy.java"
              },
              "line": 52
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.containers.CharSequenceHashingStrategy.equals(java.lang.Object, java.lang.Object)",
                "filename": "HashingStrategy.java"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1c",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.concurrency.ConcurrentHashMap.isEqual(java.lang.Object, java.lang.Object, com.intellij.util.containers.HashingStrategy)",
                "filename": "ConcurrentHashMap.java"
              },
              "line": 6253
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.concurrency.ConcurrentHashMap.isEqual(java.lang.Object, java.lang.Object)",
                "filename": "ConcurrentHashMap.java"
              },
              "line": 6249
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.concurrency.ConcurrentHashMap.get(java.lang.Object)",
                "filename": "ConcurrentHashMap.java"
              },
              "line": 917
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x37",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.fileTypes.impl.FileTypeAssocTable.findAssociatedFileType(java.lang.CharSequence)",
                "filename": "FileTypeAssocTable.java"
              },
              "line": 156
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl$FileTypeWithDescriptor com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl.lambda$getFileTypeByFileName$12(java.lang.CharSequence)",
                "filename": "FileTypeManagerImpl.java"
              },
              "line": 720
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.ConcurrencyUtil.withLock(java.util.concurrent.locks.Lock, com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ConcurrencyUtil.java"
              },
              "line": 246
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl.withReadLock(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "FileTypeManagerImpl.java"
              },
              "line": 1816
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2d",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.fileTypes.FileType com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl.getFileTypeByFileName(java.lang.CharSequence)",
                "filename": "FileTypeManagerImpl.java"
              },
              "line": 720
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.fileTypes.FileType com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl.getFileTypeByFileName(java.lang.String)",
                "filename": "FileTypeManagerImpl.java"
              },
              "line": 711
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3d",
          "lines": [
            {
              "function": {
                "name": "boolean com.goide.vgo.project.VgoLibraryRootsProvider$VgoDependenciesLibrary.shouldExclude(boolean, java.lang.String, java.util.function.BooleanSupplier, java.util.function.BooleanSupplier, java.util.function.BooleanSupplier)",
                "filename": "VgoLibraryRootsProvider.java"
              },
              "line": 114
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "boolean com.goide.vgo.project.workspaceModel.roots.VgoDependencyWorkspaceFileIndexContributor$$Lambda+\u003chidden\u003e.shouldExclude(boolean, java.lang.String, java.util.function.BooleanSupplier, java.util.function.BooleanSupplier, java.util.function.BooleanSupplier)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.roots.SyntheticLibrary$ExcludeFileCondition.lambda$transformToCondition$3(java.util.Collection, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "SyntheticLibrary.java"
              },
              "line": 236
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.roots.SyntheticLibrary$ExcludeFileCondition$$Lambda+\u003chidden\u003e.value(java.lang.Object)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "boolean com.goide.vgo.project.workspaceModel.roots.VgoDependencyWorkspaceFileIndexContributor.registerFileSets$lambda$2(com.intellij.openapi.util.Condition, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "VgoDependencyWorkspaceFileIndexContributor.kt"
              },
              "line": 34
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.goide.vgo.project.workspaceModel.roots.VgoDependencyWorkspaceFileIndexContributor$$Lambda+\u003chidden\u003e.invoke(java.lang.Object)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.workspaceModel.core.fileIndex.impl.ExcludedFileSet$ByCondition.isExcluded(com.intellij.openapi.vfs.VirtualFile)",
                "filename": "workspaceFileSets.kt"
              },
              "line": 328
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "int com.intellij.workspaceModel.core.fileIndex.impl.ExcludedFileSet$ByCondition.computeMasks(int, com.intellij.openapi.project.Project, boolean, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "workspaceFileSets.kt"
              },
              "line": 338
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x39",
          "lines": [
            {
              "function": {
                "name": "int com.intellij.workspaceModel.core.fileIndex.impl.MultipleStoredWorkspaceFileSets.computeMasks(int, com.intellij.openapi.project.Project, boolean, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "workspaceFileSets.kt"
              },
              "line": 212
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf4",
          "lines": [
            {
              "function": {
                "name": "com.intellij.workspaceModel.core.fileIndex.impl.WorkspaceFileInternalInfo com.intellij.workspaceModel.core.fileIndex.impl.WorkspaceFileIndexDataImpl.getFileInfo(com.intellij.openapi.vfs.VirtualFile, boolean, boolean, boolean, boolean, boolean)",
                "filename": "WorkspaceFileIndexDataImpl.kt"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3e",
          "lines": [
            {
              "function": {
                "name": "com.intellij.workspaceModel.core.fileIndex.impl.WorkspaceFileInternalInfo com.intellij.workspaceModel.core.fileIndex.impl.WorkspaceFileIndexImpl.getFileInfo(com.intellij.openapi.vfs.VirtualFile, boolean, boolean, boolean, boolean, boolean)",
                "filename": "WorkspaceFileIndexImpl.kt"
              },
              "line": 267
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.roots.impl.ProjectFileIndexImpl.isExcluded(com.intellij.openapi.vfs.VirtualFile)",
                "filename": "ProjectFileIndexImpl.java"
              },
              "line": 67
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.indexing.roots.IndexableFilesIterationMethods.shouldIndexFile$lambda$2(com.intellij.openapi.roots.ProjectFileIndex, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "IndexableFilesIterationMethods.kt"
              },
              "line": 98
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.indexing.roots.IndexableFilesIterationMethods$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ActionsKt.runReadAction$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "actions.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ActionsKt$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runReadAction$lambda$4(com.intellij.openapi.util.Computable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 260
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runReadAction(java.lang.Class, com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 314
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runReadAction(com.intellij.openapi.util.Computable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 260
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(com.intellij.openapi.util.Computable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 858
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ActionsKt.runReadAction(kotlin.jvm.functions.Function0)",
                "filename": "actions.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x75",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.indexing.roots.IndexableFilesIterationMethods.shouldIndexFile(com.intellij.openapi.vfs.VirtualFile, com.intellij.openapi.roots.ProjectFileIndex, java.util.Set, boolean)",
                "filename": "IndexableFilesIterationMethods.kt"
              },
              "line": 98
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.indexing.roots.IndexableFilesIterationMethods.iterateRoots$lambda$0(com.intellij.openapi.roots.ProjectFileIndex, java.util.Set, boolean, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "IndexableFilesIterationMethods.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.indexing.roots.IndexableFilesIterationMethods$$Lambda+\u003chidden\u003e.accept(com.intellij.openapi.vfs.VirtualFile)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.vfs.VirtualFileFilter.lambda$and$0(com.intellij.openapi.vfs.VirtualFileFilter, com.intellij.openapi.vfs.VirtualFile)",
                "filename": "VirtualFileFilter.java"
              },
              "line": 35
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.vfs.VirtualFileFilter$$Lambda+\u003chidden\u003e.accept(com.intellij.openapi.vfs.VirtualFile)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.vfs.VirtualFileVisitor$Result com.intellij.openapi.vfs.VfsUtilCore$1.visitFileEx(com.intellij.openapi.vfs.VirtualFile)",
                "filename": "VfsUtilCore.java"
              },
              "line": 287
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.vfs.VirtualFileVisitor$Result com.intellij.openapi.vfs.VfsUtilCore.visitChildrenRecursively(com.intellij.openapi.vfs.VirtualFile, com.intellij.openapi.vfs.VirtualFileVisitor)",
                "filename": "VfsUtilCore.java"
              },
              "line": 303
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13c",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.vfs.VirtualFileVisitor$Result com.intellij.openapi.vfs.VfsUtilCore.visitChildrenRecursively(com.intellij.openapi.vfs.VirtualFile, com.intellij.openapi.vfs.VirtualFileVisitor)",
                "filename": "VfsUtilCore.java"
              },
              "line": 335
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13c",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.vfs.VirtualFileVisitor$Result com.intellij.openapi.vfs.VfsUtilCore.visitChildrenRecursively(com.intellij.openapi.vfs.VirtualFile, com.intellij.openapi.vfs.VirtualFileVisitor)",
                "filename": "VfsUtilCore.java"
              },
              "line": 335
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13c",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.vfs.VirtualFileVisitor$Result com.intellij.openapi.vfs.VfsUtilCore.visitChildrenRecursively(com.intellij.openapi.vfs.VirtualFile, com.intellij.openapi.vfs.VirtualFileVisitor)",
                "filename": "VfsUtilCore.java"
              },
              "line": 335
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13c",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.vfs.VirtualFileVisitor$Result com.intellij.openapi.vfs.VfsUtilCore.visitChildrenRecursively(com.intellij.openapi.vfs.VirtualFile, com.intellij.openapi.vfs.VirtualFileVisitor)",
                "filename": "VfsUtilCore.java"
              },
              "line": 335
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13c",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.vfs.VirtualFileVisitor$Result com.intellij.openapi.vfs.VfsUtilCore.visitChildrenRecursively(com.intellij.openapi.vfs.VirtualFile, com.intellij.openapi.vfs.VirtualFileVisitor)",
                "filename": "VfsUtilCore.java"
              },
              "line": 335
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x27",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.vfs.VfsUtilCore.iterateChildrenRecursively(com.intellij.openapi.vfs.VirtualFile, com.intellij.openapi.vfs.VirtualFileFilter, com.intellij.openapi.roots.ContentIterator, com.intellij.openapi.vfs.VirtualFileVisitor$Option[])",
                "filename": "VfsUtilCore.java"
              },
              "line": 284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.vfs.VfsUtilCore.iterateChildrenRecursively(com.intellij.openapi.vfs.VirtualFile, com.intellij.openapi.vfs.VirtualFileFilter, com.intellij.openapi.roots.ContentIterator)",
                "filename": "VfsUtilCore.java"
              },
              "line": 277
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.indexing.roots.IndexableFilesIterationMethods.iterateRoots(com.intellij.openapi.project.Project, java.lang.Iterable, com.intellij.openapi.roots.ContentIterator, com.intellij.openapi.vfs.VirtualFileFilter, boolean)",
                "filename": "IndexableFilesIterationMethods.kt"
              },
              "line": 34
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3c",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.indexing.roots.IndexableFilesIterationMethods.iterateRoots(com.intellij.openapi.project.Project, com.intellij.util.indexing.roots.origin.IndexingSourceRootHolder, com.intellij.openapi.roots.ContentIterator, com.intellij.openapi.vfs.VirtualFileFilter, boolean)",
                "filename": "IndexableFilesIterationMethods.kt"
              },
              "line": 71
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.indexing.roots.SourceRootHolderIteratorBase.iterateFiles(com.intellij.openapi.project.Project, com.intellij.openapi.roots.ContentIterator, com.intellij.openapi.vfs.VirtualFileFilter)",
                "filename": "SourceRootHolderIteratorBase.java"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.indexing.FileBasedIndexEx.iterateIndexableFiles(com.intellij.openapi.roots.ContentIterator, com.intellij.openapi.project.Project, com.intellij.openapi.progress.ProgressIndicator)",
                "filename": "FileBasedIndexEx.java"
              },
              "line": 530
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1f",
          "lines": [
            {
              "function": {
                "name": "com.goide.stubs.index.GoIdFilter com.goide.stubs.index.GoIdFilter.lambda$createIdFilter$3(com.intellij.openapi.project.Project, com.intellij.openapi.util.Condition)",
                "filename": "GoIdFilter.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.goide.stubs.index.GoIdFilter$$Lambda+\u003chidden\u003e.call()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x27",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.FutureTask.run()",
                "filename": "FutureTask.java"
              },
              "line": 317
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x26",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext.runInChildContext(boolean, kotlin.jvm.functions.Function0)",
                "filename": "propagation.kt"
              },
              "line": 107
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext.runInChildContext(java.lang.Runnable)",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ContextRunnable.run()",
                "filename": "ContextRunnable.java"
              },
              "line": 27
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.BoundedTaskExecutor.doRun(java.lang.Runnable)",
                "filename": "BoundedTaskExecutor.java"
              },
              "line": 249
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.BoundedTaskExecutor.access$200(java.lang.Runnable)",
                "filename": "BoundedTaskExecutor.java"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.BoundedTaskExecutor$1.executeFirstTaskAndHelpQueue()",
                "filename": "BoundedTaskExecutor.java"
              },
              "line": 227
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.BoundedTaskExecutor$1.run()",
                "filename": "BoundedTaskExecutor.java"
              },
              "line": 215
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker)",
                "filename": "ThreadPoolExecutor.java"
              },
              "line": 1144
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.ThreadPoolExecutor$Worker.run()",
                "filename": "ThreadPoolExecutor.java"
              },
              "line": 642
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x17",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.util.concurrent.Executors$PrivilegedThreadFactory$1$1.run()",
                "filename": "Executors.java"
              },
              "line": 735
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.util.concurrent.Executors$PrivilegedThreadFactory$1$1.run()",
                "filename": "Executors.java"
              },
              "line": 732
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.Executors$PrivilegedThreadFactory$1.run()",
                "filename": "Executors.java"
              },
              "line": 732
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void java.lang.Thread.runWith(java.lang.Object, java.lang.Runnable)",
                "filename": "Thread.java"
              },
              "line": 1596
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void java.lang.Thread.run()",
                "filename": "Thread.java"
              },
              "line": 1583
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "boolean kotlin.text.StringsKt__StringsKt.contains(java.lang.CharSequence, char, boolean)",
                "filename": "Strings.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "boolean kotlin.text.StringsKt__StringsKt.contains$default(java.lang.CharSequence, char, boolean, int, java.lang.Object)",
                "filename": "Strings.kt"
              },
              "line": 1170
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x35",
          "lines": [
            {
              "function": {
                "name": "java.util.List org.intellij.markdown.flavours.gfm.table.GitHubTableMarkerProvider.createMarkerBlocks(org.intellij.markdown.parser.LookaheadText$Position, org.intellij.markdown.parser.ProductionHolder, org.intellij.markdown.parser.MarkerProcessor$StateInfo)",
                "filename": "GitHubTableMarkerProvider.kt"
              },
              "line": 20
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.util.List org.intellij.markdown.parser.MarkerProcessor.createNewMarkerBlocks(org.intellij.markdown.parser.LookaheadText$Position, org.intellij.markdown.parser.ProductionHolder)",
                "filename": "MarkerProcessor.kt"
              },
              "line": 47
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1c",
          "lines": [
            {
              "function": {
                "name": "java.util.List org.intellij.markdown.flavours.commonmark.CommonMarkMarkerProcessor.createNewMarkerBlocks(org.intellij.markdown.parser.LookaheadText$Position, org.intellij.markdown.parser.ProductionHolder)",
                "filename": "CommonMarkMarkerProcessor.kt"
              },
              "line": 79
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5a",
          "lines": [
            {
              "function": {
                "name": "org.intellij.markdown.parser.LookaheadText$Position org.intellij.markdown.parser.MarkerProcessor.processPosition(org.intellij.markdown.parser.LookaheadText$Position)",
                "filename": "MarkerProcessor.kt"
              },
              "line": 75
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x52",
          "lines": [
            {
              "function": {
                "name": "org.intellij.markdown.ast.ASTNode org.intellij.markdown.parser.MarkdownParser.doParse(org.intellij.markdown.IElementType, java.lang.String, boolean)",
                "filename": "MarkdownParser.kt"
              },
              "line": 67
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "org.intellij.markdown.ast.ASTNode org.intellij.markdown.parser.MarkdownParser.parse(org.intellij.markdown.IElementType, java.lang.String, boolean)",
                "filename": "MarkdownParser.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x49",
          "lines": [
            {
              "function": {
                "name": "org.intellij.markdown.ast.ASTNode org.intellij.plugins.markdown.lang.parser.MarkdownParserManager.performParsing(java.lang.CharSequence, org.intellij.markdown.flavours.MarkdownFlavourDescriptor)",
                "filename": "MarkdownParserManager.kt"
              },
              "line": 42
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1b",
          "lines": [
            {
              "function": {
                "name": "org.intellij.markdown.ast.ASTNode org.intellij.plugins.markdown.lang.parser.MarkdownParserManager.parse(java.lang.CharSequence, org.intellij.markdown.flavours.MarkdownFlavourDescriptor)",
                "filename": "MarkdownParserManager.kt"
              },
              "line": 34
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "org.intellij.markdown.ast.ASTNode org.intellij.plugins.markdown.lang.parser.MarkdownParserManager$Companion.parseContent(java.lang.CharSequence, org.intellij.markdown.flavours.MarkdownFlavourDescriptor)",
                "filename": "MarkdownParserManager.kt"
              },
              "line": 71
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "org.intellij.markdown.ast.ASTNode org.intellij.plugins.markdown.lang.parser.MarkdownParserManager.parseContent(java.lang.CharSequence, org.intellij.markdown.flavours.MarkdownFlavourDescriptor)",
                "filename": "MarkdownParserManager.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4a",
          "lines": [
            {
              "function": {
                "name": "void org.intellij.plugins.markdown.lang.lexer.MarkdownToplevelLexer.start(java.lang.CharSequence, int, int, int)",
                "filename": "MarkdownToplevelLexer.java"
              },
              "line": 52
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.lexer.DelegateLexer.start(java.lang.CharSequence, int, int, int)",
                "filename": "DelegateLexer.java"
              },
              "line": 25
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.lexer.LayeredLexer.start(java.lang.CharSequence, int, int, int)",
                "filename": "LayeredLexer.java"
              },
              "line": 75
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.editor.ex.util.ValidatingLexerWrapper.start(java.lang.CharSequence, int, int, int)",
                "filename": "ValidatingLexerWrapper.java"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.editor.ex.util.LexerEditorHighlighter.doSetText(java.lang.CharSequence)",
                "filename": "LexerEditorHighlighter.java"
              },
              "line": 432
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.editor.ex.util.LexerEditorHighlighter.setText(java.lang.CharSequence)",
                "filename": "LexerEditorHighlighter.java"
              },
              "line": 413
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x42",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.editor.highlighter.EditorHighlighter com.intellij.openapi.fileEditor.impl.text.EditorHighlighterUpdater.createHighlighter(boolean)",
                "filename": "EditorHighlighterUpdater.kt"
              },
              "line": 154
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.editor.highlighter.EditorHighlighter com.intellij.openapi.fileEditor.impl.text.EditorHighlighterUpdater.updateHighlighters$lambda$0(com.intellij.openapi.fileEditor.impl.text.EditorHighlighterUpdater)",
                "filename": "EditorHighlighterUpdater.kt"
              },
              "line": 139
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.fileEditor.impl.text.EditorHighlighterUpdater$$Lambda+\u003chidden\u003e.call()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.NonBlockingReadActionImpl$OTelMonitor.callWrapped(java.util.concurrent.Callable)",
                "filename": "NonBlockingReadActionImpl.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.NonBlockingReadActionImpl$OTelMonitor$MonitoredComputation.call()",
                "filename": "NonBlockingReadActionImpl.java"
              },
              "line": 889
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x38",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.NonBlockingReadActionImpl$Submission.insideReadAction(com.intellij.openapi.progress.ProgressIndicator, com.intellij.openapi.util.Ref)",
                "filename": "NonBlockingReadActionImpl.java"
              },
              "line": 618
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.NonBlockingReadActionImpl$Submission.lambda$attemptComputation$4(com.intellij.openapi.progress.ProgressIndicator, com.intellij.openapi.util.Ref)",
                "filename": "NonBlockingReadActionImpl.java"
              },
              "line": 581
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.NonBlockingReadActionImpl$Submission$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x71",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.tryRunReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 351
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 971
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.util.ProgressIndicatorUtils.lambda$runInReadActionWithWriteActionPriority$0(java.util.concurrent.atomic.AtomicBoolean, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 95
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.util.ProgressIndicatorUtils$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtilService.runActionAndCancelBeforeWrite(java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtilService.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runActionAndCancelBeforeWrite(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.lambda$runWithWriteActionPriority$1(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 140
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.util.ProgressIndicatorUtils$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.ProgressManager.lambda$runProcess$0(com.intellij.openapi.util.Ref, com.intellij.openapi.util.Computable)",
                "filename": "ProgressManager.java"
              },
              "line": 98
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.ProgressManager$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(java.lang.Runnable, io.opentelemetry.api.trace.Span)",
                "filename": "CoreProgressManager.java"
              },
              "line": 223
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager$$Lambda+\u003chidden\u003e.invoke(java.lang.Object)",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x35",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.platform.diagnostic.telemetry.helpers.TraceKt.use(io.opentelemetry.api.trace.Span, kotlin.jvm.functions.Function1)",
                "filename": "trace.kt"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x44",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$2(com.intellij.openapi.progress.ProgressIndicator, java.lang.Runnable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 222
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.CoreProgressManager$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.lambda$executeProcessUnderProgress$14(java.lang.Runnable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 674
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(com.intellij.openapi.progress.ProgressIndicator, java.lang.Thread, com.intellij.openapi.progress.ProgressIndicator, com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 749
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computeUnderProgress(com.intellij.openapi.util.ThrowableComputable, com.intellij.openapi.progress.ProgressIndicator)",
                "filename": "CoreProgressManager.java"
              },
              "line": 705
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(java.lang.Runnable, com.intellij.openapi.progress.ProgressIndicator)",
                "filename": "CoreProgressManager.java"
              },
              "line": 673
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(java.lang.Runnable, com.intellij.openapi.progress.ProgressIndicator)",
                "filename": "ProgressManagerImpl.java"
              },
              "line": 79
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(java.lang.Runnable, com.intellij.openapi.progress.ProgressIndicator)",
                "filename": "CoreProgressManager.java"
              },
              "line": 203
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.ProgressManager.runProcess(com.intellij.openapi.util.Computable, com.intellij.openapi.progress.ProgressIndicator)",
                "filename": "ProgressManager.java"
              },
              "line": 98
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3f",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runWithWriteActionPriority(java.lang.Runnable, com.intellij.openapi.progress.ProgressIndicator)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 137
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runInReadActionWithWriteActionPriority(java.lang.Runnable, com.intellij.openapi.progress.ProgressIndicator)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 95
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x92",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.NonBlockingReadActionImpl$Submission.attemptComputation()",
                "filename": "NonBlockingReadActionImpl.java"
              },
              "line": 581
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x28",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.NonBlockingReadActionImpl$Submission.lambda$transferToBgThread$1()",
                "filename": "NonBlockingReadActionImpl.java"
              },
              "line": 480
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.NonBlockingReadActionImpl$Submission$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.NonBlockingReadActionImpl$Submission.lambda$transferToBgThread$2(java.lang.Runnable)",
                "filename": "NonBlockingReadActionImpl.java"
              },
              "line": 495
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.NonBlockingReadActionImpl$Submission$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.BoundedTaskExecutor.doRun(java.lang.Runnable)",
                "filename": "BoundedTaskExecutor.java"
              },
              "line": 249
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.BoundedTaskExecutor.access$200(java.lang.Runnable)",
                "filename": "BoundedTaskExecutor.java"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.BoundedTaskExecutor$1.executeFirstTaskAndHelpQueue()",
                "filename": "BoundedTaskExecutor.java"
              },
              "line": 227
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.BoundedTaskExecutor$1.run()",
                "filename": "BoundedTaskExecutor.java"
              },
              "line": 215
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker)",
                "filename": "ThreadPoolExecutor.java"
              },
              "line": 1144
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.ThreadPoolExecutor$Worker.run()",
                "filename": "ThreadPoolExecutor.java"
              },
              "line": 642
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x17",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.util.concurrent.Executors$PrivilegedThreadFactory$1$1.run()",
                "filename": "Executors.java"
              },
              "line": 735
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.util.concurrent.Executors$PrivilegedThreadFactory$1$1.run()",
                "filename": "Executors.java"
              },
              "line": 732
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.Executors$PrivilegedThreadFactory$1.run()",
                "filename": "Executors.java"
              },
              "line": 732
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void java.lang.Thread.runWith(java.lang.Object, java.lang.Runnable)",
                "filename": "Thread.java"
              },
              "line": 1596
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void java.lang.Thread.run()",
                "filename": "Thread.java"
              },
              "line": 1583
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x914b94"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9164da"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x9e65b9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0x92b50e"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xf7b717"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "libjvm.so 0xd075c9"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x2a3000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x87cc4b",
          "lines": [
            {
              "function": {
                "name": "ioread32"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9ef74",
          "lines": [
            {
              "function": {
                "name": "nvkm_timer_read"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xac40b",
          "lines": [
            {
              "function": {
                "name": "nvkm_udevice_mthd"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xae89",
          "lines": [
            {
              "function": {
                "name": "nvkm_object_mthd"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x950c",
          "lines": [
            {
              "function": {
                "name": "nvkm_ioctl_mthd"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9b94",
          "lines": [
            {
              "function": {
                "name": "nvkm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11dcbd",
          "lines": [
            {
              "function": {
                "name": "nvkm_client_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x468",
          "lines": [
            {
              "function": {
                "name": "nvif_object_mthd"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a5",
          "lines": [
            {
              "function": {
                "name": "nvif_device_time"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x47d4",
          "lines": [
            {
              "function": {
                "name": "nvif_timer_wait_test"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x160554",
          "lines": [
            {
              "function": {
                "name": "base507c_ntfy_wait_begun"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15df99",
          "lines": [
            {
              "function": {
                "name": "nv50_wndw_wait_armed"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14f7b9",
          "lines": [
            {
              "function": {
                "name": "nv50_disp_atomic_commit_tail"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14feb1",
          "lines": [
            {
              "function": {
                "name": "nv50_disp_atomic_commit_work"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12bee7",
          "lines": [
            {
              "function": {
                "name": "process_one_work"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12d1c5",
          "lines": [
            {
              "function": {
                "name": "worker_thread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x137d71",
          "lines": [
            {
              "function": {
                "name": "kthread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x68aa6",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x547a",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork_asm"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        }
      ],
      "values": [
        100000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x87cc4b",
          "lines": [
            {
              "function": {
                "name": "ioread32"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x160567",
          "lines": [
            {
              "function": {
                "name": "base507c_ntfy_wait_begun"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15df99",
          "lines": [
            {
              "function": {
                "name": "nv50_wndw_wait_armed"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14f7b9",
          "lines": [
            {
              "function": {
                "name": "nv50_disp_atomic_commit_tail"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14feb1",
          "lines": [
            {
              "function": {
                "name": "nv50_disp_atomic_commit_work"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12bee7",
          "lines": [
            {
              "function": {
                "name": "process_one_work"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12d1c5",
          "lines": [
            {
              "function": {
                "name": "worker_thread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x137d71",
          "lines": [
            {
              "function": {
                "name": "kthread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x68aa6",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x547a",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork_asm"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        }
      ],
      "values": [
        100000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x12495b0",
          "lines": [
            {
              "function": {
                "name": "_raw_spin_unlock_irqrestore"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2066db",
          "lines": [
            {
              "function": {
                "name": "hrtimer_start_range_ns"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124808f",
          "lines": [
            {
              "function": {
                "name": "schedule_hrtimeout_range_clock"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1248152",
          "lines": [
            {
              "function": {
                "name": "schedule_hrtimeout_range"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1247d14",
          "lines": [
            {
              "function": {
                "name": "usleep_range_state"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x16054b",
          "lines": [
            {
              "function": {
                "name": "base507c_ntfy_wait_begun"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15df99",
          "lines": [
            {
              "function": {
                "name": "nv50_wndw_wait_armed"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14f7b9",
          "lines": [
            {
              "function": {
                "name": "nv50_disp_atomic_commit_tail"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14feb1",
          "lines": [
            {
              "function": {
                "name": "nv50_disp_atomic_commit_work"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12bee7",
          "lines": [
            {
              "function": {
                "name": "process_one_work"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12d1c5",
          "lines": [
            {
              "function": {
                "name": "worker_thread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x137d71",
          "lines": [
            {
              "function": {
                "name": "kthread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x68aa6",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x547a",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork_asm"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x150f38",
          "lines": [
            {
              "function": {
                "name": "finish_task_switch.isra.0"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1240963",
          "lines": [
            {
              "function": {
                "name": "__schedule"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1240dd2",
          "lines": [
            {
              "function": {
                "name": "schedule"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12d095",
          "lines": [
            {
              "function": {
                "name": "worker_thread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x137d71",
          "lines": [
            {
              "function": {
                "name": "kthread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x68aa6",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x547a",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork_asm"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x11e6fe",
          "lines": [
            {
              "function": {
                "name": "set_placement_list"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1202b1",
          "lines": [
            {
              "function": {
                "name": "nouveau_bo_placement_set"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228ac",
          "lines": [
            {
              "function": {
                "name": "validate_list"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124120",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_ioctl_pushbuf"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca7e2b",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl_kernel"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca8173",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a2c0",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x503812",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6762",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x124dec"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "libdrm.so.2.4.0 0x7aff"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x5000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "libdrm.so.2.4.0 0xb02f"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x5000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x51ee",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x51ee"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x53ba"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x5a1b"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa7103a",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0xa7103a"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x311bf7",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0x311bf7"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x1d1d5",
          "lines": [
            {
              "function": {
                "name": "libglamoregl.so 0x1d1d5"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14c9cf",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x14c9cf"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x275a2",
          "lines": [
            {
              "function": {
                "name": "libglamoregl.so 0x275a2"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x2746c",
          "lines": [
            {
              "function": {
                "name": "libglamoregl.so 0x2746c"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x140e6f",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x140e6f"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x62ab3"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x66e51"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a1c9"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a28a"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x4f394"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x87cc4b",
          "lines": [
            {
              "function": {
                "name": "ioread32"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x168f00",
          "lines": [
            {
              "function": {
                "name": "nv84_fence_read"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x166bdd",
          "lines": [
            {
              "function": {
                "name": "nouveau_fence_is_signaled"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc1ff03",
          "lines": [
            {
              "function": {
                "name": "dma_resv_add_fence"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1214d5",
          "lines": [
            {
              "function": {
                "name": "nouveau_bo_fence"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x123249",
          "lines": [
            {
              "function": {
                "name": "validate_fini_no_ticket"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124347",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_ioctl_pushbuf"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca7e2b",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl_kernel"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca8173",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a2c0",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x503812",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6762",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x124dec"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "libdrm.so.2.4.0 0x7aff"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x5000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "libdrm.so.2.4.0 0xb02f"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x5000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x51ee",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x51ee"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x53ba"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x5a1b"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa7103a",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0xa7103a"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x311bf7",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0x311bf7"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x100ef",
          "lines": [
            {
              "function": {
                "name": "libglamoregl.so 0x100ef"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14bb06",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x14bb06"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x13f976",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x13f976"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x62ab3"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x66e51"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a1c9"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a28a"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x4f394"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x1249eb4",
          "lines": [
            {
              "function": {
                "name": "_raw_spin_unlock_irq"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x218ff0",
          "lines": [
            {
              "function": {
                "name": "do_setitimer"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2197aa",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_setitimer"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6648",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe29da",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0xe29da"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x1e4a68",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x1e4a68"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x1db31e",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x1db31e"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x627e9",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x627e9"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x66e51"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a1c9"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a28a"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x4f394"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x28414",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x28414"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x274ff",
          "lines": [
            {
              "function": {
                "name": "libglamoregl.so 0x274ff"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x2746c",
          "lines": [
            {
              "function": {
                "name": "libglamoregl.so 0x2746c"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x140e6f",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x140e6f"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x62ab3"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x66e51"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a1c9"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a28a"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x4f394"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x1228fa4",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x124dec"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "libdrm.so.2.4.0 0x7aff"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x5000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "libdrm.so.2.4.0 0xb02f"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x5000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x51ee",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x51ee"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x53ba"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x5a1b"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa7103a",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0xa7103a"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x311bf7",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0x311bf7"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x17ba6",
          "lines": [
            {
              "function": {
                "name": "libglamoregl.so 0x17ba6"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x18bf8",
          "lines": [
            {
              "function": {
                "name": "libglamoregl.so 0x18bf8"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14b73c",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x14b73c"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x141792",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x141792"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x62ab3"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x66e51"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a1c9"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a28a"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x4f394"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x1208bf",
          "lines": [
            {
              "function": {
                "name": "nouveau_bo_sync_for_device"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120f7f",
          "lines": [
            {
              "function": {
                "name": "nouveau_bo_validate"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228bb",
          "lines": [
            {
              "function": {
                "name": "validate_list"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124120",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_ioctl_pushbuf"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca7e2b",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl_kernel"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca8173",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a2c0",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x503812",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6762",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x124dec"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "libdrm.so.2.4.0 0x7aff"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x5000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "libdrm.so.2.4.0 0xb02f"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x5000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x51ee",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x51ee"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x53ba"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x5a1b"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa7103a",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0xa7103a"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x311bf7",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0x311bf7"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x100ef",
          "lines": [
            {
              "function": {
                "name": "libglamoregl.so 0x100ef"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14bb06",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x14bb06"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x13f976",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x13f976"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x62ab3"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x66e51"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a1c9"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a28a"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "Xorg 0x4f394"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x40000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x1243691",
          "lines": [
            {
              "function": {
                "name": "mutex_lock"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8d5a9",
          "lines": [
            {
              "function": {
                "name": "gf100_vmm_invalidate"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8d7ce",
          "lines": [
            {
              "function": {
                "name": "gf100_vmm_flush"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x85937",
          "lines": [
            {
              "function": {
                "name": "nvkm_vmm_iter.isra.0"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8642e",
          "lines": [
            {
              "function": {
                "name": "nvkm_vmm_ptes_get_map"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x866a4",
          "lines": [
            {
              "function": {
                "name": "nvkm_vmm_map_locked"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x885dd",
          "lines": [
            {
              "function": {
                "name": "nvkm_vmm_map"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x837d6",
          "lines": [
            {
              "function": {
                "name": "nvkm_mem_map_dma"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9107c",
          "lines": [
            {
              "function": {
                "name": "nvkm_uvmm_mthd_map.isra.0"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x91e26",
          "lines": [
            {
              "function": {
                "name": "nvkm_uvmm_mthd"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xae89",
          "lines": [
            {
              "function": {
                "name": "nvkm_object_mthd"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x950c",
          "lines": [
            {
              "function": {
                "name": "nvkm_ioctl_mthd"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9b94",
          "lines": [
            {
              "function": {
                "name": "nvkm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11dcbd",
          "lines": [
            {
              "function": {
                "name": "nvkm_client_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x468",
          "lines": [
            {
              "function": {
                "name": "nvif_object_mthd"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4a1e",
          "lines": [
            {
              "function": {
                "name": "nvif_vmm_map"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124f2b",
          "lines": [
            {
              "function": {
                "name": "nouveau_mem_map"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x126a83",
          "lines": [
            {
              "function": {
                "name": "nouveau_vma_new"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1231a4",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_object_open"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca6c96",
          "lines": [
            {
              "function": {
                "name": "drm_gem_handle_create_tail"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca6da4",
          "lines": [
            {
              "function": {
                "name": "drm_gem_handle_create"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x123d0c",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_ioctl_new"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca7e2b",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl_kernel"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca8173",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a2c0",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x503812",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6762",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x124dec"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "libdrm.so.2.4.0 0x7aff"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x5000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "libdrm.so.2.4.0 0xb02f"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x5000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x433a",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x433a"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa0ecf1",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0xa0ecf1"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0xa593e4",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0xa593e4"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x5120",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x5120"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x53ba"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x5a1b"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa59b08",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0xa59b08"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x3baaa1",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0x3baaa1"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x171ff",
          "lines": [
            {
              "function": {
                "name": "libkwinglutils.so.5.27.11 0x171ff"
              }
            }
          ],
          "mapping": {
            "start": "0xa000",
            "limit": "0x1d000",
            "offset": "0xa000",
            "filename": "libkwinglutils.so.5.27.11",
            "build_id": "b79e87745522e8a9559a65a18dc70d96dafcb154"
          }
        },
        {
          "address": "0x270304",
          "lines": [
            {
              "function": {
                "name": "libkwin.so.5.27.11 0x270304"
              }
            }
          ],
          "mapping": {
            "start": "0x158000",
            "limit": "0x496000",
            "offset": "0x158000",
            "filename": "libkwin.so.5.27.11",
            "build_id": "2d206eca5fdc7f5e92587e95fd932a564148c745"
          }
        },
        {
          "address": "0x284412",
          "lines": [
            {
              "function": {
                "name": "libkwin.so.5.27.11 0x284412"
              }
            }
          ],
          "mapping": {
            "start": "0x158000",
            "limit": "0x496000",
            "offset": "0x158000",
            "filename": "libkwin.so.5.27.11",
            "build_id": "2d206eca5fdc7f5e92587e95fd932a564148c745"
          }
        },
        {
          "address": "0x275ea0",
          "lines": [
            {
              "function": {
                "name": "libkwin.so.5.27.11 0x275ea0"
              }
            }
          ],
          "mapping": {
            "start": "0x158000",
            "limit": "0x496000",
            "offset": "0x158000",
            "filename": "libkwin.so.5.27.11",
            "build_id": "2d206eca5fdc7f5e92587e95fd932a564148c745"
          }
        },
        {
          "address": "0x1be5b7",
          "lines": [
            {
              "function": {
                "name": "libkwin.so.5.27.11 0x1be5b7"
              }
            }
          ],
          "mapping": {
            "start": "0x158000",
            "limit": "0x496000",
            "offset": "0x158000",
            "filename": "libkwin.so.5.27.11",
            "build_id": "2d206eca5fdc7f5e92587e95fd932a564148c745"
          }
        },
        {
          "address": "0x1c3052",
          "lines": [
            {
              "function": {
                "name": "libkwin.so.5.27.11 0x1c3052"
              }
            }
          ],
          "mapping": {
            "start": "0x158000",
            "limit": "0x496000",
            "offset": "0x158000",
            "filename": "libkwin.so.5.27.11",
            "build_id": "2d206eca5fdc7f5e92587e95fd932a564148c745"
          }
        },
        {
          "address": "0x1c33bc",
          "lines": [
            {
              "function": {
                "name": "libkwin.so.5.27.11 0x1c33bc"
              }
            }
          ],
          "mapping": {
            "start": "0x158000",
            "limit": "0x496000",
            "offset": "0x158000",
            "filename": "libkwin.so.5.27.11",
            "build_id": "2d206eca5fdc7f5e92587e95fd932a564148c745"
          }
        },
        {
          "address": "0x312e15",
          "lines": [
            {
              "function": {
                "name": "libQt5Core.so.5.15.13 0x312e15"
              }
            }
          ],
          "mapping": {
            "start": "0x8e000",
            "limit": "0x3c4000",
            "offset": "0x8e000",
            "filename": "libQt5Core.so.5.15.13",
            "build_id": "0fb7b71b7cd236a3ac7fefcc17069ec1f5a93d5f"
          }
        },
        {
          "address": "0x172323",
          "lines": [
            {
              "function": {
                "name": "libkwin.so.5.27.11 0x172323"
              }
            }
          ],
          "mapping": {
            "start": "0x158000",
            "limit": "0x496000",
            "offset": "0x158000",
            "filename": "libkwin.so.5.27.11",
            "build_id": "2d206eca5fdc7f5e92587e95fd932a564148c745"
          }
        },
        {
          "address": "0x1c912e",
          "lines": [
            {
              "function": {
                "name": "libkwin.so.5.27.11 0x1c912e"
              }
            }
          ],
          "mapping": {
            "start": "0x158000",
            "limit": "0x496000",
            "offset": "0x158000",
            "filename": "libkwin.so.5.27.11",
            "build_id": "2d206eca5fdc7f5e92587e95fd932a564148c745"
          }
        },
        {
          "address": "0x312e15",
          "lines": [
            {
              "function": {
                "name": "libQt5Core.so.5.15.13 0x312e15"
              }
            }
          ],
          "mapping": {
            "start": "0x8e000",
            "limit": "0x3c4000",
            "offset": "0x8e000",
            "filename": "libQt5Core.so.5.15.13",
            "build_id": "0fb7b71b7cd236a3ac7fefcc17069ec1f5a93d5f"
          }
        },
        {
          "address": "0x31710c",
          "lines": [
            {
              "function": {
                "name": "libQt5Core.so.5.15.13 0x31710c"
              }
            }
          ],
          "mapping": {
            "start": "0x8e000",
            "limit": "0x3c4000",
            "offset": "0x8e000",
            "filename": "libQt5Core.so.5.15.13",
            "build_id": "0fb7b71b7cd236a3ac7fefcc17069ec1f5a93d5f"
          }
        },
        {
          "address": "0x30624a",
          "lines": [
            {
              "function": {
                "name": "libQt5Core.so.5.15.13 0x30624a"
              }
            }
          ],
          "mapping": {
            "start": "0x8e000",
            "limit": "0x3c4000",
            "offset": "0x8e000",
            "filename": "libQt5Core.so.5.15.13",
            "build_id": "0fb7b71b7cd236a3ac7fefcc17069ec1f5a93d5f"
          }
        },
        {
          "address": "0x16bd44",
          "lines": [
            {
              "function": {
                "name": "libQt5Widgets.so.5.15.13 0x16bd44"
              }
            }
          ],
          "mapping": {
            "start": "0x14e000",
            "limit": "0x545000",
            "offset": "0x14e000",
            "filename": "libQt5Widgets.so.5.15.13",
            "build_id": "bfe07edc9e95f586e665ab542d433386d87d6409"
          }
        },
        {
          "address": "0x2d8117",
          "lines": [
            {
              "function": {
                "name": "libQt5Core.so.5.15.13 0x2d8117"
              }
            }
          ],
          "mapping": {
            "start": "0x8e000",
            "limit": "0x3c4000",
            "offset": "0x8e000",
            "filename": "libQt5Core.so.5.15.13",
            "build_id": "0fb7b71b7cd236a3ac7fefcc17069ec1f5a93d5f"
          }
        },
        {
          "address": "0x3345aa",
          "lines": [
            {
              "function": {
                "name": "libQt5Core.so.5.15.13 0x3345aa"
              }
            }
          ],
          "mapping": {
            "start": "0x8e000",
            "limit": "0x3c4000",
            "offset": "0x8e000",
            "filename": "libQt5Core.so.5.15.13",
            "build_id": "0fb7b71b7cd236a3ac7fefcc17069ec1f5a93d5f"
          }
        },
        {
          "address": "0x334ed8",
          "lines": [
            {
              "function": {
                "name": "libQt5Core.so.5.15.13 0x334ed8"
              }
            }
          ],
          "mapping": {
            "start": "0x8e000",
            "limit": "0x3c4000",
            "offset": "0x8e000",
            "filename": "libQt5Core.so.5.15.13",
            "build_id": "0fb7b71b7cd236a3ac7fefcc17069ec1f5a93d5f"
          }
        },
        {
          "address": "0x5d5b4",
          "lines": [
            {
              "function": {
                "name": "libglib-2.0.so.0.8000.0 0x5d5b4"
              }
            }
          ],
          "mapping": {
            "start": "0x1e000",
            "limit": "0xbe000",
            "offset": "0x1e000",
            "filename": "libglib-2.0.so.0.8000.0",
            "build_id": "461eff2b4df472ba9c32b2358ae9ba018a59a8c5"
          }
        },
        {
          "address": "0xbc716",
          "lines": [
            {
              "function": {
                "name": "libglib-2.0.so.0.8000.0 0xbc716"
              }
            }
          ],
          "mapping": {
            "start": "0x1e000",
            "limit": "0xbe000",
            "offset": "0x1e000",
            "filename": "libglib-2.0.so.0.8000.0",
            "build_id": "461eff2b4df472ba9c32b2358ae9ba018a59a8c5"
          }
        },
        {
          "address": "0x5ca52",
          "lines": [
            {
              "function": {
                "name": "libglib-2.0.so.0.8000.0 0x5ca52"
              }
            }
          ],
          "mapping": {
            "start": "0x1e000",
            "limit": "0xbe000",
            "offset": "0x1e000",
            "filename": "libglib-2.0.so.0.8000.0",
            "build_id": "461eff2b4df472ba9c32b2358ae9ba018a59a8c5"
          }
        },
        {
          "address": "0x335278",
          "lines": [
            {
              "function": {
                "name": "libQt5Core.so.5.15.13 0x335278"
              }
            }
          ],
          "mapping": {
            "start": "0x8e000",
            "limit": "0x3c4000",
            "offset": "0x8e000",
            "filename": "libQt5Core.so.5.15.13",
            "build_id": "0fb7b71b7cd236a3ac7fefcc17069ec1f5a93d5f"
          }
        },
        {
          "address": "0x2d6a7a",
          "lines": [
            {
              "function": {
                "name": "libQt5Core.so.5.15.13 0x2d6a7a"
              }
            }
          ],
          "mapping": {
            "start": "0x8e000",
            "limit": "0x3c4000",
            "offset": "0x8e000",
            "filename": "libQt5Core.so.5.15.13",
            "build_id": "0fb7b71b7cd236a3ac7fefcc17069ec1f5a93d5f"
          }
        },
        {
          "address": "0x2df3e7",
          "lines": [
            {
              "function": {
                "name": "libQt5Core.so.5.15.13 0x2df3e7"
              }
            }
          ],
          "mapping": {
            "start": "0x8e000",
            "limit": "0x3c4000",
            "offset": "0x8e000",
            "filename": "libQt5Core.so.5.15.13",
            "build_id": "0fb7b71b7cd236a3ac7fefcc17069ec1f5a93d5f"
          }
        },
        {
          "address": "0x47ba0",
          "lines": [
            {
              "function": {
                "name": "kwin_x11 0x47ba0"
              }
            }
          ],
          "mapping": {
            "start": "0x3e000",
            "limit": "0xef000",
            "offset": "0x3e000",
            "filename": "kwin_x11",
            "build_id": "84633cbbb2a365047193fc8ec67f254e0170246b"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a1c9"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x2a28a"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x490e4",
          "lines": [
            {
              "function": {
                "name": "kwin_x11 0x490e4"
              }
            }
          ],
          "mapping": {
            "start": "0x3e000",
            "limit": "0xef000",
            "offset": "0x3e000",
            "filename": "kwin_x11",
            "build_id": "84633cbbb2a365047193fc8ec67f254e0170246b"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x225dd3",
          "lines": [
            {
              "function": {
                "name": "futex_wake"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x22291d",
          "lines": [
            {
              "function": {
                "name": "do_futex"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x223159",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_futex"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x55d0",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x98fc6",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x98fc6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0xa1ac1",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0xa1ac1"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x6a2a5",
          "lines": [
            {
              "function": {
                "name": "firefox-bin 0x6a2a5"
              }
            }
          ],
          "mapping": {
            "start": "0x23000",
            "limit": "0xdc000",
            "offset": "0x22000",
            "filename": "firefox-bin",
            "build_id": "97e2d250255a9735edaa1ab1a4a1d125ec2f7d26"
          }
        },
        {
          "address": "0x2b07a52",
          "lines": [
            {
              "function": {
                "name": "libxul.so 0x2b07a52"
              }
            }
          ],
          "mapping": {
            "start": "0x2995000",
            "limit": "0x8ddb000",
            "offset": "0x2994000",
            "filename": "libxul.so",
            "build_id": "ed82595fe72c9215b49e7e2cb2f85ea9269c1a61"
          }
        },
        {
          "address": "0x2a5ecf8",
          "lines": [
            {
              "function": {
                "name": "libxul.so 0x2a5ecf8"
              }
            }
          ],
          "mapping": {
            "start": "0x2995000",
            "limit": "0x8ddb000",
            "offset": "0x2994000",
            "filename": "libxul.so",
            "build_id": "ed82595fe72c9215b49e7e2cb2f85ea9269c1a61"
          }
        },
        {
          "address": "0x2a5d620",
          "lines": [
            {
              "function": {
                "name": "libxul.so 0x2a5d620"
              }
            }
          ],
          "mapping": {
            "start": "0x2995000",
            "limit": "0x8ddb000",
            "offset": "0x2994000",
            "filename": "libxul.so",
            "build_id": "ed82595fe72c9215b49e7e2cb2f85ea9269c1a61"
          }
        },
        {
          "address": "0x2a83c8d",
          "lines": [
            {
              "function": {
                "name": "libxul.so 0x2a83c8d"
              }
            }
          ],
          "mapping": {
            "start": "0x2995000",
            "limit": "0x8ddb000",
            "offset": "0x2994000",
            "filename": "libxul.so",
            "build_id": "ed82595fe72c9215b49e7e2cb2f85ea9269c1a61"
          }
        },
        {
          "address": "0x197a1",
          "lines": [
            {
              "function": {
                "name": "libnspr4.so 0x197a1"
              }
            }
          ],
          "mapping": {
            "start": "0x12000",
            "limit": "0x35000",
            "offset": "0x11000",
            "filename": "libnspr4.so",
            "build_id": "caa869f624148b1ec093de72d7992781a5411334"
          }
        },
        {
          "address": "0x5dd1f",
          "lines": [
            {
              "function": {
                "name": "firefox-bin 0x5dd1f"
              }
            }
          ],
          "mapping": {
            "start": "0x23000",
            "limit": "0xdc000",
            "offset": "0x22000",
            "filename": "firefox-bin",
            "build_id": "97e2d250255a9735edaa1ab1a4a1d125ec2f7d26"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x9ca93"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x129c3b"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x40ca45",
          "lines": [
            {
              "function": {
                "name": "vma_interval_tree_subtree_search"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x40d2b9",
          "lines": [
            {
              "function": {
                "name": "vma_interval_tree_iter_first"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41ea8e",
          "lines": [
            {
              "function": {
                "name": "unmap_mapping_range"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdc4",
          "lines": [
            {
              "function": {
                "name": "ttm_bo_unmap_virtual"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1762",
          "lines": [
            {
              "function": {
                "name": "ttm_bo_handle_move_mem"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2361",
          "lines": [
            {
              "function": {
                "name": "ttm_bo_validate"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2532",
          "lines": [
            {
              "function": {
                "name": "ttm_bo_init_reserved"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1204a4",
          "lines": [
            {
              "function": {
                "name": "nouveau_bo_init"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x123b6c",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_new"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x123cbc",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_ioctl_new"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca7e2b",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl_kernel"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca8173",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a2c0",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x503812",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6762",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "libc.so.6 0x124dec"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x28000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "libdrm.so.2.4.0 0x7aff"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x5000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "libdrm.so.2.4.0 0xb02f"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x5000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x433a",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x433a"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa0ecf1",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0xa0ecf1"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0xa593e4",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0xa593e4"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x5120",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x5120"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x53ba"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "libdrm_nouveau.so.2.0.0 0x5a1b"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x2000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x9fb761",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0x9fb761"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x3eeb41",
          "lines": [
            {
              "function": {
                "name": "nouveau_dri.so 0x3eeb41"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x97000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        }
      ],
      "values": [
        50000000
      ]
    }
  ],
  "period": "1000000000"
}