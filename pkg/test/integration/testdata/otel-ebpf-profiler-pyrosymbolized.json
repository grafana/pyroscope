{
  "sample_types": [
    {
      "type": "cpu",
      "unit": "nanoseconds"
    }
  ],
  "samples": [
    {
      "locations": [
        {
          "address": "0x85dd41",
          "lines": [
            {
              "function": {
                "name": "_copy_to_iter"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xee7f07",
          "lines": [
            {
              "function": {
                "name": "simple_copy_to_iter"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xee7fba",
          "lines": [
            {
              "function": {
                "name": "__skb_datagram_iter"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xee82c6",
          "lines": [
            {
              "function": {
                "name": "skb_copy_datagram_iter"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1081f2d",
          "lines": [
            {
              "function": {
                "name": "unix_stream_read_actor"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1087d5e",
          "lines": [
            {
              "function": {
                "name": "unix_stream_read_generic"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x108848c",
          "lines": [
            {
              "function": {
                "name": "unix_stream_recvmsg"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xec9a60",
          "lines": [
            {
              "function": {
                "name": "sock_recvmsg"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xec9c32",
          "lines": [
            {
              "function": {
                "name": "____sys_recvmsg"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xeccee0",
          "lines": [
            {
              "function": {
                "name": "___sys_recvmsg"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xecde01",
          "lines": [
            {
              "function": {
                "name": "__sys_recvmsg"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xecde8c",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_recvmsg"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x774e",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12be3a",
          "lines": [
            {
              "function": {
                "name": "__libc_recvmsg",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x1e83e0",
          "lines": [
            {
              "function": {
                "name": "os_move_fd",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x1e08d7",
          "lines": [
            {
              "function": {
                "name": "ReadRequestFromClient",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x629ba",
          "lines": [
            {
              "function": {
                "name": "SendErrorToClient",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "InitFonts",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "__libc_start_call_main",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "__libc_start_main_alias_2",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "_start",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xca5df5",
          "lines": [
            {
              "function": {
                "name": "objects_lookup"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca5fd8",
          "lines": [
            {
              "function": {
                "name": "drm_gem_object_lookup"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1234c9",
          "lines": [
            {
              "function": {
                "name": "validate_init"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124101",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_ioctl_pushbuf"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca7e2b",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl_kernel"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca8173",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a2c0",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x503812",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6762",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "__GI___ioctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "drmIoctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "drmCommandWriteRead",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x51ee",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_kick",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa7103a",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_screen_create",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x311bf7",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x100ef",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14bb06",
          "lines": [
            {
              "function": {
                "name": "DamageRegionAppend",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x13f976",
          "lines": [
            {
              "function": {
                "name": "AddTraps",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "SendErrorToClient",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "InitFonts",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "__libc_start_call_main",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "__libc_start_main_alias_2",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "_start",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x62e24a",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x3e96a7",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x178e52",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x311bd8",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x1d1d5",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14c9cf",
          "lines": [
            {
              "function": {
                "name": "DamageRegionAppend",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x275a2",
          "lines": [
            {
              "function": {
                "name": "glamor_pixmap_exchange_fbos",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x2746c",
          "lines": [
            {
              "function": {
                "name": "glamor_pixmap_exchange_fbos",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x140e6f",
          "lines": [
            {
              "function": {
                "name": "AddTraps",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "SendErrorToClient",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "InitFonts",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "__libc_start_call_main",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "__libc_start_main_alias_2",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "_start",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x123249a",
          "lines": [
            {
              "function": {
                "name": "__memset"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x167d58",
          "lines": [
            {
              "function": {
                "name": "nouveau_fence_new"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1242f2",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_ioctl_pushbuf"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca7e2b",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl_kernel"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca8173",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a2c0",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x503812",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6762",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "__GI___ioctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "drmIoctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "drmCommandWriteRead",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x51ee",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_kick",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa7103a",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_screen_create",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x311bf7",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x1d1d5",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14c9cf",
          "lines": [
            {
              "function": {
                "name": "DamageRegionAppend",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x275a2",
          "lines": [
            {
              "function": {
                "name": "glamor_pixmap_exchange_fbos",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x2746c",
          "lines": [
            {
              "function": {
                "name": "glamor_pixmap_exchange_fbos",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x140e6f",
          "lines": [
            {
              "function": {
                "name": "AddTraps",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "SendErrorToClient",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "InitFonts",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "__libc_start_call_main",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "__libc_start_main_alias_2",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "_start",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xca7d87",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl_kernel"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca8173",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a2c0",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x503812",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6762",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "__GI___ioctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "drmIoctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "drmCommandWriteRead",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x51ee",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_kick",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa7103a",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_screen_create",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x311bf7",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x17ba6",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x18bf8",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14b73c",
          "lines": [
            {
              "function": {
                "name": "DamageRegionAppend",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x141792",
          "lines": [
            {
              "function": {
                "name": "AddTraps",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "SendErrorToClient",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "InitFonts",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "__libc_start_call_main",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "__libc_start_main_alias_2",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "_start",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x87cc4b",
          "lines": [
            {
              "function": {
                "name": "ioread32"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x168f00",
          "lines": [
            {
              "function": {
                "name": "nv84_fence_read"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x166bdd",
          "lines": [
            {
              "function": {
                "name": "nouveau_fence_is_signaled"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc1ff03",
          "lines": [
            {
              "function": {
                "name": "dma_resv_add_fence"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1214d5",
          "lines": [
            {
              "function": {
                "name": "nouveau_bo_fence"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x123249",
          "lines": [
            {
              "function": {
                "name": "validate_fini_no_ticket"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124347",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_ioctl_pushbuf"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca7e2b",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl_kernel"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca8173",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a2c0",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x503812",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6762",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "__GI___ioctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "drmIoctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "drmCommandWriteRead",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x51ee",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_kick",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa7103a",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_screen_create",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x311bf7",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x17ba6",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x18bf8",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14b73c",
          "lines": [
            {
              "function": {
                "name": "DamageRegionAppend",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x141792",
          "lines": [
            {
              "function": {
                "name": "AddTraps",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "SendErrorToClient",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "InitFonts",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "__libc_start_call_main",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "__libc_start_main_alias_2",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "_start",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x1208bf",
          "lines": [
            {
              "function": {
                "name": "nouveau_bo_sync_for_device"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120f7f",
          "lines": [
            {
              "function": {
                "name": "nouveau_bo_validate"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228bb",
          "lines": [
            {
              "function": {
                "name": "validate_list"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124120",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_ioctl_pushbuf"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca7e2b",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl_kernel"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca8173",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a2c0",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x503812",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6762",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "__GI___ioctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "drmIoctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "drmCommandWriteRead",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x51ee",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_kick",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa7103a",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_screen_create",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x311bf7",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x17ba6",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x18bf8",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14b73c",
          "lines": [
            {
              "function": {
                "name": "DamageRegionAppend",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x141792",
          "lines": [
            {
              "function": {
                "name": "AddTraps",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "SendErrorToClient",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "InitFonts",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "__libc_start_call_main",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "__libc_start_main_alias_2",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "_start",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x1249eb4",
          "lines": [
            {
              "function": {
                "name": "_raw_spin_unlock_irq"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1675f3",
          "lines": [
            {
              "function": {
                "name": "nouveau_fence_emit"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x167d6c",
          "lines": [
            {
              "function": {
                "name": "nouveau_fence_new"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1242f2",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_ioctl_pushbuf"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca7e2b",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl_kernel"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca8173",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a2c0",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x503812",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6762",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "__GI___ioctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "drmIoctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "drmCommandWriteRead",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x51ee",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_kick",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa7103a",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_screen_create",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x311bf7",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x17ba6",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x18bf8",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14b73c",
          "lines": [
            {
              "function": {
                "name": "DamageRegionAppend",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x141792",
          "lines": [
            {
              "function": {
                "name": "AddTraps",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "SendErrorToClient",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "InitFonts",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "__libc_start_call_main",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "__libc_start_main_alias_2",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "_start",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x15743d",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x15a7e8",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x136697",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x13689c",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x313145",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x1d1d5",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14c9cf",
          "lines": [
            {
              "function": {
                "name": "DamageRegionAppend",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x275a2",
          "lines": [
            {
              "function": {
                "name": "glamor_pixmap_exchange_fbos",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x2746c",
          "lines": [
            {
              "function": {
                "name": "glamor_pixmap_exchange_fbos",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x140e6f",
          "lines": [
            {
              "function": {
                "name": "AddTraps",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "SendErrorToClient",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "InitFonts",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "__libc_start_call_main",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "__libc_start_main_alias_2",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "_start",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x1eb1b8",
          "lines": [
            {
              "function": {
                "name": "dma_sync_single_for_device"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1208e8",
          "lines": [
            {
              "function": {
                "name": "nouveau_bo_sync_for_device"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120f7f",
          "lines": [
            {
              "function": {
                "name": "nouveau_bo_validate"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228bb",
          "lines": [
            {
              "function": {
                "name": "validate_list"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124120",
          "lines": [
            {
              "function": {
                "name": "nouveau_gem_ioctl_pushbuf"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca7e2b",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl_kernel"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xca8173",
          "lines": [
            {
              "function": {
                "name": "drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a2c0",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x503812",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6762",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x124dec",
          "lines": [
            {
              "function": {
                "name": "__GI___ioctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x7aff",
          "lines": [
            {
              "function": {
                "name": "drmIoctl",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0xb02f",
          "lines": [
            {
              "function": {
                "name": "drmCommandWriteRead",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x5000",
            "limit": "0x11000",
            "offset": "0x7846e0c26000",
            "filename": "libdrm.so.2.4.0",
            "build_id": "34b19924754a393989de6b867174cd1108abe3f7"
          }
        },
        {
          "address": "0x51ee",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x53ba",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_data",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0x5a1b",
          "lines": [
            {
              "function": {
                "name": "nouveau_pushbuf_kick",
                "filename": "/usr/lib/x86_64-linux-gnu/libdrm_nouveau.so.2.0.0"
              }
            }
          ],
          "mapping": {
            "start": "0x2000",
            "limit": "0x7000",
            "offset": "0x7846dfd62000",
            "filename": "libdrm_nouveau.so.2.0.0",
            "build_id": "42def7a1ff2c124b187af05cf638e5c19456fbbb"
          }
        },
        {
          "address": "0xa7103a",
          "lines": [
            {
              "function": {
                "name": "nouveau_drm_screen_create",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x311bf7",
          "lines": [
            {
              "function": {
                "name": "__driDriverGetExtensions_d3d12",
                "filename": "/usr/lib/x86_64-linux-gnu/dri/nouveau_dri.so"
              }
            }
          ],
          "mapping": {
            "start": "0x97000",
            "limit": "0x14ad000",
            "offset": "0x7846dda00000",
            "filename": "nouveau_dri.so",
            "build_id": "a75ac6de0b3db77327a47716c42dd534d5177463"
          }
        },
        {
          "address": "0x100ef",
          "lines": [
            {
              "function": {
                "name": "glamor_create_gc",
                "filename": "/usr/lib/xorg/modules/libglamoregl.so"
              }
            }
          ],
          "mapping": {
            "start": "0x7000",
            "limit": "0x29000",
            "offset": "0x7846dff8b000",
            "filename": "libglamoregl.so",
            "build_id": "82e7b25a3fed294189acfc72fa8c7970f2d98ff3"
          }
        },
        {
          "address": "0x14bb06",
          "lines": [
            {
              "function": {
                "name": "DamageRegionAppend",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x13f976",
          "lines": [
            {
              "function": {
                "name": "AddTraps",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x62ab3",
          "lines": [
            {
              "function": {
                "name": "SendErrorToClient",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x66e51",
          "lines": [
            {
              "function": {
                "name": "InitFonts",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        },
        {
          "address": "0x2a1c9",
          "lines": [
            {
              "function": {
                "name": "__libc_start_call_main",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x2a28a",
          "lines": [
            {
              "function": {
                "name": "__libc_start_main_alias_2",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x4f394",
          "lines": [
            {
              "function": {
                "name": "_start",
                "filename": "/usr/lib/xorg/Xorg"
              }
            }
          ],
          "mapping": {
            "start": "0x40000",
            "limit": "0x1f2000",
            "offset": "0x5f6beff44000",
            "filename": "Xorg",
            "build_id": "4087c9f785a98f4f4b70b189a2ff61d1de2d03c7"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x150f38",
          "lines": [
            {
              "function": {
                "name": "finish_task_switch.isra.0"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1240963",
          "lines": [
            {
              "function": {
                "name": "__schedule"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1240dd2",
          "lines": [
            {
              "function": {
                "name": "schedule"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2262e3",
          "lines": [
            {
              "function": {
                "name": "futex_wait_queue"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x226ac4",
          "lines": [
            {
              "function": {
                "name": "__futex_wait"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x226bc3",
          "lines": [
            {
              "function": {
                "name": "futex_wait"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x222894",
          "lines": [
            {
              "function": {
                "name": "do_futex"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x223159",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_futex"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x55d0",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x481fa2",
          "lines": [
            {
              "function": {
                "name": "runtime.futex",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        },
        {
          "address": "0x43a98f",
          "lines": [
            {
              "function": {
                "name": "runtime.futexsleep",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        },
        {
          "address": "0x411826",
          "lines": [
            {
              "function": {
                "name": "runtime.notesleep",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        },
        {
          "address": "0x44604b",
          "lines": [
            {
              "function": {
                "name": "runtime.stopm",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        },
        {
          "address": "0x447abb",
          "lines": [
            {
              "function": {
                "name": "runtime.findRunnable",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        },
        {
          "address": "0x448b90",
          "lines": [
            {
              "function": {
                "name": "runtime.schedule",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        },
        {
          "address": "0x448faa",
          "lines": [
            {
              "function": {
                "name": "runtime.park_m",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        },
        {
          "address": "0x47e18d",
          "lines": [
            {
              "function": {
                "name": "runtime.mcall",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x43cf52",
          "lines": [
            {
              "function": {
                "name": "folio_remove_rmap_ptes"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41d13c",
          "lines": [
            {
              "function": {
                "name": "zap_pte_range"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41d75f",
          "lines": [
            {
              "function": {
                "name": "zap_pmd_range.isra.0"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41e2d5",
          "lines": [
            {
              "function": {
                "name": "unmap_page_range"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41e598",
          "lines": [
            {
              "function": {
                "name": "unmap_single_vma"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41e747",
          "lines": [
            {
              "function": {
                "name": "zap_page_range_single"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4663b8",
          "lines": [
            {
              "function": {
                "name": "madvise_vma_behavior"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x463c63",
          "lines": [
            {
              "function": {
                "name": "madvise_walk_vmas"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x466682",
          "lines": [
            {
              "function": {
                "name": "do_madvise"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x46690b",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_madvise"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7307",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x481f76",
          "lines": [
            {
              "function": {
                "name": "runtime.madvise",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        },
        {
          "address": "0x419ed5",
          "lines": [
            {
              "function": {
                "name": "runtime.sysUnusedOS",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        },
        {
          "address": "0x4273c8",
          "lines": [
            {
              "function": {
                "name": "runtime.(*pageAlloc).scavengeOne",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        },
        {
          "address": "0x426f8e",
          "lines": [
            {
              "function": {
                "name": "runtime.(*pageAlloc).scavenge.func1",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        },
        {
          "address": "0x47e209",
          "lines": [
            {
              "function": {
                "name": "runtime.systemstack",
                "filename": "/home/korniltsev/.cache/JetBrains/GoLand2024.3/tmp/GoLand/___go_build_go_opentelemetry_io_ebpf_profiler"
              }
            }
          ],
          "mapping": {
            "start": "0x402000",
            "limit": "0x1c7e000",
            "offset": "0x0",
            "filename": "___go_build_go_opentelemetry_io_ebpf_profiler",
            "build_id": "63a1c7cfe6fa984a61f04febb4f6c93d8c9a67d9"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x65",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 795
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_helper(JavaValue*, methodHandle const\u0026, JavaCallArguments*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "thread_entry(JavaThread*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x1228fa4",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9b05e",
          "lines": [
            {
              "function": {
                "name": "__GI___pthread_cond_signal",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0xfb2099",
          "lines": [
            {
              "function": {
                "name": "Unsafe_Unpark",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "void jdk.internal.misc.Unsafe.unpark(java.lang.Object)",
                "filename": "Unsafe.java"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x16",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.locks.LockSupport.unpark(java.lang.Thread)",
                "filename": "LockSupport.java"
              },
              "line": 181
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "boolean kotlinx.coroutines.scheduling.CoroutineScheduler.tryUnpark()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 488
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.signalCpuWork()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 463
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb3",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.dispatch(java.lang.Runnable, kotlinx.coroutines.scheduling.TaskContext, boolean)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 439
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler, java.lang.Runnable, kotlinx.coroutines.scheduling.TaskContext, boolean, int, java.lang.Object)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 416
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.dispatch(kotlin.coroutines.CoroutineContext, java.lang.Runnable)",
                "filename": "Dispatcher.kt"
              },
              "line": 118
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x69",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTaskKt.dispatch(kotlinx.coroutines.DispatchedTask, int)",
                "filename": "DispatchedTask.kt"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.CancellableContinuationImpl.dispatchResume(int)",
                "filename": "CancellableContinuationImpl.kt"
              },
              "line": 470
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x24",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.CancellableContinuationImpl.completeResume(java.lang.Object)",
                "filename": "CancellableContinuationImpl.kt"
              },
              "line": 586
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "boolean kotlinx.coroutines.channels.BufferedChannelKt.tryResume0(kotlinx.coroutines.CancellableContinuation, java.lang.Object, kotlin.jvm.functions.Function1)",
                "filename": "BufferedChannel.kt"
              },
              "line": 2924
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "boolean kotlinx.coroutines.channels.BufferedChannelKt.access$tryResume0(kotlinx.coroutines.CancellableContinuation, java.lang.Object, kotlin.jvm.functions.Function1)",
                "filename": "BufferedChannel.kt"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x36",
          "lines": [
            {
              "function": {
                "name": "boolean kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator.tryResumeHasNext(java.lang.Object)",
                "filename": "BufferedChannel.kt"
              },
              "line": 1713
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x77",
          "lines": [
            {
              "function": {
                "name": "boolean kotlinx.coroutines.channels.BufferedChannel.tryResumeReceiver(java.lang.Object, java.lang.Object)",
                "filename": "BufferedChannel.kt"
              },
              "line": 643
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x62",
          "lines": [
            {
              "function": {
                "name": "int kotlinx.coroutines.channels.BufferedChannel.updateCellSend(kotlinx.coroutines.channels.ChannelSegment, int, java.lang.Object, long, java.lang.Object, boolean)",
                "filename": "BufferedChannel.kt"
              },
              "line": 459
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa",
          "lines": [
            {
              "function": {
                "name": "int kotlinx.coroutines.channels.BufferedChannel.access$updateCellSend(kotlinx.coroutines.channels.BufferedChannel, kotlinx.coroutines.channels.ChannelSegment, int, java.lang.Object, long, java.lang.Object, boolean)",
                "filename": "BufferedChannel.kt"
              },
              "line": 37
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.channels.BufferedChannel.send$suspendImpl(kotlinx.coroutines.channels.BufferedChannel, java.lang.Object, kotlin.coroutines.Continuation)",
                "filename": "BufferedChannel.kt"
              },
              "line": 3117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.channels.BufferedChannel.send(java.lang.Object, kotlin.coroutines.Continuation)",
                "filename": "BufferedChannel.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.channels.ChannelCoroutine.send(java.lang.Object, kotlin.coroutines.Continuation)",
                "filename": "ChannelCoroutine.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.flow.internal.SendingCollector.emit(java.lang.Object, kotlin.coroutines.Continuation)",
                "filename": "SendingCollector.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x76",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.invokeSuspend(java.lang.Object)",
                "filename": "Merge.kt"
              },
              "line": 213
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.invoke(kotlinx.coroutines.flow.FlowCollector, java.lang.Object, kotlin.coroutines.Continuation)",
                "filename": "Merge.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1.invoke(java.lang.Object, java.lang.Object, java.lang.Object)",
                "filename": "Merge.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x39",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2.invokeSuspend(java.lang.Object)",
                "filename": "Merge.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "Merge.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2.invoke(java.lang.Object, java.lang.Object)",
                "filename": "Merge.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x67",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUndispatched(kotlin.jvm.functions.Function2, java.lang.Object, kotlin.coroutines.Continuation)",
                "filename": "Undispatched.kt"
              },
              "line": 27
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x40",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.CoroutineStart.invoke(kotlin.jvm.functions.Function2, java.lang.Object, kotlin.coroutines.Continuation)",
                "filename": "CoroutineStart.kt"
              },
              "line": 90
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.AbstractCoroutine.start(kotlinx.coroutines.CoroutineStart, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "AbstractCoroutine.kt"
              },
              "line": 123
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x30",
          "lines": [
            {
              "function": {
                "name": "kotlinx.coroutines.Job kotlinx.coroutines.BuildersKt__Builders_commonKt.launch(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function2)",
                "filename": "Builders.common.kt"
              },
              "line": 52
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "kotlinx.coroutines.Job kotlinx.coroutines.BuildersKt.launch(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function2)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "kotlinx.coroutines.Job kotlinx.coroutines.BuildersKt__Builders_commonKt.launch$default(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function2, int, java.lang.Object)",
                "filename": "Builders.common.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "kotlinx.coroutines.Job kotlinx.coroutines.BuildersKt.launch$default(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function2, int, java.lang.Object)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1.emit(java.lang.Object, kotlin.coroutines.Continuation)",
                "filename": "Merge.kt"
              },
              "line": 29
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1.invokeSuspend(java.lang.Object)",
                "filename": "Merge.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_helper(JavaValue*, methodHandle const\u0026, JavaCallArguments*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "thread_entry(JavaThread*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x150f38",
          "lines": [
            {
              "function": {
                "name": "finish_task_switch.isra.0"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1240963",
          "lines": [
            {
              "function": {
                "name": "__schedule"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1240dd2",
          "lines": [
            {
              "function": {
                "name": "schedule"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2262e3",
          "lines": [
            {
              "function": {
                "name": "futex_wait_queue"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x226ac4",
          "lines": [
            {
              "function": {
                "name": "__futex_wait"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x226bc3",
          "lines": [
            {
              "function": {
                "name": "futex_wait"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x222894",
          "lines": [
            {
              "function": {
                "name": "do_futex"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x223159",
          "lines": [
            {
              "function": {
                "name": "__x64_sys_futex"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x55d0",
          "lines": [
            {
              "function": {
                "name": "x64_sys_call"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1228fde",
          "lines": [
            {
              "function": {
                "name": "do_syscall_64"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x140012f",
          "lines": [
            {
              "function": {
                "name": "entry_SYSCALL_64_after_hwframe"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x98d60",
          "lines": [
            {
              "function": {
                "name": "__GI___futex_abstimed_wait_cancelable64",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x9bc7d",
          "lines": [
            {
              "function": {
                "name": "__GI___pthread_cond_timedwait",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0xd141d3",
          "lines": [
            {
              "function": {
                "name": "Parker::park(bool, long)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xfb3d80",
          "lines": [
            {
              "function": {
                "name": "Unsafe_Park",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "void jdk.internal.misc.Unsafe.park(boolean, long)",
                "filename": "Unsafe.java"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1b",
          "lines": [
            {
              "function": {
                "name": "void java.util.concurrent.locks.LockSupport.parkNanos(long)",
                "filename": "LockSupport.java"
              },
              "line": 410
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x56",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 785
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_helper(JavaValue*, methodHandle const\u0026, JavaCallArguments*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "thread_entry(JavaThread*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xb933f9da77f680a",
          "lines": [
            {
              "function": {
                "name": "vtable chunks"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x47",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 220
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_helper(JavaValue*, methodHandle const\u0026, JavaCallArguments*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "thread_entry(JavaThread*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.actionSystem.AnAction com.intellij.openapi.actionSystem.impl.ActionManagerImpl.getAction(java.lang.String)",
                "filename": "ActionManagerImpl.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.actionSystem.AnAction[] com.intellij.execution.ui.RunToolbarTopLevelExecutorActionGroup.getChildren(com.intellij.openapi.actionSystem.AnActionEvent)",
                "filename": "RedesignedRunWidget.kt"
              },
              "line": 181
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.actionSystem.AnAction[] com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$children$1$1$1.invoke()",
                "filename": "ActionUpdater.kt"
              },
              "line": 332
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$children$1$1$1.invoke()",
                "filename": "ActionUpdater.kt"
              },
              "line": 331
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$callAction$2$1.invoke()",
                "filename": "ActionUpdater.kt"
              },
              "line": 145
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.insideReadAction()",
                "filename": "InternalReadAction.kt"
              },
              "line": 114
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.rw.ReadResult com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable$lambda$4(com.intellij.openapi.application.rw.InternalReadAction)",
                "filename": "InternalReadAction.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2$lambda$1(kotlinx.coroutines.CompletableJob, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x71",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.tryRunReadAction(java.lang.Runnable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 351
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(java.lang.Runnable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 971
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal$lambda$3$lambda$2(kotlinx.coroutines.CompletableJob, com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 30
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.rw.CancellableReadActionKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4d",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtilService.runActionAndCancelBeforeWrite(java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtilService.java"
              },
              "line": 66
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x21",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.progress.util.ProgressIndicatorUtils.runActionAndCancelBeforeWrite(com.intellij.openapi.application.ex.ApplicationEx, java.lang.Runnable, java.lang.Runnable)",
                "filename": "ProgressIndicatorUtils.java"
              },
              "line": 157
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x72",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.CancellableReadActionKt.cancellableReadActionInternal(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "cancellableReadAction.kt"
              },
              "line": 28
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadCancellable(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 103
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xf",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.tryReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.readLoop(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 74
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.access$readLoop(com.intellij.openapi.application.rw.InternalReadAction, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 16
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x31",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$3.invokeSuspend(java.lang.Object)",
                "filename": "InternalReadAction.kt"
              },
              "line": 36
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$3.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction$runReadAction$3.invoke(java.lang.Object, java.lang.Object)",
                "filename": "InternalReadAction.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.CoroutineScopeKt.coroutineScope(kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "CoroutineScope.kt"
              },
              "line": 261
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x57",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.InternalReadAction.runReadAction(kotlin.coroutines.Continuation)",
                "filename": "InternalReadAction.kt"
              },
              "line": 35
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.rw.PlatformReadWriteActionSupport.executeReadAction(java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "PlatformReadWriteActionSupport.kt"
              },
              "line": 38
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.ReadWriteActionSupport.executeReadAction$default(com.intellij.openapi.application.ReadWriteActionSupport, java.util.List, boolean, boolean, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)",
                "filename": "ReadWriteActionSupport.kt"
              },
              "line": 15
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.constrainedReadActionUndispatched(com.intellij.openapi.application.ReadConstraint[], kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 86
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.readActionUndispatched(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 73
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$callAction$$inlined$useWithScope$1.invokeSuspend(java.lang.Object)",
                "filename": "trace.kt"
              },
              "line": 61
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$callAction$$inlined$useWithScope$1.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "trace.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$callAction$$inlined$useWithScope$1.invoke(java.lang.Object, java.lang.Object)",
                "filename": "trace.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x187",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.callAction(com.intellij.openapi.actionSystem.impl.OpElement, com.intellij.openapi.actionSystem.ActionUpdateThread, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 882
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.access$callAction(com.intellij.openapi.actionSystem.impl.ActionUpdater, com.intellij.openapi.actionSystem.impl.OpElement, com.intellij.openapi.actionSystem.ActionUpdateThread, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 77
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x54",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$children$1$1.invokeSuspend(java.lang.Object)",
                "filename": "ActionUpdater.kt"
              },
              "line": 331
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$children$1$1.invoke(kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$children$1$1.invoke(java.lang.Object)",
                "filename": "ActionUpdater.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$$inlined$retryOnAwaitSharedData$1.invokeSuspend(java.lang.Object)",
                "filename": "ActionUpdater.kt"
              },
              "line": 831
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$$inlined$retryOnAwaitSharedData$1.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$$inlined$retryOnAwaitSharedData$1.invoke(java.lang.Object, java.lang.Object)",
                "filename": "ActionUpdater.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x128",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.getGroupChildren(com.intellij.openapi.actionSystem.ActionGroup, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 910
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.access$getGroupChildren(com.intellij.openapi.actionSystem.impl.ActionUpdater, com.intellij.openapi.actionSystem.ActionGroup, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 77
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$doExpandActionGroup$2.invokeSuspend(java.lang.Object)",
                "filename": "ActionUpdater.kt"
              },
              "line": 268
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$doExpandActionGroup$2.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$doExpandActionGroup$2.invoke(java.lang.Object, java.lang.Object)",
                "filename": "ActionUpdater.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xff",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.doExpandActionGroup(com.intellij.openapi.actionSystem.ActionGroup, boolean, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 261
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3ea",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.expandGroupChild(com.intellij.openapi.actionSystem.AnAction, boolean, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.access$expandGroupChild(com.intellij.openapi.actionSystem.impl.ActionUpdater, com.intellij.openapi.actionSystem.AnAction, boolean, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 77
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x39",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$doExpandActionGroup$2$expandResult$1$1.invokeSuspend(java.lang.Object)",
                "filename": "ActionUpdater.kt"
              },
              "line": 274
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.internal.LimitedDispatcher$Worker.run()",
                "filename": "LimitedDispatcher.kt"
              },
              "line": 111
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.TaskImpl.run()",
                "filename": "Tasks.kt"
              },
              "line": 99
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_helper(JavaValue*, methodHandle const\u0026, JavaCallArguments*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "thread_entry(JavaThread*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "kotlin.coroutines.CoroutineContext$Element kotlin.coroutines.ContinuationInterceptor$DefaultImpls.get(kotlin.coroutines.ContinuationInterceptor, kotlin.coroutines.CoroutineContext$Key)",
                "filename": "ContinuationInterceptor.kt"
              },
              "line": 57
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.coroutines.CoroutineContext$Element kotlinx.coroutines.CoroutineDispatcher.get(kotlin.coroutines.CoroutineContext$Key)",
                "filename": "CoroutineDispatcher.kt"
              },
              "line": 27
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "kotlin.coroutines.CoroutineContext$Element kotlin.coroutines.CombinedContext.get(kotlin.coroutines.CoroutineContext$Key)",
                "filename": "CoroutineContextImpl.kt"
              },
              "line": 120
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.UndispatchedCoroutine.\u003cinit\u003e(kotlin.coroutines.CoroutineContext, kotlin.coroutines.Continuation)",
                "filename": "CoroutineContext.kt"
              },
              "line": 243
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 160
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x187",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.callAction(com.intellij.openapi.actionSystem.impl.OpElement, com.intellij.openapi.actionSystem.ActionUpdateThread, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 882
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.access$callAction(com.intellij.openapi.actionSystem.impl.ActionUpdater, com.intellij.openapi.actionSystem.impl.OpElement, com.intellij.openapi.actionSystem.ActionUpdateThread, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 77
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x54",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$children$1$1.invokeSuspend(java.lang.Object)",
                "filename": "ActionUpdater.kt"
              },
              "line": 331
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$children$1$1.invoke(kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$children$1$1.invoke(java.lang.Object)",
                "filename": "ActionUpdater.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$$inlined$retryOnAwaitSharedData$1.invokeSuspend(java.lang.Object)",
                "filename": "ActionUpdater.kt"
              },
              "line": 831
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$$inlined$retryOnAwaitSharedData$1.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$getGroupChildren$$inlined$retryOnAwaitSharedData$1.invoke(java.lang.Object, java.lang.Object)",
                "filename": "ActionUpdater.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x128",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.getGroupChildren(com.intellij.openapi.actionSystem.ActionGroup, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 910
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.access$getGroupChildren(com.intellij.openapi.actionSystem.impl.ActionUpdater, com.intellij.openapi.actionSystem.ActionGroup, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 77
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc6",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$doExpandActionGroup$2.invokeSuspend(java.lang.Object)",
                "filename": "ActionUpdater.kt"
              },
              "line": 268
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$doExpandActionGroup$2.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$doExpandActionGroup$2.invoke(java.lang.Object, java.lang.Object)",
                "filename": "ActionUpdater.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9e",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "Builders.common.kt"
              },
              "line": 163
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.BuildersKt.withContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xff",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.doExpandActionGroup(com.intellij.openapi.actionSystem.ActionGroup, boolean, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 261
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3ea",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.expandGroupChild(com.intellij.openapi.actionSystem.AnAction, boolean, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.access$expandGroupChild(com.intellij.openapi.actionSystem.impl.ActionUpdater, com.intellij.openapi.actionSystem.AnAction, boolean, kotlin.coroutines.Continuation)",
                "filename": "ActionUpdater.kt"
              },
              "line": 77
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x39",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$doExpandActionGroup$2$expandResult$1$1.invokeSuspend(java.lang.Object)",
                "filename": "ActionUpdater.kt"
              },
              "line": 274
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.internal.LimitedDispatcher$Worker.run()",
                "filename": "LimitedDispatcher.kt"
              },
              "line": 111
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.TaskImpl.run()",
                "filename": "Tasks.kt"
              },
              "line": 99
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 608
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(kotlinx.coroutines.scheduling.Task)",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 873
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 763
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run()",
                "filename": "CoroutineScheduler.kt"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_helper(JavaValue*, methodHandle const\u0026, JavaCallArguments*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "thread_entry(JavaThread*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x36",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.UIDefaults.getFromResourceBundle(java.lang.Object, java.util.Locale)",
                "filename": "UIDefaults.java"
              },
              "line": 298
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.UIDefaults.get(java.lang.Object)",
                "filename": "UIDefaults.java"
              },
              "line": 172
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.MultiUIDefaults.get(java.lang.Object)",
                "filename": "MultiUIDefaults.java"
              },
              "line": 65
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.UIManager.get(java.lang.Object)",
                "filename": "UIManager.java"
              },
              "line": 1014
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18",
          "lines": [
            {
              "function": {
                "name": "java.awt.Color com.intellij.ui.JBColor.calculateColorOrNull(java.lang.String)",
                "filename": "JBColor.java"
              },
              "line": 143
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa",
          "lines": [
            {
              "function": {
                "name": "java.awt.Color com.intellij.ui.JBColor.calculateColor(java.lang.String, java.awt.Color)",
                "filename": "JBColor.java"
              },
              "line": 131
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "java.awt.Color com.intellij.ui.JBColor.getColor()",
                "filename": "JBColor.java"
              },
              "line": 201
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "int com.intellij.ui.JBColor.getRGB()",
                "filename": "JBColor.java"
              },
              "line": 254
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "boolean java.awt.Color.equals(java.lang.Object)",
                "filename": "Color.java"
              },
              "line": 701
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.ui.JBColor.equals(java.lang.Object)",
                "filename": "JBColor.java"
              },
              "line": 291
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.ui.JBColor.equals(java.lang.Object)",
                "filename": "JBColor.java"
              },
              "line": 291
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4c",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.openapi.util.Comparing.equal(java.lang.Object, java.lang.Object)",
                "filename": "Comparing.java"
              },
              "line": 32
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.ui.SimpleColoredComponent.isSelection()",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 1096
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x39",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.paintIcon(java.awt.Graphics, javax.swing.Icon, int)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 1089
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x86",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.doPaintIcon(java.awt.Graphics2D, javax.swing.Icon, int)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 801
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.doPaint(java.awt.Graphics2D)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 761
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.paintComponent(java.awt.Graphics)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 745
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x100",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7c",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.CellRendererPane.paintComponent(java.awt.Graphics, java.awt.Component, java.awt.Container, int, int, int, int, boolean)",
                "filename": "CellRendererPane.java"
              },
              "line": 170
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x43e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.tree.ui.DefaultTreeUI.paint(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "DefaultTreeUI.java"
              },
              "line": 372
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "ComponentUI.java"
              },
              "line": 161
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintComponent(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 855
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.paintComponent(java.awt.Graphics)",
                "filename": "Tree.java"
              },
              "line": 381
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x100",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.paint(java.awt.Graphics)",
                "filename": "Tree.java"
              },
              "line": 312
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xcd",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JViewport.paint(java.awt.Graphics)",
                "filename": "JViewport.java"
              },
              "line": 736
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBViewport.paint(java.awt.Graphics)",
                "filename": "JBViewport.java"
              },
              "line": 240
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paintChildren(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 243
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paint(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 231
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5319
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa3",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBufferedImpl(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1680
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1655
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x80",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1592
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19a",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.BufferStrategyPaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "BufferStrategyPaintManager.java"
              },
              "line": 281
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x34",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1352
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2ab",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent._paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5267
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5077
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 887
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map)",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 843
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x49",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.prePaintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 789
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$ProcessingRunnable.run()",
                "filename": "RepaintManager.java"
              },
              "line": 1921
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x26",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext.runInChildContext(boolean, kotlin.jvm.functions.Function0)",
                "filename": "propagation.kt"
              },
              "line": 107
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext.runInChildContext(java.lang.Runnable)",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ContextRunnable.run()",
                "filename": "ContextRunnable.java"
              },
              "line": 27
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.dispatch()",
                "filename": "InvocationEvent.java"
              },
              "line": 318
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 781
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 573
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1cc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 387
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_helper(JavaValue*, methodHandle const\u0026, JavaCallArguments*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "thread_entry(JavaThread*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x91",
          "lines": [
            {
              "function": {
                "name": "java.util.HashMap$Node java.util.HashMap.getNode(java.lang.Object)",
                "filename": "HashMap.java"
              },
              "line": 587
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.util.HashMap.get(java.lang.Object)",
                "filename": "HashMap.java"
              },
              "line": 564
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "com.intellij.ui.tree.ui.DefaultTreeLayoutCache$Node com.intellij.ui.tree.ui.DefaultTreeLayoutCache.getNode(javax.swing.tree.TreePath)",
                "filename": "DefaultTreeLayoutCache.kt"
              },
              "line": 367
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.awt.Rectangle com.intellij.ui.tree.ui.DefaultTreeLayoutCache.getBounds(javax.swing.tree.TreePath, java.awt.Rectangle)",
                "filename": "DefaultTreeLayoutCache.kt"
              },
              "line": 197
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8d",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.tree.ui.DefaultTreeUI.paint(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "DefaultTreeUI.java"
              },
              "line": 273
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "ComponentUI.java"
              },
              "line": 161
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintComponent(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 855
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.paintComponent(java.awt.Graphics)",
                "filename": "Tree.java"
              },
              "line": 381
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x100",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.paint(java.awt.Graphics)",
                "filename": "Tree.java"
              },
              "line": 312
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xcd",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JViewport.paint(java.awt.Graphics)",
                "filename": "JViewport.java"
              },
              "line": 736
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBViewport.paint(java.awt.Graphics)",
                "filename": "JBViewport.java"
              },
              "line": 240
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paintChildren(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 243
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paint(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 231
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5319
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa3",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBufferedImpl(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1680
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1655
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x80",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1592
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19a",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.BufferStrategyPaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "BufferStrategyPaintManager.java"
              },
              "line": 281
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x34",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1352
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2ab",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent._paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5267
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5077
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 887
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map)",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 843
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x49",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.prePaintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 789
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$ProcessingRunnable.run()",
                "filename": "RepaintManager.java"
              },
              "line": 1921
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x26",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext.runInChildContext(boolean, kotlin.jvm.functions.Function0)",
                "filename": "propagation.kt"
              },
              "line": 107
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext.runInChildContext(java.lang.Runnable)",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ContextRunnable.run()",
                "filename": "ContextRunnable.java"
              },
              "line": 27
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.dispatch()",
                "filename": "InvocationEvent.java"
              },
              "line": 318
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 781
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 573
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1cc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 387
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_helper(JavaValue*, methodHandle const\u0026, JavaCallArguments*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "thread_entry(JavaThread*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "boolean java.lang.String.equals(java.lang.Object)",
                "filename": "String.java"
              },
              "line": 1858
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.util.Hashtable.get(java.lang.Object)",
                "filename": "Hashtable.java"
              },
              "line": 384
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.UIDefaults.getFromHashtable(java.lang.Object)",
                "filename": "UIDefaults.java"
              },
              "line": 183
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.UIDefaults.get(java.lang.Object)",
                "filename": "UIDefaults.java"
              },
              "line": 171
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.UIDefaults.getBoolean(java.lang.Object)",
                "filename": "UIDefaults.java"
              },
              "line": 604
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.ui.StartupUiUtil.isDarkTheme()",
                "filename": "StartupUiUtil.kt"
              },
              "line": 51
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "boolean com.intellij.util.ui.StartupUiUtil.isUnderDarcula()",
                "filename": "StartupUiUtil.kt"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "javax.swing.Icon com.intellij.ide.util.treeView.NodeRenderer.fixIconIfNeeded(javax.swing.Icon, boolean, boolean)",
                "filename": "NodeRenderer.java"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.util.treeView.NodeRenderer.customizeLegacyRenderer(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)",
                "filename": "NodeRenderer.java"
              },
              "line": 73
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x32",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.util.treeView.NodeRenderer.customizeCellRenderer(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)",
                "filename": "NodeRenderer.java"
              },
              "line": 45
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xdf",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.ColoredTreeCellRenderer.rendererComponentInner(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)",
                "filename": "ColoredTreeCellRenderer.java"
              },
              "line": 125
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.awt.Component com.intellij.ui.ColoredTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)",
                "filename": "ColoredTreeCellRenderer.java"
              },
              "line": 57
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3a",
          "lines": [
            {
              "function": {
                "name": "java.awt.Component com.intellij.ui.tree.ui.DefaultTreeUI.getRenderer(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)",
                "filename": "DefaultTreeUI.java"
              },
              "line": 208
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x36d",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.tree.ui.DefaultTreeUI.paint(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "DefaultTreeUI.java"
              },
              "line": 347
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "ComponentUI.java"
              },
              "line": 161
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintComponent(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 855
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.paintComponent(java.awt.Graphics)",
                "filename": "Tree.java"
              },
              "line": 381
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x100",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.paint(java.awt.Graphics)",
                "filename": "Tree.java"
              },
              "line": 312
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xcd",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JViewport.paint(java.awt.Graphics)",
                "filename": "JViewport.java"
              },
              "line": 736
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBViewport.paint(java.awt.Graphics)",
                "filename": "JBViewport.java"
              },
              "line": 240
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paintChildren(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 243
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paint(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 231
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5319
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa3",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBufferedImpl(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1680
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1655
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x80",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1592
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19a",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.BufferStrategyPaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "BufferStrategyPaintManager.java"
              },
              "line": 281
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x34",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1352
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2ab",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent._paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5267
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5077
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 887
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map)",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 843
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x49",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.prePaintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 789
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$ProcessingRunnable.run()",
                "filename": "RepaintManager.java"
              },
              "line": 1921
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x26",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext.runInChildContext(boolean, kotlin.jvm.functions.Function0)",
                "filename": "propagation.kt"
              },
              "line": 107
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext.runInChildContext(java.lang.Runnable)",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ContextRunnable.run()",
                "filename": "ContextRunnable.java"
              },
              "line": 27
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.dispatch()",
                "filename": "InvocationEvent.java"
              },
              "line": 318
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 781
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 573
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1cc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 387
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_helper(JavaValue*, methodHandle const\u0026, JavaCallArguments*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "thread_entry(JavaThread*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeAtImpl(int)",
                "filename": "ThreadSafeHeap.kt"
              },
              "line": 88
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x45",
          "lines": [
            {
              "function": {
                "name": "boolean kotlinx.coroutines.internal.ThreadSafeHeap.remove(kotlinx.coroutines.internal.ThreadSafeHeapNode)",
                "filename": "ThreadSafeHeap.kt"
              },
              "line": 78
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x37",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.EventLoopImplBase$DelayedTask.dispose()",
                "filename": "EventLoop.common.kt"
              },
              "line": 479
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DisposeOnCancel.invoke(java.lang.Throwable)",
                "filename": "CancellableContinuation.kt"
              },
              "line": 379
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.CancellableContinuationImpl.callCancelHandler(kotlinx.coroutines.CancelHandler, java.lang.Throwable)",
                "filename": "CancellableContinuationImpl.kt"
              },
              "line": 245
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x61",
          "lines": [
            {
              "function": {
                "name": "boolean kotlinx.coroutines.CancellableContinuationImpl.cancel(java.lang.Throwable)",
                "filename": "CancellableContinuationImpl.kt"
              },
              "line": 208
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.CancellableContinuationImpl.parentCancelled$kotlinx_coroutines_core(java.lang.Throwable)",
                "filename": "CancellableContinuationImpl.kt"
              },
              "line": 220
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.ChildContinuation.invoke(java.lang.Throwable)",
                "filename": "JobSupport.kt"
              },
              "line": 1447
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x47",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.JobSupport.notifyCancelling(kotlinx.coroutines.NodeList, java.lang.Throwable)",
                "filename": "JobSupport.kt"
              },
              "line": 1473
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x63",
          "lines": [
            {
              "function": {
                "name": "boolean kotlinx.coroutines.JobSupport.tryMakeCancelling(kotlinx.coroutines.Incomplete, java.lang.Throwable)",
                "filename": "JobSupport.kt"
              },
              "line": 796
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x112",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.JobSupport.makeCancelling(java.lang.Object)",
                "filename": "JobSupport.kt"
              },
              "line": 756
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "boolean kotlinx.coroutines.JobSupport.cancelImpl$kotlinx_coroutines_core(java.lang.Object)",
                "filename": "JobSupport.kt"
              },
              "line": 672
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.JobSupport.cancelInternal(java.lang.Throwable)",
                "filename": "JobSupport.kt"
              },
              "line": 633
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x24",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.JobSupport.cancel(java.util.concurrent.CancellationException)",
                "filename": "JobSupport.kt"
              },
              "line": 618
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.JobKt__JobKt.cancel(kotlinx.coroutines.Job, java.lang.String, java.lang.Throwable)",
                "filename": "Job.kt"
              },
              "line": 607
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.JobKt.cancel(kotlinx.coroutines.Job, java.lang.String, java.lang.Throwable)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.JobKt__JobKt.cancel$default(kotlinx.coroutines.Job, java.lang.String, java.lang.Throwable, int, java.lang.Object)",
                "filename": "Job.kt"
              },
              "line": 607
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x6",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.JobKt.cancel$default(kotlinx.coroutines.Job, java.lang.String, java.lang.Throwable, int, java.lang.Object)",
                "filename": "\u003cunknown\u003e"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x17",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.diagnostic.ThreadDumpService$start$1.close()",
                "filename": "ThreadDumpService.kt"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa",
          "lines": [
            {
              "function": {
                "name": "void kotlin.jdk7.AutoCloseableKt.closeFinally(java.lang.AutoCloseable, java.lang.Throwable)",
                "filename": "AutoCloseableJVM.kt"
              },
              "line": 48
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x142",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater.computeOnEdt$lambda$9(com.intellij.openapi.actionSystem.impl.ActionUpdater, long, kotlin.jvm.internal.Ref$LongRef, java.lang.String, boolean, kotlin.jvm.functions.Function0, kotlin.jvm.internal.Ref$LongRef, kotlin.jvm.internal.Ref$ObjectRef)",
                "filename": "ActionUpdater.kt"
              },
              "line": 954
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$computeOnEdt$deferred$1.invokeSuspend$lambda$0(kotlin.jvm.functions.Function0)",
                "filename": "ActionUpdater.kt"
              },
              "line": 428
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$computeOnEdt$deferred$1$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.writeIntentReadAction$lambda$1$lambda$0(kotlin.jvm.functions.Function0)",
                "filename": "coroutines.kt"
              },
              "line": 329
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.writeIntentReadAction$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "coroutines.kt"
              },
              "line": 329
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)",
                "filename": "coroutines.kt"
              },
              "line": 341
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x32",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(java.lang.Object)",
                "filename": "coroutines.kt"
              },
              "line": 233
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(java.lang.Object, java.lang.Object)",
                "filename": "coroutines.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine, java.lang.Object, kotlin.jvm.functions.Function2)",
                "filename": "Undispatched.kt"
              },
              "line": 62
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object kotlinx.coroutines.CoroutineScopeKt.coroutineScope(kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)",
                "filename": "CoroutineScope.kt"
              },
              "line": 261
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.CoroutinesKt.blockingContext(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 232
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.CoroutinesKt.writeIntentReadAction(kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)",
                "filename": "coroutines.kt"
              },
              "line": 328
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x36",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionUpdater$computeOnEdt$deferred$1.invokeSuspend(java.lang.Object)",
                "filename": "ActionUpdater.kt"
              },
              "line": 427
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.EdtCoroutineDispatcher$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl$2.run()",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 221
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.FlushQueue.runNextEvent(com.intellij.openapi.application.impl.FlushQueue$RunnableInfo)",
                "filename": "FlushQueue.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x31",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.FlushQueue.flushNow()",
                "filename": "FlushQueue.java"
              },
              "line": 43
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.impl.FlushQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.dispatch()",
                "filename": "InvocationEvent.java"
              },
              "line": 318
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 781
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 573
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1ff",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 395
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_helper(JavaValue*, methodHandle const\u0026, JavaCallArguments*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "thread_entry(JavaThread*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.awt.Window javax.swing.SwingUtilities.getWindowAncestor(java.awt.Component)",
                "filename": "SwingUtilities.java"
              },
              "line": 146
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x17",
          "lines": [
            {
              "function": {
                "name": "java.awt.Window com.intellij.ui.ComponentUtil.getWindow(java.awt.Component)",
                "filename": "ComponentUtil.java"
              },
              "line": 76
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.ModalityState com.intellij.openapi.application.impl.ApplicationImpl.getModalityStateForComponent(java.awt.Component)",
                "filename": "ApplicationImpl.java"
              },
              "line": 456
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.ModalityState com.intellij.openapi.application.ModalityState.stateForComponent(java.awt.Component)",
                "filename": "ModalityState.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.ModalityState com.intellij.openapi.actionSystem.impl.ToolbarUpdater$MyTimerListener.getModalityState()",
                "filename": "ToolbarUpdater.java"
              },
              "line": 126
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "com.intellij.openapi.application.ModalityState com.intellij.openapi.actionSystem.impl.CapturingListener.getModalityState()",
                "filename": "ActionManagerImpl.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.actionSystem.impl.ActionManagerImplKt.runListenerAction(com.intellij.openapi.actionSystem.TimerListener)",
                "filename": "ActionManagerImpl.kt"
              },
              "line": 1417
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.actionSystem.impl.ActionManagerImplKt.access$runListenerAction(com.intellij.openapi.actionSystem.TimerListener)",
                "filename": "ActionManagerImpl.kt"
              },
              "line": 1
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.actionSystem.impl.ActionManagerImpl$MyTimer.tick()",
                "filename": "ActionManagerImpl.kt"
              },
              "line": 1309
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.actionSystem.impl.ActionManagerImpl$MyTimer.access$tick(com.intellij.openapi.actionSystem.impl.ActionManagerImpl$MyTimer)",
                "filename": "ActionManagerImpl.kt"
              },
              "line": 1255
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x24",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.actionSystem.impl.ActionManagerImpl$MyTimer$2$1$1.invokeSuspend(java.lang.Object)",
                "filename": "ActionManagerImpl.kt"
              },
              "line": 1284
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2c",
          "lines": [
            {
              "function": {
                "name": "void kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(java.lang.Object)",
                "filename": "ContinuationImpl.kt"
              },
              "line": 33
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x154",
          "lines": [
            {
              "function": {
                "name": "void kotlinx.coroutines.DispatchedTask.run()",
                "filename": "DispatchedTask.kt"
              },
              "line": 104
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.dispatch()",
                "filename": "InvocationEvent.java"
              },
              "line": 318
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 781
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 573
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1ff",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 395
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_helper(JavaValue*, methodHandle const\u0026, JavaCallArguments*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "thread_entry(JavaThread*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "void java.util.HashMap.putMapEntries(java.util.Map, boolean)",
                "filename": "HashMap.java"
              },
              "line": 503
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1c",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.util.HashMap.clone()",
                "filename": "HashMap.java"
              },
              "line": 1473
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.RenderingHints.clone()",
                "filename": "RenderingHints.java"
              },
              "line": 1333
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5f",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.Toolkit.getDesktopProperty(java.lang.String)",
                "filename": "Toolkit.java"
              },
              "line": 1568
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19",
          "lines": [
            {
              "function": {
                "name": "int com.intellij.util.ui.StartupUiUtil.doGetLcdContrastValueForSplash(boolean)",
                "filename": "StartupUiUtil.kt"
              },
              "line": 78
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x24",
          "lines": [
            {
              "function": {
                "name": "int com.intellij.util.ui.StartupUiUtil.getLcdContrastValue()",
                "filename": "StartupUiUtil.kt"
              },
              "line": 65
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x0",
          "lines": [
            {
              "function": {
                "name": "int com.intellij.util.ui.UIUtil.getLcdContrastValue()",
                "filename": "UIUtil.java"
              },
              "line": 2521
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.ui.UISettings$Companion.setupAntialiasing(java.awt.Graphics)",
                "filename": "UISettings.kt"
              },
              "line": 668
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.ui.UISettings.setupAntialiasing(java.awt.Graphics)",
                "filename": "UISettings.kt"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.applyAdditionalHints(java.awt.Graphics2D)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 1100
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x47",
          "lines": [
            {
              "function": {
                "name": "int com.intellij.ui.SimpleColoredComponent.doPaintText(java.awt.Graphics2D, int, boolean)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 836
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x54",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.doPaint(java.awt.Graphics2D)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 766
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.SimpleColoredComponent.paintComponent(java.awt.Graphics)",
                "filename": "SimpleColoredComponent.java"
              },
              "line": 745
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x100",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7c",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.CellRendererPane.paintComponent(java.awt.Graphics, java.awt.Component, java.awt.Container, int, int, int, int, boolean)",
                "filename": "CellRendererPane.java"
              },
              "line": 170
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x43e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.tree.ui.DefaultTreeUI.paint(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "DefaultTreeUI.java"
              },
              "line": 372
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent)",
                "filename": "ComponentUI.java"
              },
              "line": 161
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintComponent(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 855
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x41",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.paintComponent(java.awt.Graphics)",
                "filename": "Tree.java"
              },
              "line": 381
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x100",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1124
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.treeStructure.Tree.paint(java.awt.Graphics)",
                "filename": "Tree.java"
              },
              "line": 312
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xcd",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JViewport.paint(java.awt.Graphics)",
                "filename": "JViewport.java"
              },
              "line": 736
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBViewport.paint(java.awt.Graphics)",
                "filename": "JBViewport.java"
              },
              "line": 240
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x204",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintChildren(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 964
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paintChildren(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 243
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x120",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paint(java.awt.Graphics)",
                "filename": "JComponent.java"
              },
              "line": 1133
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ui.components.JBScrollPane.paint(java.awt.Graphics)",
                "filename": "JBScrollPane.java"
              },
              "line": 231
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x29",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5319
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xa3",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBufferedImpl(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1680
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1655
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x80",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1592
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x19a",
          "lines": [
            {
              "function": {
                "name": "boolean javax.swing.BufferStrategyPaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "BufferStrategyPaintManager.java"
              },
              "line": 281
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x34",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int)",
                "filename": "RepaintManager.java"
              },
              "line": 1352
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2ab",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent._paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5267
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.JComponent.paintImmediately(int, int, int, int)",
                "filename": "JComponent.java"
              },
              "line": 5077
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 887
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object javax.swing.RepaintManager$4.run()",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9a",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map)",
                "filename": "RepaintManager.java"
              },
              "line": 870
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.paintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 843
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x49",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager.prePaintDirtyRegions()",
                "filename": "RepaintManager.java"
              },
              "line": 789
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x25",
          "lines": [
            {
              "function": {
                "name": "void javax.swing.RepaintManager$ProcessingRunnable.run()",
                "filename": "RepaintManager.java"
              },
              "line": 1921
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext$runInChildContext$1.invoke()",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x26",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.util.concurrency.ChildContext.runInChildContext(boolean, kotlin.jvm.functions.Function0)",
                "filename": "propagation.kt"
              },
              "line": 107
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x13",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ChildContext.runInChildContext(java.lang.Runnable)",
                "filename": "propagation.kt"
              },
              "line": 101
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.util.concurrency.ContextRunnable.run()",
                "filename": "ContextRunnable.java"
              },
              "line": 27
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2f",
          "lines": [
            {
              "function": {
                "name": "void java.awt.event.InvocationEvent.dispatch()",
                "filename": "InvocationEvent.java"
              },
              "line": 318
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object)",
                "filename": "EventQueue.java"
              },
              "line": 781
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "java.lang.Void java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 728
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.awt.EventQueue$4.run()",
                "filename": "EventQueue.java"
              },
              "line": 722
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1d",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, java.lang.Class)",
                "filename": "AccessController.java"
              },
              "line": 778
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)",
                "filename": "AccessController.java"
              },
              "line": 400
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext)",
                "filename": "ProtectionDomain.java"
              },
              "line": 87
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "EventQueue.java"
              },
              "line": 750
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x5c",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.defaultDispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 675
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x18e",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue._dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 573
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16$lambda$15(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 355
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x8",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3b",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "CoreProgressManager.java"
              },
              "line": 857
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18$lambda$17$lambda$16(com.intellij.openapi.progress.ProgressManager, com.intellij.ide.IdeEventQueue, java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 354
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2$lambda$1(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.lambda$run$0(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 24
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction$$Lambda+\u003chidden\u003e.compute()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x60",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.AnyThreadWriteThreadingSupport.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "AnyThreadWriteThreadingSupport.kt"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xd",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.impl.ApplicationImpl.runWriteIntentReadAction(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "ApplicationImpl.java"
              },
              "line": 916
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xc",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.openapi.application.WriteIntentReadAction.compute(com.intellij.openapi.util.ThrowableComputable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 55
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xe",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.WriteIntentReadAction.run(java.lang.Runnable)",
                "filename": "WriteIntentReadAction.java"
              },
              "line": 23
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "kotlin.Unit com.intellij.ide.IdeEventQueueKt.performActivity$lambda$2(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1045
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "java.lang.Object com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.invoke()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity$lambda$3(kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2a",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.openapi.application.TransactionGuardImpl.performActivity(boolean, java.lang.Runnable)",
                "filename": "TransactionGuardImpl.java"
              },
              "line": 109
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x7f",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueueKt.performActivity(java.awt.AWTEvent, boolean, kotlin.jvm.functions.Function0)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 1054
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x48",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent$lambda$18(com.intellij.ide.IdeEventQueue, java.awt.AWTEvent, boolean, java.awt.AWTEvent, com.intellij.diagnostic.EventWatcher, java.lang.Runnable, java.lang.Class, long)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 349
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x20",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue$$Lambda+\u003chidden\u003e.run()",
                "filename": "\u003cunknown\u003e"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1cc",
          "lines": [
            {
              "function": {
                "name": "void com.intellij.ide.IdeEventQueue.dispatchEvent(java.awt.AWTEvent)",
                "filename": "IdeEventQueue.kt"
              },
              "line": 387
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x51",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpOneEventForFilters(int)",
                "filename": "EventDispatchThread.java"
              },
              "line": 207
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x23",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter)",
                "filename": "EventDispatchThread.java"
              },
              "line": 128
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xb",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component)",
                "filename": "EventDispatchThread.java"
              },
              "line": 117
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x4",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 113
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x3",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional)",
                "filename": "EventDispatchThread.java"
              },
              "line": 105
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12",
          "lines": [
            {
              "function": {
                "name": "void java.awt.EventDispatchThread.run()",
                "filename": "EventDispatchThread.java"
              },
              "line": 92
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x2e6a730ee9809163",
          "lines": [
            {
              "function": {
                "name": "StubRoutines (initial stubs) [call_stub_return_address]"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x914b94",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_helper(JavaValue*, methodHandle const\u0026, JavaCallArguments*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9164da",
          "lines": [
            {
              "function": {
                "name": "JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9e65b9",
          "lines": [
            {
              "function": {
                "name": "thread_entry(JavaThread*, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x8e1a40",
          "lines": [
            {
              "function": {
                "name": "InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xb8adcb",
          "lines": [
            {
              "function": {
                "name": "LinkResolver::lookup_method_in_klasses(LinkInfo const\u0026, bool, bool)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xb8cb22",
          "lines": [
            {
              "function": {
                "name": "LinkResolver::resolve_method(LinkInfo const\u0026, Bytecodes::Code, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xb9153c",
          "lines": [
            {
              "function": {
                "name": "LinkResolver::resolve_static_call(CallInfo\u0026, LinkInfo const\u0026, bool, JavaThread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xb91a01",
          "lines": [
            {
              "function": {
                "name": "LinkResolver::resolve_static_call_or_null(LinkInfo const\u0026)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x5cf038",
          "lines": [
            {
              "function": {
                "name": "ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x5cf2ab",
          "lines": [
            {
              "function": {
                "name": "ciEnv::get_method_by_index_impl(constantPoolHandle const\u0026, int, Bytecodes::Code, ciInstanceKlass*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x5ffe37",
          "lines": [
            {
              "function": {
                "name": "ciBytecodeStream::get_method(bool\u0026, ciSignature**)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x60374e",
          "lines": [
            {
              "function": {
                "name": "ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x603c3a",
          "lines": [
            {
              "function": {
                "name": "ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x608e65",
          "lines": [
            {
              "function": {
                "name": "ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x6098a0",
          "lines": [
            {
              "function": {
                "name": "ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x60a598",
          "lines": [
            {
              "function": {
                "name": "ciTypeFlow::flow_types()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x60a6a1",
          "lines": [
            {
              "function": {
                "name": "ciTypeFlow::do_flow()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x5dfa11",
          "lines": [
            {
              "function": {
                "name": "ciMethod::get_flow_analysis()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4d98aa",
          "lines": [
            {
              "function": {
                "name": "InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile\u0026, bool\u0026)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765351",
          "lines": [
            {
              "function": {
                "name": "Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765ced",
          "lines": [
            {
              "function": {
                "name": "Parse::do_call()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "Parse::do_one_block()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "Parse::do_all_blocks()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "Parse::Parse(JVMState*, ciMethod*, float)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "ParseGenerator::generate(JVMState*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59e148",
          "lines": [
            {
              "function": {
                "name": "PredictedCallGenerator::generate(JVMState*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59e148",
          "lines": [
            {
              "function": {
                "name": "PredictedCallGenerator::generate(JVMState*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "Parse::do_call()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "Parse::do_one_block()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "Parse::do_all_blocks()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "Parse::Parse(JVMState*, ciMethod*, float)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "ParseGenerator::generate(JVMState*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59e148",
          "lines": [
            {
              "function": {
                "name": "PredictedCallGenerator::generate(JVMState*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59e148",
          "lines": [
            {
              "function": {
                "name": "PredictedCallGenerator::generate(JVMState*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59e05d",
          "lines": [
            {
              "function": {
                "name": "PredictedCallGenerator::generate(JVMState*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "Parse::do_call()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "Parse::do_one_block()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "Parse::do_all_blocks()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "Parse::Parse(JVMState*, ciMethod*, float)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "ParseGenerator::generate(JVMState*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59e148",
          "lines": [
            {
              "function": {
                "name": "PredictedCallGenerator::generate(JVMState*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x765d47",
          "lines": [
            {
              "function": {
                "name": "Parse::do_call()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd34374",
          "lines": [
            {
              "function": {
                "name": "Parse::do_one_block()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd347b4",
          "lines": [
            {
              "function": {
                "name": "Parse::do_all_blocks()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd36f34",
          "lines": [
            {
              "function": {
                "name": "Parse::Parse(JVMState*, ciMethod*, float)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59c77a",
          "lines": [
            {
              "function": {
                "name": "ParseGenerator::generate(JVMState*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x675d45",
          "lines": [
            {
              "function": {
                "name": "Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x59b62e",
          "lines": [
            {
              "function": {
                "name": "C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67c233",
          "lines": [
            {
              "function": {
                "name": "CompileBroker::invoke_compiler_on_method(CompileTask*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67f1a3",
          "lines": [
            {
              "function": {
                "name": "CompileBroker::compiler_thread_loop()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0xd13d46",
          "lines": [
            {
              "function": {
                "name": "PlatformMonitor::wait(unsigned long)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xcbad68",
          "lines": [
            {
              "function": {
                "name": "Monitor::wait_without_safepoint_check(unsigned long)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xcd398c",
          "lines": [
            {
              "function": {
                "name": "WatcherThread::sleep() const",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xcd3a90",
          "lines": [
            {
              "function": {
                "name": "WatcherThread::run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x6e535e",
          "lines": [
            {
              "function": {
                "name": "Dependencies::assert_evol_method(ciMethod*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4eccac",
          "lines": [
            {
              "function": {
                "name": "Compilation::compile_method()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4ecfe7",
          "lines": [
            {
              "function": {
                "name": "Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, bool, DirectiveSet*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x4edd4b",
          "lines": [
            {
              "function": {
                "name": "Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67c233",
          "lines": [
            {
              "function": {
                "name": "CompileBroker::invoke_compiler_on_method(CompileTask*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x67f1a3",
          "lines": [
            {
              "function": {
                "name": "CompileBroker::compiler_thread_loop()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x92b50e",
          "lines": [
            {
              "function": {
                "name": "JavaThread::thread_main_inner()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xf7b717",
          "lines": [
            {
              "function": {
                "name": "Thread::call_run()",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0xd075c9",
          "lines": [
            {
              "function": {
                "name": "thread_native_entry(Thread*)",
                "filename": "/home/korniltsev/.local/share/JetBrains/Toolbox/apps/goland/jbr/lib/server/libjvm.so"
              }
            }
          ],
          "mapping": {
            "start": "0x2a3000",
            "limit": "0x1118000",
            "offset": "0x7e27b7c00000",
            "filename": "libjvm.so",
            "build_id": "6fde8df3515ff5211ba4da5fa3aa19407c460932"
          }
        },
        {
          "address": "0x9ca93",
          "lines": [
            {
              "function": {
                "name": "start_thread",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        },
        {
          "address": "0x129c3b",
          "lines": [
            {
              "function": {
                "name": "__GI___clone3",
                "filename": "/usr/lib/x86_64-linux-gnu/libc.so.6"
              }
            }
          ],
          "mapping": {
            "start": "0x28000",
            "limit": "0x1b0000",
            "offset": "0x7846e0600000",
            "filename": "libc.so.6",
            "build_id": "6d64b17fbac799e68da7ebd9985ddf9b5cb375e6"
          }
        }
      ],
      "values": [
        50000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x87cc4b",
          "lines": [
            {
              "function": {
                "name": "ioread32"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9ef74",
          "lines": [
            {
              "function": {
                "name": "nvkm_timer_read"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xac40b",
          "lines": [
            {
              "function": {
                "name": "nvkm_udevice_mthd"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0xae89",
          "lines": [
            {
              "function": {
                "name": "nvkm_object_mthd"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x950c",
          "lines": [
            {
              "function": {
                "name": "nvkm_ioctl_mthd"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x9b94",
          "lines": [
            {
              "function": {
                "name": "nvkm_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11dcbd",
          "lines": [
            {
              "function": {
                "name": "nvkm_client_ioctl"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x468",
          "lines": [
            {
              "function": {
                "name": "nvif_object_mthd"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x11a5",
          "lines": [
            {
              "function": {
                "name": "nvif_device_time"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x47d4",
          "lines": [
            {
              "function": {
                "name": "nvif_timer_wait_test"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x160554",
          "lines": [
            {
              "function": {
                "name": "base507c_ntfy_wait_begun"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15df99",
          "lines": [
            {
              "function": {
                "name": "nv50_wndw_wait_armed"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14f7b9",
          "lines": [
            {
              "function": {
                "name": "nv50_disp_atomic_commit_tail"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14feb1",
          "lines": [
            {
              "function": {
                "name": "nv50_disp_atomic_commit_work"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12bee7",
          "lines": [
            {
              "function": {
                "name": "process_one_work"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12d1c5",
          "lines": [
            {
              "function": {
                "name": "worker_thread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x137d71",
          "lines": [
            {
              "function": {
                "name": "kthread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x68aa6",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x547a",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork_asm"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        }
      ],
      "values": [
        150000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x87cc4b",
          "lines": [
            {
              "function": {
                "name": "ioread32"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x160567",
          "lines": [
            {
              "function": {
                "name": "base507c_ntfy_wait_begun"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x15df99",
          "lines": [
            {
              "function": {
                "name": "nv50_wndw_wait_armed"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14f7b9",
          "lines": [
            {
              "function": {
                "name": "nv50_disp_atomic_commit_tail"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x14feb1",
          "lines": [
            {
              "function": {
                "name": "nv50_disp_atomic_commit_work"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12bee7",
          "lines": [
            {
              "function": {
                "name": "process_one_work"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12d1c5",
          "lines": [
            {
              "function": {
                "name": "worker_thread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x137d71",
          "lines": [
            {
              "function": {
                "name": "kthread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x68aa6",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x547a",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork_asm"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        }
      ],
      "values": [
        150000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x150f38",
          "lines": [
            {
              "function": {
                "name": "finish_task_switch.isra.0"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1240963",
          "lines": [
            {
              "function": {
                "name": "__schedule"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x1240dd2",
          "lines": [
            {
              "function": {
                "name": "schedule"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x12d095",
          "lines": [
            {
              "function": {
                "name": "worker_thread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x137d71",
          "lines": [
            {
              "function": {
                "name": "kthread"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x68aa6",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        },
        {
          "address": "0x547a",
          "lines": [
            {
              "function": {
                "name": "ret_from_fork_asm"
              }
            }
          ],
          "mapping": {
            "start": "0x0",
            "limit": "0x0",
            "offset": "0x0"
          }
        }
      ],
      "values": [
        100000000
      ]
    },
    {
      "locations": [
        {
          "address": "0x1ddc8",
          "lines": [
            {
              "function": {
                "name": "XGetGeometry",
                "filename": "/usr/lib/x86_64-linux-gnu/libX11.so.6.4.0"
              }
            }
          ],
          "mapping": {
            "start": "0x19000",
            "limit": "0xa9000",
            "offset": "0x7350c06c3000",
            "filename": "libX11.so.6.4.0",
            "build_id": "4cb55b1a3e1fcb63bde78cbab338d576fc43e330"
          }
        }
      ],
      "values": [
        50000000
      ]
    }
  ],
  "period": "1000000000"
}