// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/pyroscope-io/pyroscope/pkg/api (interfaces: AdhocService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/pyroscope-io/pyroscope/pkg/model"
	flamebearer "github.com/pyroscope-io/pyroscope/pkg/structs/flamebearer"
)

// MockAdhocService is a mock of AdhocService interface.
type MockAdhocService struct {
	ctrl     *gomock.Controller
	recorder *MockAdhocServiceMockRecorder
}

// MockAdhocServiceMockRecorder is the mock recorder for MockAdhocService.
type MockAdhocServiceMockRecorder struct {
	mock *MockAdhocService
}

// NewMockAdhocService creates a new mock instance.
func NewMockAdhocService(ctrl *gomock.Controller) *MockAdhocService {
	mock := &MockAdhocService{ctrl: ctrl}
	mock.recorder = &MockAdhocServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdhocService) EXPECT() *MockAdhocServiceMockRecorder {
	return m.recorder
}

// GetAllProfiles mocks base method.
func (m *MockAdhocService) GetAllProfiles(arg0 context.Context) ([]model.AdhocProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllProfiles", arg0)
	ret0, _ := ret[0].([]model.AdhocProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllProfiles indicates an expected call of GetAllProfiles.
func (mr *MockAdhocServiceMockRecorder) GetAllProfiles(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllProfiles", reflect.TypeOf((*MockAdhocService)(nil).GetAllProfiles), arg0)
}

// GetProfileByID mocks base method.
func (m *MockAdhocService) GetProfileByID(arg0 context.Context, arg1 string) (*flamebearer.FlamebearerProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfileByID", arg0, arg1)
	ret0, _ := ret[0].(*flamebearer.FlamebearerProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfileByID indicates an expected call of GetProfileByID.
func (mr *MockAdhocServiceMockRecorder) GetProfileByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileByID", reflect.TypeOf((*MockAdhocService)(nil).GetProfileByID), arg0, arg1)
}

// GetProfileDiffByID mocks base method.
func (m *MockAdhocService) GetProfileDiffByID(arg0 context.Context, arg1 model.GetAdhocProfileDiffByIDParams) (*flamebearer.FlamebearerProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfileDiffByID", arg0, arg1)
	ret0, _ := ret[0].(*flamebearer.FlamebearerProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfileDiffByID indicates an expected call of GetProfileDiffByID.
func (mr *MockAdhocServiceMockRecorder) GetProfileDiffByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileDiffByID", reflect.TypeOf((*MockAdhocService)(nil).GetProfileDiffByID), arg0, arg1)
}

// UploadProfile mocks base method.
func (m *MockAdhocService) UploadProfile(arg0 context.Context, arg1 model.UploadAdhocProfileParams) (*flamebearer.FlamebearerProfile, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadProfile", arg0, arg1)
	ret0, _ := ret[0].(*flamebearer.FlamebearerProfile)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// UploadProfile indicates an expected call of UploadProfile.
func (mr *MockAdhocServiceMockRecorder) UploadProfile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadProfile", reflect.TypeOf((*MockAdhocService)(nil).UploadProfile), arg0, arg1)
}
