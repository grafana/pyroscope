// Code generated by protoc-gen-connect-go-mux. DO NOT EDIT.
//
// Source: experiment/metastore/raftnode/raftnodepb/raft_node.proto

package raftnodepbconnect

import (
	connect "connectrpc.com/connect"
	mux "github.com/gorilla/mux"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion0_1_0

// RegisterRaftNodeServiceHandler register an HTTP handler to a mux.Router from the service
// implementation.
func RegisterRaftNodeServiceHandler(mux *mux.Router, svc RaftNodeServiceHandler, opts ...connect.HandlerOption) {
	mux.Handle("/raft_node.RaftNodeService/ReadIndex", connect.NewUnaryHandler(
		"/raft_node.RaftNodeService/ReadIndex",
		svc.ReadIndex,
		opts...,
	))
	mux.Handle("/raft_node.RaftNodeService/NodeInfo", connect.NewUnaryHandler(
		"/raft_node.RaftNodeService/NodeInfo",
		svc.NodeInfo,
		opts...,
	))
	mux.Handle("/raft_node.RaftNodeService/RemoveNode", connect.NewUnaryHandler(
		"/raft_node.RaftNodeService/RemoveNode",
		svc.RemoveNode,
		opts...,
	))
	mux.Handle("/raft_node.RaftNodeService/AddNode", connect.NewUnaryHandler(
		"/raft_node.RaftNodeService/AddNode",
		svc.AddNode,
		opts...,
	))
	mux.Handle("/raft_node.RaftNodeService/DemoteLeader", connect.NewUnaryHandler(
		"/raft_node.RaftNodeService/DemoteLeader",
		svc.DemoteLeader,
		opts...,
	))
	mux.Handle("/raft_node.RaftNodeService/PromoteToLeader", connect.NewUnaryHandler(
		"/raft_node.RaftNodeService/PromoteToLeader",
		svc.PromoteToLeader,
		opts...,
	))
}
