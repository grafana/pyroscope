name: ci
on:
  push:
    branches:
      - main

  pull_request:

permissions:
  contents: read

concurrency:
  # Cancel any running workflow for the same branch when new commits are pushed.
  # We group both by ref_name (available when CI is triggered by a push to a branch/tag)
  # and head_ref (available when CI is triggered by a PR).
  group: "${{ github.ref_name }}-${{ github.head_ref }}"
  cancel-in-progress: true

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: Install Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: 1.23.10
      - name: Format
        run: make fmt check/unstaged-changes
  check-generated:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: Install Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: 1.23.10
      - name: Check generated files
        run: make generate check/unstaged-changes
  test:
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-24.04
          - arch: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: Install Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: 1.23.10
      - name: Go Mod
        run: make check/go/mod
      - name: Test
        run: make go/test
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: Install Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: 1.23.10
      - name: Run linter
        run: make lint
      - name: Check helm manifests
        run: make helm/check check/unstaged-changes

  test-docs:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out code"
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683" # v4
        with:
          persist-credentials: false
      - name: "Test docs"
        run: make docs/test

  build-image:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Set up go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: 1.23.10
      - uses: actions/setup-node@3235b876344d2a9aa001b8d1453c930bba69e610 # v3
        with:
          node-version: 20
          cache: yarn
      - name: Build image Pyroscope
        run: make docker-image/pyroscope/build-multiarch "BUILDX_ARGS=--cache-from=type=gha --cache-to=type=gha"

  build-push:
    if: github.event_name == 'push' && github.repository == 'grafana/pyroscope'
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.push-metadata.outputs.image }}
      image-digest: ${{ steps.push-metadata.outputs.image-digest }}
      image-tag: ${{ steps.push-metadata.outputs.image-tag }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Set up go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: 1.23.10
      # login to docker hub
      - id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@28361cdb22223e5f1e34358c86c20908e7248760
        with:
          common_secrets: |
            DOCKERHUB_USERNAME=dockerhub:username
            DOCKERHUB_PASSWORD=dockerhub:password
      - uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2
        name: Login to Docker Hub
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}
      - name: Pyroscope Build & push multi-arch image
        id: build-push
        run: |
          make docker-image/pyroscope/push-multiarch "BUILDX_ARGS=--cache-from=type=gha --cache-to=type=gha"
      - name: Get image, image tag and image digest
        id: push-metadata
        run: |
          image=$(cat ./.docker-image-name-pyroscope)
          echo "image=${image}" >> "$GITHUB_OUTPUT"
          echo "image-tag=${image#*:}" >> "$GITHUB_OUTPUT"
          echo "image-digest=$(cat ./.docker-image-digest-pyroscope)" >> "$GITHUB_OUTPUT"

  deploy-dev:
    permissions:
      contents: read
      id-token: write
    if: github.event_name == 'push' && github.repository == 'grafana/pyroscope' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build-push]
    steps:
    - id: "submit-argowfs-deployment"
      name: "Submit Argo Workflows deployment"
      uses: grafana/shared-workflows/actions/trigger-argo-workflow@af9b0c52635d39023136fb9312a354f91d9b2bfd
      with:
        namespace: "phlare-cd"
        workflow_template: "deploy-pyroscope-dev"
        parameters: |
          dockertag=${{ needs.build-push.outputs.image-tag }}
          commit=${{ github.sha }}
    - name: Print URI
      run: |
        echo "URI: ${{ steps.submit-argowfs-deployment.outputs.uri }}"
