name: goreleaser-weekly

on:
  push:
    branches:
      - 'weekly/f*'

permissions:
  contents: write
  id-token: write

jobs:
  goreleaser-weekly:
    runs-on: ubuntu-x64-large
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set GORELEASER_CURRENT_TAG
        run: echo "GORELEASER_CURRENT_TAG=v0.0.0-$(./tools/image-tag)" >> $GITHUB_ENV
      - name: Set WEEKLY_IMAGE_TAG
        run: echo "WEEKLY_IMAGE_TAG=$(./tools/image-tag)" >> $GITHUB_ENV
      - name: Set GORELEASER_STRIP_DEBUG_INFO=false, so binaries are not stripped of debug info
        run: echo "GORELEASER_STRIP_DEBUG_INFO=false" >> $GITHUB_ENV
      # Forces goreleaser to use the correct previous tag for the changelog
      - name: Set GORELEASER_PREVIOUS_TAG
        run: echo "GORELEASER_PREVIOUS_TAG=$(git tag -l --sort=-version:refname | grep -E '^weekly-.*' | head -n 2 | tail -1)" >> $GITHUB_ENV
      - run: git fetch --force --tags
      - name: Create tags for this weekly release
        run: |
          git tag "$GORELEASER_CURRENT_TAG"
          git tag "$WEEKLY_IMAGE_TAG"
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v5
        with:
          go-version: "1.24.6"
          cache: false
      # setup docker buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v2
      # login to docker hub
      - id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@28361cdb22223e5f1e34358c86c20908e7248760
        with:
          common_secrets: |
            DOCKERHUB_USERNAME=dockerhub:username
            DOCKERHUB_PASSWORD=dockerhub:password
      - uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v2
        name: Login to Docker Hub
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 20
          package-manager-cache: false
      - run: make frontend/build
      - uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6
        with:
          # ensure this aligns with the version specified in the /Makefile
          version: v2.7.0
          args: release --clean --skip=publish --timeout 60m
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push per architecture images and create multi-arch manifest
        run: |
          set -eu -o pipefail
          set +x
          IMAGE_AMMENDS=()

          # the grep needs to remove an extra v, which is in the git tag, but not in the image tag
          for image in $(docker images --format '{{.Repository}}:{{.Tag}}' | grep "grafana/pyroscope:${GORELEASER_CURRENT_TAG:1}-"); do
            new_image="${image/0.0.0-/}"
            docker tag "${image}" "${new_image}"
            docker push "${new_image}"
            IMAGE_AMMENDS+=( "--amend" "${new_image}" )
          done

          if [[ ! " ${IMAGE_AMMENDS[*]} " =~ -amd64 ]]; then
            echo "expected to contain an amd64 image"
            exit 1
          fi
          if [[ ! " ${IMAGE_AMMENDS[*]} " =~ -arm64 ]]; then
            echo "expected to contain an arm64 image"
            exit 1
          fi

          docker manifest create "grafana/pyroscope:${WEEKLY_IMAGE_TAG}" "${IMAGE_AMMENDS[@]}"
          docker manifest push "grafana/pyroscope:${WEEKLY_IMAGE_TAG}"
      - name: Push git tag for weekly release
        run: git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/grafana/pyroscope.git" "${WEEKLY_IMAGE_TAG}" 2> /dev/null
