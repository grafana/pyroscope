// This is an example grafana agent config to set up eBPF profiling in kubernetes.
// for more info see https://grafana.com/docs/pyroscope/latest/configure-client/grafana-agent/ebpf/setup-kubernetes/

discovery.kubernetes "local_pods" {
    selectors {
      field = "spec.nodeName=" + env("HOSTNAME") // Note: this assume HOSTNAME is set to the node name
      role = "pod"
    }
    role = "pod"
}

discovery.relabel "specific_pods" {
  targets = discovery.kubernetes.local_pods.targets
  rule {
    action = "drop"
    regex = "Succeeded|Failed|Completed"
    source_labels = ["__meta_kubernetes_pod_phase"]
  }
  rule {
    action = "replace"
    source_labels = ["__meta_kubernetes_namespace"]
    target_label = "namespace"
  }
  rule {
    action = "replace"
    source_labels = ["__meta_kubernetes_pod_name"]
    target_label = "pod"
  }
  rule {
    action = "replace"
    source_labels = ["__meta_kubernetes_pod_node_name"]
    target_label = "node"
  }
  rule {
    action = "replace"
    source_labels = ["__meta_kubernetes_pod_container_name"]
    target_label = "container"
  }
  // provide arbitrary service_name label, otherwise it will be set to {__meta_kubernetes_namespace}/{__meta_kubernetes_pod_container_name}
  rule {
    action = "replace"
    regex = "(.*)@(.*)"
    replacement = "ebpf/k8s/${1}/${2}"
    separator = "@"
    source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
    target_label = "service_name"
  }
  // Filter specific targets to profile
  rule {
    source_labels = ["service_name"]
    regex = "(ebpf/grafana-agent/agent|ebpf/pyroscope/pyroscope)"
    action = "keep"
  }
}

pyroscope.ebpf "instance" {
    forward_to = [pyroscope.write.endpoint.receiver]
    targets = discovery.relabel.specific_pods.output
}

pyroscope.write "endpoint" {
    url = "http://pyroscope:4040"
    // url = "<Grafana Cloud URL>"
    // basic_auth {
    //  username = "<Grafana Cloud User>"
    //  password = "<Grafana Cloud Password>"
    // }
}
