{
  "flamebearer": {
    "names": [
      "total",
      "runtime.mstart",
      "runtime.mstart1",
      "runtime.templateThread",
      "runtime.notesleep",
      "runtime.futexsleep",
      "runtime.futex",
      "runtime.sysmon",
      "runtime.usleep",
      "runtime.unlockWithRank",
      "runtime.unlock2",
      "runtime.notetsleep",
      "runtime.notetsleep_internal",
      "runtime.mcall",
      "runtime.park_m",
      "runtime.schedule",
      "runtime.findrunnable",
      "runtime.stopm",
      "runtime.netpoll",
      "runtime.epollwait",
      "runtime.checkTimers",
      "runtime.runtimer",
      "runtime.runOneTimer",
      "runtime.bgscavenge.func1",
      "runtime.wakeScavenger",
      "runtime.injectglist",
      "runtime.injectglist.func1",
      "runtime.startm",
      "runtime.notewakeup",
      "runtime.futexwakeup",
      "runtime.gcBgMarkWorker",
      "runtime.systemstack",
      "runtime.gcBgMarkWorker.func2",
      "runtime.gcDrain",
      "runtime.scanobject",
      "runtime.pageIndexOf",
      "runtime.markBits.isMarked",
      "runtime.markroot",
      "runtime.markroot.func1",
      "runtime.suspendG",
      "runtime.procyield",
      "runtime.scanstack",
      "runtime.gentraceback",
      "runtime.(*gcWork).tryGet",
      "runtime.bgscavenge",
      "runtime.bgscavenge.func2",
      "runtime.(*pageAlloc).scavenge",
      "runtime.(*pageAlloc).scavengeOne",
      "runtime.(*pageAlloc).scavengeRangeLocked",
      "runtime.sysUnused",
      "runtime.madvise",
      "google.golang.org/grpc.(*Server).serveStreams.func1.2",
      "google.golang.org/grpc.(*Server).handleStream",
      "runtime.mapaccess2_faststr",
      "google.golang.org/grpc.(*Server).processUnaryRPC",
      "google.golang.org/grpc.recvAndDecompress",
      "google.golang.org/grpc.(*parser).recvMsg",
      "google.golang.org/grpc.(*Server).handleRawConn.func1",
      "google.golang.org/grpc.(*Server).serveStreams",
      "google.golang.org/grpc/internal/transport.(*http2Server).HandleStreams",
      "golang.org/x/net/http2.(*Framer).ReadFrame",
      "golang.org/x/net/http2.parseHeadersFrame",
      "runtime.newobject",
      "runtime.nextFreeFast",
      "golang.org/x/net/http2.(*Framer).readMetaFrame",
      "golang.org/x/net/http2/hpack.(*Decoder).Write",
      "golang.org/x/net/http2/hpack.(*Decoder).parseHeaderFieldRepr",
      "golang.org/x/net/http2/hpack.(*Decoder).parseFieldLiteral",
      "golang.org/x/net/http2/hpack.(*Decoder).readString",
      "golang.org/x/net/http2/hpack.huffmanDecode",
      "golang.org/x/net/http2.(*Framer).checkFrameOrder",
      "github.com/pyroscope-io/pyroscope/pkg/agent/upstream/remote.(*Remote).handleJobs",
      "github.com/pyroscope-io/pyroscope/pkg/agent/upstream/remote.(*Remote).safeUpload",
      "github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*Trie).Bytes",
      "github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*Trie).Serialize",
      "runtime.growslice",
      "runtime.mallocgc",
      "github.com/pyroscope-io/pyroscope/pkg/agent.(*ProfileSession).takeSnapshots",
      "github.com/pyroscope-io/pyroscope/pkg/agent/gospy.(*GoSpy).Snapshot",
      "runtime/pprof.writeHeap",
      "runtime/pprof.writeHeapInternal",
      "runtime/pprof.writeHeapProto",
      "runtime/pprof.(*profileBuilder).build",
      "compress/flate.(*Writer).Close",
      "compress/flate.(*compressor).close",
      "compress/flate.(*compressor).encSpeed",
      "compress/flate.(*huffmanBitWriter).writeBlockDynamic",
      "compress/flate.(*huffmanBitWriter).indexTokens",
      "compress/flate.(*huffmanEncoder).generate",
      "compress/flate.(*huffmanEncoder).bitCounts",
      "runtime/pprof.(*profileBuilder).appendLocsForStack",
      "runtime.mapaccess2_fast64",
      "runtime.funcline",
      "runtime.funcline1",
      "runtime.pcvalue",
      "runtime.step",
      "github.com/pyroscope-io/pyroscope/pkg/convert.(*Profile).Get",
      "github.com/pyroscope-io/pyroscope/pkg/convert.(*Profile).findFunctionName",
      "github.com/pyroscope-io/pyroscope/pkg/convert.(*Profile).findLocation",
      "sort.Search",
      "github.com/pyroscope-io/pyroscope/pkg/convert.(*Profile).findLocation.func1",
      "github.com/pyroscope-io/pyroscope/pkg/convert.(*Profile).findFunction",
      "github.com/pyroscope-io/pyroscope/pkg/convert.(*Profile).findFunction.func1",
      "github.com/pyroscope-io/pyroscope/pkg/agent/gospy.(*GoSpy).Snapshot.func3",
      "github.com/pyroscope-io/pyroscope/pkg/agent.(*ProfileSession).takeSnapshots.func1",
      "github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*Trie).Insert",
      "github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.newTrieNode",
      "github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*trieNode).findNodeAt",
      "runtime.(*mcache).nextFree",
      "runtime.(*mcache).refill",
      "runtime.(*mcentral).uncacheSpan",
      "runtime.(*spanSet).push",
      "github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*trieNode).insert",
      "runtime.gcAssistAlloc",
      "runtime.gcAssistAlloc.func1",
      "runtime.gcAssistAlloc1",
      "runtime.gcDrainN",
      "runtime.findObject",
      "github.com/pyroscope-io/pyroscope/pkg/agent/gospy.getHeapProfile",
      "io/ioutil.ReadAll",
      "io/ioutil.readAll",
      "bytes.(*Buffer).ReadFrom",
      "compress/gzip.(*Reader).Read",
      "compress/flate.(*decompressor).Read",
      "compress/flate.(*dictDecoder).tryWriteCopy",
      "compress/flate.(*decompressor).nextBlock",
      "compress/flate.(*decompressor).huffmanBlock",
      "compress/flate.(*decompressor).huffSym",
      "runtime.asyncPreempt",
      "bytes.(*Reader).ReadByte",
      "github.com/pyroscope-io/pyroscope/pkg/convert.ParsePprof",
      "google.golang.org/protobuf/proto.Unmarshal",
      "google.golang.org/protobuf/proto.UnmarshalOptions.unmarshal",
      "google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshal",
      "google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshalPointer",
      "google.golang.org/protobuf/internal/impl.consumeMessageSliceInfo",
      "reflect.New",
      "reflect.unsafe_New",
      "github.com/pyroscope-io/pyroscope/pkg/agent.(*ProfileSession).reset",
      "github.com/pyroscope-io/pyroscope/pkg/agent.(*ProfileSession).uploadTries",
      "github.com/pyroscope-io/pyroscope/pkg/structs/transporttrie.(*Trie).Diff"
    ],
    "levels": [
      [0, 57, 0, 0],
      [
        0, 27, 0, 77, 0, 1, 0, 71, 0, 3, 0, 57, 0, 2, 0, 51, 0, 2, 0, 44, 0, 5,
        0, 30, 0, 11, 0, 13, 0, 6, 0, 1
      ],
      [
        0, 1, 0, 138, 0, 26, 0, 78, 0, 1, 0, 72, 0, 3, 0, 58, 0, 2, 0, 52, 0, 2,
        0, 31, 0, 5, 0, 31, 0, 11, 0, 14, 0, 6, 0, 2
      ],
      [
        0, 1, 0, 139, 0, 4, 0, 118, 0, 19, 2, 96, 0, 3, 0, 79, 0, 1, 0, 73, 0,
        3, 0, 59, 0, 1, 0, 54, 0, 1, 1, 53, 0, 2, 0, 45, 0, 5, 0, 32, 0, 11, 0,
        15, 0, 5, 0, 7, 0, 1, 0, 3
      ],
      [
        0, 1, 0, 140, 0, 1, 0, 130, 0, 3, 0, 119, 2, 8, 0, 103, 0, 9, 1, 97, 0,
        3, 0, 80, 0, 1, 0, 74, 0, 3, 0, 60, 0, 1, 0, 55, 1, 2, 0, 46, 0, 5, 0,
        33, 0, 11, 0, 16, 0, 1, 0, 11, 0, 1, 0, 9, 0, 3, 3, 8, 0, 1, 0, 4
      ],
      [
        0, 1, 0, 107, 0, 1, 0, 131, 0, 3, 0, 120, 2, 8, 0, 104, 1, 4, 0, 101, 0,
        4, 0, 98, 0, 3, 0, 81, 0, 1, 0, 75, 0, 1, 1, 70, 0, 1, 0, 64, 0, 1, 0,
        61, 0, 1, 1, 56, 1, 2, 0, 47, 0, 1, 1, 43, 0, 2, 0, 37, 0, 2, 0, 34, 0,
        2, 0, 20, 0, 7, 1, 18, 0, 2, 0, 17, 0, 1, 0, 12, 0, 1, 1, 10, 3, 1, 0, 5
      ],
      [
        0, 1, 1, 76, 0, 1, 0, 132, 0, 3, 0, 121, 2, 8, 0, 105, 1, 4, 0, 99, 0,
        4, 0, 99, 0, 1, 0, 92, 0, 1, 0, 90, 0, 1, 0, 82, 0, 1, 1, 76, 1, 1, 0,
        65, 0, 1, 0, 62, 2, 2, 0, 48, 1, 2, 0, 38, 0, 1, 1, 36, 0, 1, 1, 35, 0,
        2, 0, 21, 1, 6, 6, 19, 0, 2, 0, 4, 0, 1, 0, 5, 4, 1, 1, 6
      ],
      [
        1, 1, 0, 133, 0, 3, 0, 122, 2, 7, 5, 107, 0, 1, 1, 106, 1, 4, 4, 102, 0,
        4, 4, 100, 0, 1, 0, 93, 0, 1, 1, 91, 0, 1, 0, 83, 2, 1, 0, 66, 0, 1, 1,
        63, 2, 2, 0, 49, 1, 1, 0, 41, 0, 1, 0, 39, 2, 2, 0, 22, 7, 2, 0, 5, 0,
        1, 1, 6
      ],
      [
        1, 1, 0, 134, 0, 3, 0, 123, 7, 1, 0, 112, 0, 1, 0, 76, 10, 1, 0, 94, 1,
        1, 0, 84, 2, 1, 0, 67, 3, 2, 2, 50, 1, 1, 1, 42, 0, 1, 1, 40, 2, 2, 0,
        23, 7, 2, 2, 6
      ],
      [
        1, 1, 0, 135, 0, 1, 0, 126, 0, 1, 0, 125, 0, 1, 1, 124, 7, 1, 0, 62, 0,
        1, 0, 108, 10, 1, 1, 95, 1, 1, 0, 85, 2, 1, 0, 68, 10, 2, 0, 24
      ],
      [
        1, 1, 0, 136, 0, 1, 0, 127, 0, 1, 0, 126, 8, 1, 0, 76, 0, 1, 0, 109, 12,
        1, 0, 86, 2, 1, 1, 69, 10, 2, 0, 25
      ],
      [
        1, 1, 0, 137, 0, 1, 1, 129, 0, 1, 0, 127, 8, 1, 0, 113, 0, 1, 0, 110,
        12, 1, 0, 87, 13, 2, 0, 26
      ],
      [
        1, 1, 1, 76, 1, 1, 1, 128, 8, 1, 0, 31, 0, 1, 1, 111, 12, 1, 0, 88, 13,
        2, 0, 27
      ],
      [12, 1, 0, 114, 13, 1, 1, 89, 13, 2, 0, 28],
      [12, 1, 0, 115, 27, 2, 0, 29],
      [12, 1, 0, 116, 27, 2, 2, 6],
      [12, 1, 0, 34],
      [12, 1, 1, 117]
    ],
    "numTicks": 57,
    "maxSelf": 6,
    "spyName": "gospy",
    "sampleRate": 100,
    "units": "samples",
    "format": "single"
  },
  "metadata": {
    "format": "single",
    "sampleRate": 100,
    "spyName": "gospy",
    "units": "samples"
  },
  "timeline": {
    "startTime": 1634591500,
    "samples": [12, 16, 16, 17],
    "durationDelta": 10
  },
  "groups": {}
}
